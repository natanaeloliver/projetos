<html><style>body {
color: #000000;
background-color: #FFFFFF;
font-size: 24;
font-family: Serif;
font-weight: bold;
font-style: italic;
}
h1, h2, h3, h4, h5, h6 {
color: #000000;
background-color: #FFFFFF;
font-size: 24;
font-family: Serif;
font-weight: bold;
font-style: italic;
}
table, pre {
color: #000000;
background-color: #FFFFFF;
font-size: 16;
font-family: Serif;
font-weight: normal;
font-style: normal;
}

ul, #myUL {
  list-style-type: none;
}

#myUL {
  margin: 0;
  padding: 0;
}

.caret, .dropDownCaret {
  cursor: pointer;
}

.caret::before {
	content: "\25B6";
	color: black;
	display: inline - block;
	margin - right: 6px;
}

.dropDownCaret::before {
	content: "\25BC";
	color: black;
	display: inline - block;
	margin - right: 6px;
	float: right;
}


.nested {
  display: none;
}

.active {
  display: block;
}
</style><body><br></br><h1><div>Power BI Documentation</div></h1><br></br><hr></hr><h2><div>Generated by <a href="http://radacad.com/power-bi-helper">Power BI Helper</a> (Copyright &copy; <a href="http://radacad.com">RADACAD</a>).</div><br></br><div>Date: 03/08/2023 13:54:28</div><br></br></h2><h1><div>------------------******   Visualization    ******---------------------</div></h1><br></br><h2><div>File: Análise dos Chamados de TI.pbix</div></h2><br></br><h3><div>Path: C:\Users\natan\OneDrive\Documentos\GitHub\Projetos\Unimed Vale dos Sinos\Análise dos Chamados de TI.pbix</div></h2><br></br><h1><div>------------------******   Model    ******---------------------</div></h1><br></br><h2><div>Model: Análise dos Chamados de TI</div></h2><br></br><hr></hr><br></br><h3><div>List of Tables:</div></h3><br></br><table border='1px' cellpadding='1' cellspacing='1'><tr ><td >Name</td><td >Description</td><td >Storage Mode</td><td >Source</td><td >Is Hidden</td></tr><tr ><td >col_colabo</td><td ></td><td >Import</td><td ><pre>let
    Fonte = Json.Document(File.Contents("C:\Users\natan\OneDrive\Documentos\GitHub\Projetos\Unimed Vale dos Sinos\par_solici\col_colabo.json")),
    #"Convertido para Tabela" = Table.FromList(Fonte, Splitter.SplitByNothing(), null, null, ExtraValues.Error),
    #"Column1 Expandido" = Table.ExpandRecordColumn(#"Convertido para Tabela", "Column1", {"col_id", "col_matric", "col_nome", "col_email", "col_ramal", "col_setor", "col_login", "col_dtnasc", "col_passwd", "col_status", "col_ccusto", "col_verba", "col_tpverb", "col_foto", "col_real", "col_unidad", "col_filial", "col_redire", "col_audita", "col_sistem", "col_recada", "col_newpsw", "col_rg", "col_cpf"}, {"col_id", "col_matric", "col_nome", "col_email", "col_ramal", "col_setor", "col_login", "col_dtnasc", "col_passwd", "col_status", "col_ccusto", "col_verba", "col_tpverb", "col_foto", "col_real", "col_unidad", "col_filial", "col_redire", "col_audita", "col_sistem", "col_recada", "col_newpsw", "col_rg", "col_cpf"}),
    #"Colunas Removidas" = Table.RemoveColumns(#"Column1 Expandido",{"col_email", "col_ramal", "col_login", "col_dtnasc", "col_passwd", "col_ccusto", "col_verba", "col_tpverb", "col_foto", "col_real", "col_unidad", "col_filial", "col_redire", "col_audita", "col_sistem", "col_recada", "col_newpsw", "col_rg", "col_cpf"}),
    #"Texto Aparado" = Table.TransformColumns(#"Colunas Removidas",{{"col_nome", Text.Trim, type text}}),
    #"Coluna Mesclada Inserida" = Table.AddColumn(#"Texto Aparado", "Mesclado", each Text.Combine({"Colaborador ", Text.From([col_id], "pt-BR")}), type text),
    #"Colunas Removidas1" = Table.RemoveColumns(#"Coluna Mesclada Inserida",{"col_nome"}),
    #"Colunas Renomeadas" = Table.RenameColumns(#"Colunas Removidas1",{{"Mesclado", "col_nome"}})
in
    #"Colunas Renomeadas"</pre></td><td >False</td></tr><tr ><td >DateTableTemplate_518917fd-d445-4dc8-b86c-6b0e9bb93adc</td><td ></td><td >Import</td><td ><pre>Calendar(Date(2015,1,1), Date(2015,1,1))</pre></td><td >True</td></tr><tr ><td >col_setor</td><td ></td><td >Import</td><td ><pre>let
    Fonte = Json.Document(File.Contents("C:\Users\natan\OneDrive\Documentos\GitHub\Projetos\Unimed Vale dos Sinos\par_solici\col_setor.json")),
    #"Convertido para Tabela" = Table.FromList(Fonte, Splitter.SplitByNothing(), null, null, ExtraValues.Error),
    #"Column1 Expandido" = Table.ExpandRecordColumn(#"Convertido para Tabela", "Column1", {"set_id", "set_descri", "set_mural", "set_superv", "set_status", "set_pesqui", "set_real", "set_centro"}, {"set_id", "set_descri", "set_mural", "set_superv", "set_status", "set_pesqui", "set_real", "set_centro"}),
    #"Coluna Mesclada Inserida" = Table.AddColumn(#"Column1 Expandido", "Mesclado", each Text.Combine({"Setor ", Text.From([set_id], "pt-BR")}), type text),
    #"Colunas Removidas" = Table.RemoveColumns(#"Coluna Mesclada Inserida",{"set_descri"}),
    #"Colunas Renomeadas" = Table.RenameColumns(#"Colunas Removidas",{{"Mesclado", "set_descri"}})
in
    #"Colunas Renomeadas"</pre></td><td >False</td></tr><tr ><td >par_avalia</td><td ></td><td >Import</td><td ><pre>let
    Fonte = Json.Document(File.Contents("C:\Users\natan\OneDrive\Documentos\GitHub\Projetos\Unimed Vale dos Sinos\par_solici\par_avalia.json")),
    #"Convertido para Tabela" = Table.FromList(Fonte, Splitter.SplitByNothing(), null, null, ExtraValues.Error),
    #"Column1 Expandido" = Table.ExpandRecordColumn(#"Convertido para Tabela", "Column1", {"r_e_c_n_o_", "ava_valor", "ava_descri", "ava_consat", "d_e_l_e_t_"}, {"r_e_c_n_o_", "ava_valor", "ava_descri", "ava_consat", "d_e_l_e_t_"}),
    #"Colunas Removidas" = Table.RemoveColumns(#"Column1 Expandido",{"d_e_l_e_t_"}),
    #"Colocar Cada Palavra Em Maiúscula" = Table.TransformColumns(#"Colunas Removidas",{{"ava_descri", Text.Proper, type text}})
in
    #"Colocar Cada Palavra Em Maiúscula"</pre></td><td >False</td></tr><tr ><td >par_classi</td><td ></td><td >Import</td><td ><pre>let
    Fonte = Json.Document(File.Contents("C:\Users\natan\OneDrive\Documentos\GitHub\Projetos\Unimed Vale dos Sinos\par_solici\par_classi.json")),
    #"Convertido para Tabela" = Table.FromList(Fonte, Splitter.SplitByNothing(), null, null, ExtraValues.Error),
    #"Column1 Expandido" = Table.ExpandRecordColumn(#"Convertido para Tabela", "Column1", {"cla_id", "cla_codigo", "cla_descri", "cla_situac", "d_e_l_e_t_"}, {"cla_id", "cla_codigo", "cla_descri", "cla_situac", "d_e_l_e_t_"}),
    #"Colunas Removidas" = Table.RemoveColumns(#"Column1 Expandido",{"cla_situac", "d_e_l_e_t_"}),
    #"Valor Substituído" = Table.ReplaceValue(#"Colunas Removidas","Parametro","Parâmetro",Replacer.ReplaceText,{"cla_descri"}),
    #"Valor Substituído1" = Table.ReplaceValue(#"Valor Substituído","Inclusao","Inclusão",Replacer.ReplaceText,{"cla_descri"}),
    #"Coluna Condicional Adicionada" = Table.AddColumn(#"Valor Substituído1", "Tipo Macro", each 
if [cla_codigo] = "AU" then "Geral"
else if Text.Contains([cla_descri], "Parâmetro") then "Infraestrutura" //IP,CP,AP,AU,AN
else if Text.Contains([cla_descri], "Regulamentação") then "Sistemas" //RG,AR
else if Text.Contains([cla_descri], "Consultoria") then "Projetos" 
else if [cla_descri] = "Regularização de Contratos" then "Sistema" //RC
else "Geral")
in
    #"Coluna Condicional Adicionada"</pre></td><td >False</td></tr><tr ><td >par_regneg</td><td ></td><td >Import</td><td ><pre>let
    Fonte = Json.Document(File.Contents("C:\Users\natan\OneDrive\Documentos\GitHub\Projetos\Unimed Vale dos Sinos\par_solici\par_regneg.json")),
    #"Convertido para Tabela" = Table.FromList(Fonte, Splitter.SplitByNothing(), null, null, ExtraValues.Error),
    #"Column1 Expandido" = Table.ExpandRecordColumn(#"Convertido para Tabela", "Column1", {"reg_id", "reg_codigo", "reg_descri", "reg_situac", "d_e_l_e_t_"}, {"reg_id", "reg_codigo", "reg_descri", "reg_situac", "d_e_l_e_t_"}),
    #"Colunas Removidas" = Table.RemoveColumns(#"Column1 Expandido",{"d_e_l_e_t_"}),
    #"Índice Adicionado" = Table.AddIndexColumn(#"Colunas Removidas", "Índice", 0, 1, Int64.Type),
    #"Coluna Mesclada Inserida" = Table.AddColumn(#"Índice Adicionado", "Mesclado", each Text.Combine({"Serviço ", Text.From([Índice]+1, "pt-BR")}), type text),
    #"Colunas Removidas1" = Table.RemoveColumns(#"Coluna Mesclada Inserida",{"reg_descri"}),
    #"Colunas Renomeadas" = Table.RenameColumns(#"Colunas Removidas1",{{"Mesclado", "reg_descri"}})
in
    #"Colunas Renomeadas"</pre></td><td >False</td></tr><tr ><td >par_solici</td><td ></td><td >Import</td><td ><pre>let
    Fonte = Json.Document(File.Contents("C:\Users\natan\OneDrive\Documentos\GitHub\Projetos\Unimed Vale dos Sinos\par_solici\par_solici.json")),
    #"Convertido para Tabela" = Table.FromList(Fonte, Splitter.SplitByNothing(), null, null, ExtraValues.Error),
    #"Column1 Expandido" = Table.ExpandRecordColumn(#"Convertido para Tabela", "Column1", {"frm_id", "frm_datinc", "frm_colsol", "frm_setsol", "frm_colpre", "frm_ramal", "frm_motivo", "frm_descri", "frm_colcap", "frm_datcap", "frm_dtconc", "frm_colcon", "frm_priori", "frm_aplica", "frm_observ", "frm_dtconf", "frm_confpo", "frm_situac", "frm_chave", "frm_status", "frm_horas", "frm_minut", "frm_avalia", "frm_obsava", "frm_tipoco", "frm_regneg", "frm_denvig", "frm_reavig", "d_e_l_e_t_", "frm_lembre", "frm_parece", "frm_acoes", "frm_limite", "frm_solpri", "frm_qtderg"}, {"frm_id", "frm_datinc", "frm_colsol", "frm_setsol", "frm_colpre", "frm_ramal", "frm_motivo", "frm_descri", "frm_colcap", "frm_datcap", "frm_dtconc", "frm_colcon", "frm_priori", "frm_aplica", "frm_observ", "frm_dtconf", "frm_confpo", "frm_situac", "frm_chave", "frm_status", "frm_horas", "frm_minut", "frm_avalia", "frm_obsava", "frm_tipoco", "frm_regneg", "frm_denvig", "frm_reavig", "d_e_l_e_t_", "frm_lembre", "frm_parece", "frm_acoes", "frm_limite", "frm_solpri", "frm_qtderg"}),
    #"Consultas Mescladas" = Table.NestedJoin(#"Column1 Expandido", {"frm_colsol"}, col_colabo, {"col_id"}, "col_colabo", JoinKind.LeftOuter),
    #"col_colabo Expandido" = Table.ExpandTableColumn(#"Consultas Mescladas", "col_colabo", {"col_nome", "col_setor"}, {"frm_colsol_nome", "frm_colsol_setor"}),
    #"Consultas Mescladas1" = Table.NestedJoin(#"col_colabo Expandido", {"frm_setsol"}, col_setor, {"set_id"}, "col_setor", JoinKind.LeftOuter),
    #"col_setor Expandido" = Table.ExpandTableColumn(#"Consultas Mescladas1", "col_setor", {"set_descri"}, {"frm_setsol_nome"}),
    #"Coluna Condicional Adicionada" = Table.AddColumn(#"col_setor Expandido", "colsol setor = setsol", each if [frm_colsol_setor] = [frm_setsol] then "OK" else "Não"),
    #"Consultas Mescladas2" = Table.NestedJoin(#"Coluna Condicional Adicionada", {"frm_colsol_setor"}, col_setor, {"set_id"}, "col_setor", JoinKind.LeftOuter),
    #"col_setor Expandido1" = Table.ExpandTableColumn(#"Consultas Mescladas2", "col_setor", {"set_descri"}, {"frm_colsol_set_nome"}),
    #"Consultas Mescladas3" = Table.NestedJoin(#"col_setor Expandido1", {"frm_colpre"}, col_colabo, {"col_id"}, "col_colabo", JoinKind.LeftOuter),
    #"col_colabo Expandido1" = Table.ExpandTableColumn(#"Consultas Mescladas3", "col_colabo", {"col_nome"}, {"frm_colpre_nome"}),
    #"Consultas Mescladas4" = Table.NestedJoin(#"col_colabo Expandido1", {"frm_colcap"}, col_colabo, {"col_id"}, "col_colabo", JoinKind.LeftOuter),
    #"col_colabo Expandido2" = Table.ExpandTableColumn(#"Consultas Mescladas4", "col_colabo", {"col_nome"}, {"frm_colcap_nome"}),
    #"Consultas Mescladas5" = Table.NestedJoin(#"col_colabo Expandido2", {"frm_tipoco"}, par_classi, {"cla_codigo"}, "par_classi", JoinKind.LeftOuter),
    #"par_classi Expandido" = Table.ExpandTableColumn(#"Consultas Mescladas5", "par_classi", {"cla_descri", "Tipo Macro"}, {"frm_tipoco_nome", "tipo_macro"}),
    #"Consultas Mescladas6" = Table.NestedJoin(#"par_classi Expandido", {"frm_regneg"}, par_regneg, {"reg_codigo"}, "par_regneg", JoinKind.LeftOuter),
    #"par_regneg Expandido" = Table.ExpandTableColumn(#"Consultas Mescladas6", "par_regneg", {"reg_descri"}, {"frm_regneg_nome"}),
    #"Consultas Mescladas7" = Table.NestedJoin(#"par_regneg Expandido", {"frm_avalia"}, par_avalia, {"ava_valor"}, "par_avalia", JoinKind.LeftOuter),
    #"par_avalia Expandido" = Table.ExpandTableColumn(#"Consultas Mescladas7", "par_avalia", {"ava_descri", "ava_consat"}, {"frm_avalia_nome", "frm_avalia_consat"}),
    #"Consultas Mescladas8" = Table.NestedJoin(#"par_avalia Expandido", {"frm_colcon"}, col_colabo, {"col_id"}, "col_colabo", JoinKind.LeftOuter),
    #"col_colabo Expandido3" = Table.ExpandTableColumn(#"Consultas Mescladas8", "col_colabo", {"col_nome"}, {"frm_colcon_nome"}),
    #"Tratamento de valores nulos" = Table.AddColumn(#"col_colabo Expandido3", "frm_setsol_nome_trat", each if [frm_setsol_nome] = null then "Vazio" else [frm_setsol_nome]),
    #"Tratamento de valores nulos1" = Table.AddColumn(#"Tratamento de valores nulos", "frm_colsol_set_nome_trat", each if [frm_colsol_set_nome] = null then "Vazio" else [frm_colsol_set_nome]),
    #"Tratamento de valores nulos2" = Table.AddColumn(#"Tratamento de valores nulos1", "frm_colcap_nome_trat", each if [frm_colcap_nome] = null then "Vazio" else [frm_colcap_nome]),
    #"Tratamento de valores nulos3" = Table.AddColumn(#"Tratamento de valores nulos2", "frm_tipoco_nome_trat", each if [frm_tipoco_nome] = null then "Vazio" else [frm_tipoco_nome]),
    #"Tratamento de valores nulos4" = Table.AddColumn(#"Tratamento de valores nulos3", "Tipo Macro", each if [tipo_macro] = null then "Vazio" else [tipo_macro]),
    #"Tratamento de valores nulos5" = Table.AddColumn(#"Tratamento de valores nulos4", "frm_regneg_nome_trat", each if [frm_regneg_nome] = null then "Vazio" else [frm_regneg_nome]),
    #"Tratamento de valores nulos6" = Table.AddColumn(#"Tratamento de valores nulos5", "frm_avalia_nome_trat", each if [frm_avalia_nome] = null then "Vazio" else [frm_avalia_nome]),
    #"Tratamento de valores nulos7" = Table.AddColumn(#"Tratamento de valores nulos6", "frm_avalia_consat_trat", each if [frm_avalia_consat] = null then "Vazio" else [frm_avalia_consat]),
    #"Tratamento de valores nulos8" = Table.AddColumn(#"Tratamento de valores nulos7", "frm_colcon_nome_trat", each if [frm_colcon_nome] = null then "Vazio" else [frm_colcon_nome]),
    #"Tratamento de valores nulos9" = Table.AddColumn(#"Tratamento de valores nulos8", "frm_limite_trat", each if [frm_limite] = "" then [frm_dtconc] else [frm_limite]),
    #"frm_tem_limite" = Table.AddColumn(#"Tratamento de valores nulos9", "frm_tem_limite", each if [frm_limite] = "" then "N" else "S"),
    #"Tipo Alterado" = Table.TransformColumnTypes(frm_tem_limite,{{"frm_id", type text}, {"frm_datinc", type datetime}, {"frm_datcap", type datetime}, {"frm_dtconc", type datetime}, {"frm_priori", type text}, {"frm_aplica", type text}, {"frm_situac", type text}, {"frm_status", type text}, {"frm_horas", Int64.Type}, {"frm_minut", Int64.Type}, {"frm_limite", type date}, {"frm_solpri", type text}, {"frm_qtderg", Int64.Type}, {"frm_colsol_nome", type text}, {"colsol setor = setsol", type text}, {"frm_colpre_nome", type text}, {"frm_tem_limite", type text}, {"frm_limite_trat", type datetime}, {"frm_colcon_nome_trat", type text}, {"frm_avalia_consat_trat", type text}, {"frm_avalia_nome_trat", type text}, {"frm_regneg_nome_trat", type text}, {"frm_tipoco_nome_trat", type text}, {"frm_colcap_nome_trat", type text}, {"frm_colsol_set_nome_trat", type text}, {"frm_setsol_nome_trat", type text}}),
    #"Data Extraída" = Table.TransformColumns(#"Tipo Alterado",{{"frm_limite_trat", DateTime.Date, type date}}),
    #"Colunas Removidas" = Table.RemoveColumns(#"Data Extraída",{"frm_colsol", "frm_colpre", "frm_ramal", "frm_motivo", "frm_descri", "frm_colcap", "frm_observ", "frm_dtconf", "frm_confpo", "frm_chave", "frm_avalia", "frm_obsava", "frm_regneg", "frm_denvig", "frm_reavig", "d_e_l_e_t_", "frm_lembre", "frm_parece", "frm_acoes", "frm_setsol_nome", "frm_colsol_set_nome", "frm_colcap_nome", "frm_tipoco_nome", "frm_regneg_nome", "frm_avalia_nome", "frm_avalia_consat", "frm_colcon_nome", "frm_colsol_setor", "frm_limite","tipo_macro"}),
    #"Colunas Renomeadas" = Table.RenameColumns(#"Colunas Removidas",{{"frm_id", "Id da Solicitação"}, {"frm_datinc", "Data de início"}, {"frm_datcap", "Data de captura"}, {"frm_dtconc", "Data de conclusão"}, {"frm_priori", "Prioridade"}, {"frm_situac", "Situação"}, {"frm_status", "Status"}, {"frm_horas", "Duração - Horas"}, {"frm_minut", "Duração - Minutos"}, {"frm_colsol_nome", "Colaborador Solicitante"}, {"frm_setsol_nome_trat", "Setor Solicitante"}, {"frm_colsol_set_nome_trat", "Setor do Colaborador Solicitante"}, {"frm_colcap_nome_trat", "Técnico que Capturou"}, {"frm_tipoco_nome_trat", "Tipo de Solicitação"}, {"frm_regneg_nome_trat", "Tipo de serviço"}, {"frm_avalia_nome_trat", "Avaliação"}, {"frm_avalia_consat_trat", "Possui Avaliação"}, {"frm_colcon_nome_trat", "Técnico que Concluiu a Solicitação"}, {"frm_limite_trat", "Data Limite"}, {"frm_tem_limite", "Possui Data Limite"}}),
    #"Colocar Cada Palavra Em Maiúscula" = Table.TransformColumns(#"Colunas Renomeadas",{{"Colaborador Solicitante", Text.Proper, type text}, {"frm_colpre_nome", Text.Proper, type text}, {"Técnico que Capturou", Text.Proper, type text}}),
    #"Coluna Duplicada" = Table.DuplicateColumn(#"Colocar Cada Palavra Em Maiúscula", "Data de início", "Data de início - Copiar"),
    #"Coluna Duplicada1" = Table.DuplicateColumn(#"Coluna Duplicada", "Data de conclusão", "Data de conclusão - Copiar"),
    #"Colunas Renomeadas1" = Table.RenameColumns(#"Coluna Duplicada1",{{"Data de início - Copiar", "Hora de início"}, {"Data de conclusão - Copiar", "Hora de conclusão"}}),
    #"Valor Substituído" = Table.ReplaceValue(#"Colunas Renomeadas1","PA","Pendente com o Técnico",Replacer.ReplaceText,{"Situação"}),
    #"Valor Substituído1" = Table.ReplaceValue(#"Valor Substituído","PU","Pendente com o usuário",Replacer.ReplaceText,{"Situação"}),
    #"Valor Substituído2" = Table.ReplaceValue(#"Valor Substituído1","PM","Orçamento Pendete",Replacer.ReplaceText,{"Situação"})
in
    #"Valor Substituído2"</pre></td><td >False</td></tr><tr ><td >Tabela Calendário</td><td ></td><td >Import</td><td ><pre>
ADDCOLUMNS(
    CALENDAR(MIN('Data única'[Data]),MAX('Data única'[Data])),
    "Dia num", DAY([Date]),
    "Dia nome", FORMAT([Date],"dddd"),
    "Dia da semana", WEEKDAY([Date]),
    "Semana num", WEEKNUM([Date]),
    "Mês num", MONTH([Date]),
    "Mês nome", FORMAT([Date],"mmmm"),
    "Trimestre", QUARTER([Date]),
    "Ano", YEAR([Date])
)</pre></td><td >False</td></tr><tr ><td >Colaboradores do setor</td><td ></td><td >Import</td><td ><pre>DISTINCT(par_solici[Técnico que Capturou])
</pre></td><td >False</td></tr><tr ><td >Medidas</td><td ></td><td >Import</td><td ><pre>Row("Column", BLANK())</pre></td><td >False</td></tr><tr ><td >LocalDateTable_16ec3c8f-e0b1-4d1b-87a0-d4b72994ab63</td><td ></td><td >Import</td><td ><pre>Calendar(Date(Year(MIN('par_solici'[Data Limite])), 1, 1), Date(Year(MAX('par_solici'[Data Limite])), 12, 31))</pre></td><td >True</td></tr><tr ><td >LocalDateTable_99eb6c84-5f59-467d-a7ff-f4da220ccc58</td><td ></td><td >Import</td><td ><pre>Calendar(Date(Year(MIN('par_solici'[Data de captura])), 1, 1), Date(Year(MAX('par_solici'[Data de captura])), 12, 31))</pre></td><td >True</td></tr><tr ><td >Data única</td><td ></td><td >Import</td><td ><pre>let
    Fonte = Json.Document(File.Contents("C:\Users\natan\OneDrive\Documentos\GitHub\Projetos\Unimed Vale dos Sinos\par_solici\par_solici.json")),
    #"Convertido para Tabela" = Table.FromList(Fonte, Splitter.SplitByNothing(), null, null, ExtraValues.Error),
    #"Column1 Expandido" = Table.ExpandRecordColumn(#"Convertido para Tabela", "Column1", {"frm_id", "frm_datinc", "frm_colsol", "frm_setsol", "frm_colpre", "frm_ramal", "frm_motivo", "frm_descri", "frm_colcap", "frm_datcap", "frm_dtconc", "frm_colcon", "frm_priori", "frm_aplica", "frm_observ", "frm_dtconf", "frm_confpo", "frm_situac", "frm_chave", "frm_status", "frm_horas", "frm_minut", "frm_avalia", "frm_obsava", "frm_tipoco", "frm_regneg", "frm_denvig", "frm_reavig", "d_e_l_e_t_", "frm_lembre", "frm_parece", "frm_acoes", "frm_limite", "frm_solpri", "frm_qtderg"}, {"frm_id", "frm_datinc", "frm_colsol", "frm_setsol", "frm_colpre", "frm_ramal", "frm_motivo", "frm_descri", "frm_colcap", "frm_datcap", "frm_dtconc", "frm_colcon", "frm_priori", "frm_aplica", "frm_observ", "frm_dtconf", "frm_confpo", "frm_situac", "frm_chave", "frm_status", "frm_horas", "frm_minut", "frm_avalia", "frm_obsava", "frm_tipoco", "frm_regneg", "frm_denvig", "frm_reavig", "d_e_l_e_t_", "frm_lembre", "frm_parece", "frm_acoes", "frm_limite", "frm_solpri", "frm_qtderg"}),
    #"Consultas Mescladas" = Table.NestedJoin(#"Column1 Expandido", {"frm_colsol"}, col_colabo, {"col_id"}, "col_colabo", JoinKind.LeftOuter),
    #"col_colabo Expandido" = Table.ExpandTableColumn(#"Consultas Mescladas", "col_colabo", {"col_nome", "col_setor"}, {"frm_colsol_nome", "frm_colsol_setor"}),
    #"Consultas Mescladas1" = Table.NestedJoin(#"col_colabo Expandido", {"frm_setsol"}, col_setor, {"set_id"}, "col_setor", JoinKind.LeftOuter),
    #"col_setor Expandido" = Table.ExpandTableColumn(#"Consultas Mescladas1", "col_setor", {"set_descri"}, {"frm_setsol_nome"}),
    #"Coluna Condicional Adicionada" = Table.AddColumn(#"col_setor Expandido", "colsol setor = setsol", each if [frm_colsol_setor] = [frm_setsol] then "OK" else "Não"),
    #"Consultas Mescladas2" = Table.NestedJoin(#"Coluna Condicional Adicionada", {"frm_colsol_setor"}, col_setor, {"set_id"}, "col_setor", JoinKind.LeftOuter),
    #"col_setor Expandido1" = Table.ExpandTableColumn(#"Consultas Mescladas2", "col_setor", {"set_descri"}, {"frm_colsol_set_nome"}),
    #"Consultas Mescladas3" = Table.NestedJoin(#"col_setor Expandido1", {"frm_colpre"}, col_colabo, {"col_id"}, "col_colabo", JoinKind.LeftOuter),
    #"col_colabo Expandido1" = Table.ExpandTableColumn(#"Consultas Mescladas3", "col_colabo", {"col_nome"}, {"frm_colpre_nome"}),
    #"Consultas Mescladas4" = Table.NestedJoin(#"col_colabo Expandido1", {"frm_colcap"}, col_colabo, {"col_id"}, "col_colabo", JoinKind.LeftOuter),
    #"col_colabo Expandido2" = Table.ExpandTableColumn(#"Consultas Mescladas4", "col_colabo", {"col_nome"}, {"frm_colcap_nome"}),
    #"Consultas Mescladas5" = Table.NestedJoin(#"col_colabo Expandido2", {"frm_tipoco"}, par_classi, {"cla_codigo"}, "par_classi", JoinKind.LeftOuter),
    #"par_classi Expandido" = Table.ExpandTableColumn(#"Consultas Mescladas5", "par_classi", {"cla_descri", "Tipo Macro"}, {"frm_tipoco_nome", "tipo_macro"}),
    #"Consultas Mescladas6" = Table.NestedJoin(#"par_classi Expandido", {"frm_regneg"}, par_regneg, {"reg_codigo"}, "par_regneg", JoinKind.LeftOuter),
    #"par_regneg Expandido" = Table.ExpandTableColumn(#"Consultas Mescladas6", "par_regneg", {"reg_descri"}, {"frm_regneg_nome"}),
    #"Consultas Mescladas7" = Table.NestedJoin(#"par_regneg Expandido", {"frm_avalia"}, par_avalia, {"ava_valor"}, "par_avalia", JoinKind.LeftOuter),
    #"par_avalia Expandido" = Table.ExpandTableColumn(#"Consultas Mescladas7", "par_avalia", {"ava_descri", "ava_consat"}, {"frm_avalia_nome", "frm_avalia_consat"}),
    #"Consultas Mescladas8" = Table.NestedJoin(#"par_avalia Expandido", {"frm_colcon"}, col_colabo, {"col_id"}, "col_colabo", JoinKind.LeftOuter),
    #"col_colabo Expandido3" = Table.ExpandTableColumn(#"Consultas Mescladas8", "col_colabo", {"col_nome"}, {"frm_colcon_nome"}),
    #"Tratamento de valores nulos" = Table.AddColumn(#"col_colabo Expandido3", "frm_setsol_nome_trat", each if [frm_setsol_nome] = null then "Vazio" else [frm_setsol_nome]),
    #"Tratamento de valores nulos1" = Table.AddColumn(#"Tratamento de valores nulos", "frm_colsol_set_nome_trat", each if [frm_colsol_set_nome] = null then "Vazio" else [frm_colsol_set_nome]),
    #"Tratamento de valores nulos2" = Table.AddColumn(#"Tratamento de valores nulos1", "frm_colcap_nome_trat", each if [frm_colcap_nome] = null then "Vazio" else [frm_colcap_nome]),
    #"Tratamento de valores nulos3" = Table.AddColumn(#"Tratamento de valores nulos2", "frm_tipoco_nome_trat", each if [frm_tipoco_nome] = null then "Vazio" else [frm_tipoco_nome]),
    #"Tratamento de valores nulos4" = Table.AddColumn(#"Tratamento de valores nulos3", "Tipo Macro", each if [tipo_macro] = null then "Vazio" else [tipo_macro]),
    #"Tratamento de valores nulos5" = Table.AddColumn(#"Tratamento de valores nulos4", "frm_regneg_nome_trat", each if [frm_regneg_nome] = null then "Vazio" else [frm_regneg_nome]),
    #"Tratamento de valores nulos6" = Table.AddColumn(#"Tratamento de valores nulos5", "frm_avalia_nome_trat", each if [frm_avalia_nome] = null then "Vazio" else [frm_avalia_nome]),
    #"Tratamento de valores nulos7" = Table.AddColumn(#"Tratamento de valores nulos6", "frm_avalia_consat_trat", each if [frm_avalia_consat] = null then "Vazio" else [frm_avalia_consat]),
    #"Tratamento de valores nulos8" = Table.AddColumn(#"Tratamento de valores nulos7", "frm_colcon_nome_trat", each if [frm_colcon_nome] = null then "Vazio" else [frm_colcon_nome]),
    #"Tratamento de valores nulos9" = Table.AddColumn(#"Tratamento de valores nulos8", "frm_limite_trat", each if [frm_limite] = "" then [frm_dtconc] else [frm_limite]),
    #"frm_tem_limite" = Table.AddColumn(#"Tratamento de valores nulos9", "frm_tem_limite", each if [frm_limite] = "" then "N" else "S"),
    #"Tipo Alterado" = Table.TransformColumnTypes(frm_tem_limite,{{"frm_id", type text}, {"frm_datinc", type datetime}, {"frm_datcap", type datetime}, {"frm_dtconc", type datetime}, {"frm_priori", type text}, {"frm_aplica", type text}, {"frm_situac", type text}, {"frm_status", type text}, {"frm_horas", Int64.Type}, {"frm_minut", Int64.Type}, {"frm_limite", type date}, {"frm_solpri", type text}, {"frm_qtderg", Int64.Type}, {"frm_colsol_nome", type text}, {"colsol setor = setsol", type text}, {"frm_colpre_nome", type text}, {"frm_tem_limite", type text}, {"frm_limite_trat", type datetime}, {"frm_colcon_nome_trat", type text}, {"frm_avalia_consat_trat", type text}, {"frm_avalia_nome_trat", type text}, {"frm_regneg_nome_trat", type text}, {"frm_tipoco_nome_trat", type text}, {"frm_colcap_nome_trat", type text}, {"frm_colsol_set_nome_trat", type text}, {"frm_setsol_nome_trat", type text}}),
    #"Data Extraída" = Table.TransformColumns(#"Tipo Alterado",{{"frm_limite_trat", DateTime.Date, type date}}),
    #"Colunas Removidas" = Table.RemoveColumns(#"Data Extraída",{"frm_colsol", "frm_colpre", "frm_ramal", "frm_motivo", "frm_descri", "frm_colcap", "frm_observ", "frm_dtconf", "frm_confpo", "frm_chave", "frm_avalia", "frm_obsava", "frm_regneg", "frm_denvig", "frm_reavig", "d_e_l_e_t_", "frm_lembre", "frm_parece", "frm_acoes", "frm_setsol_nome", "frm_colsol_set_nome", "frm_colcap_nome", "frm_tipoco_nome", "frm_regneg_nome", "frm_avalia_nome", "frm_avalia_consat", "frm_colcon_nome", "frm_colsol_setor", "frm_limite","tipo_macro"}),
    #"Colunas Renomeadas" = Table.RenameColumns(#"Colunas Removidas",{{"frm_id", "Id da Solicitação"}, {"frm_datinc", "Data de início"}, {"frm_datcap", "Data de captura"}, {"frm_dtconc", "Data de conclusão"}, {"frm_priori", "Prioridade"}, {"frm_situac", "Situação"}, {"frm_status", "Status"}, {"frm_horas", "Duração - Horas"}, {"frm_minut", "Duração - Minutos"}, {"frm_colsol_nome", "Colaborador Solicitante"}, {"frm_setsol_nome_trat", "Setor Solicitante"}, {"frm_colsol_set_nome_trat", "Setor do Colaborador Solicitante"}, {"frm_colcap_nome_trat", "Técnico que Capturou"}, {"frm_tipoco_nome_trat", "Tipo de Solicitação"}, {"frm_regneg_nome_trat", "Tipo de serviço"}, {"frm_avalia_nome_trat", "Avaliação"}, {"frm_avalia_consat_trat", "Possui Avaliação"}, {"frm_colcon_nome_trat", "Técnico que Concluiu a Solicitação"}, {"frm_limite_trat", "Data Limite"}, {"frm_tem_limite", "Possui Data Limite"}}),
    #"Colocar Cada Palavra Em Maiúscula" = Table.TransformColumns(#"Colunas Renomeadas",{{"Colaborador Solicitante", Text.Proper, type text}, {"frm_colpre_nome", Text.Proper, type text}, {"Técnico que Capturou", Text.Proper, type text}}),
    #"Colunas Removidas1" = Table.RemoveColumns(#"Colocar Cada Palavra Em Maiúscula",{"Data de captura", "Data de conclusão", "Data Limite"}),
    #"Tipo Alterado1" = Table.TransformColumnTypes(#"Colunas Removidas1",{{"Data de início", type date}}),
    #"Coluna constante" = Table.AddColumn(#"Tipo Alterado1", "Tipo", each "Abertura"),
    #"Colunas Renomeadas1" = Table.RenameColumns(#"Coluna constante",{{"Data de início", "Data"}}),
    #"Consulta Acrescentada" = Table.Combine({#"Colunas Renomeadas1", #"Somente data de conclusão"}),
    #"Valor Substituído" = Table.ReplaceValue(#"Consulta Acrescentada","PA","Pendente com o Técnico",Replacer.ReplaceText,{"Situação"}),
    #"Valor Substituído1" = Table.ReplaceValue(#"Valor Substituído","PU","Pendente com o usuário",Replacer.ReplaceText,{"Situação"}),
    #"Valor Substituído2" = Table.ReplaceValue(#"Valor Substituído1","PM","Orçamento Pendente",Replacer.ReplaceText,{"Situação"})
in
    #"Valor Substituído2"</pre></td><td >False</td></tr><tr ><td >LocalDateTable_3789bd27-4064-48f3-90fb-1c93fe7c4faf</td><td ></td><td >Import</td><td ><pre>Calendar(Date(Year(MIN('par_solici'[Data de início])), 1, 1), Date(Year(MAX('par_solici'[Data de início])), 12, 31))</pre></td><td >True</td></tr><tr ><td >LocalDateTable_938b9a37-9514-4eb9-b19d-d32f7db3da09</td><td ></td><td >Import</td><td ><pre>Calendar(Date(Year(MIN('par_solici'[Data de conclusão])), 1, 1), Date(Year(MAX('par_solici'[Data de conclusão])), 12, 31))</pre></td><td >True</td></tr><tr ><td >Somente data de conclusão</td><td ></td><td >Import</td><td ><pre>let
    Fonte = Json.Document(File.Contents("C:\Users\natan\OneDrive\Documentos\GitHub\Projetos\Unimed Vale dos Sinos\par_solici\par_solici.json")),
    #"Convertido para Tabela" = Table.FromList(Fonte, Splitter.SplitByNothing(), null, null, ExtraValues.Error),
    #"Column1 Expandido" = Table.ExpandRecordColumn(#"Convertido para Tabela", "Column1", {"frm_id", "frm_datinc", "frm_colsol", "frm_setsol", "frm_colpre", "frm_ramal", "frm_motivo", "frm_descri", "frm_colcap", "frm_datcap", "frm_dtconc", "frm_colcon", "frm_priori", "frm_aplica", "frm_observ", "frm_dtconf", "frm_confpo", "frm_situac", "frm_chave", "frm_status", "frm_horas", "frm_minut", "frm_avalia", "frm_obsava", "frm_tipoco", "frm_regneg", "frm_denvig", "frm_reavig", "d_e_l_e_t_", "frm_lembre", "frm_parece", "frm_acoes", "frm_limite", "frm_solpri", "frm_qtderg"}, {"frm_id", "frm_datinc", "frm_colsol", "frm_setsol", "frm_colpre", "frm_ramal", "frm_motivo", "frm_descri", "frm_colcap", "frm_datcap", "frm_dtconc", "frm_colcon", "frm_priori", "frm_aplica", "frm_observ", "frm_dtconf", "frm_confpo", "frm_situac", "frm_chave", "frm_status", "frm_horas", "frm_minut", "frm_avalia", "frm_obsava", "frm_tipoco", "frm_regneg", "frm_denvig", "frm_reavig", "d_e_l_e_t_", "frm_lembre", "frm_parece", "frm_acoes", "frm_limite", "frm_solpri", "frm_qtderg"}),
    #"Consultas Mescladas" = Table.NestedJoin(#"Column1 Expandido", {"frm_colsol"}, col_colabo, {"col_id"}, "col_colabo", JoinKind.LeftOuter),
    #"col_colabo Expandido" = Table.ExpandTableColumn(#"Consultas Mescladas", "col_colabo", {"col_nome", "col_setor"}, {"frm_colsol_nome", "frm_colsol_setor"}),
    #"Consultas Mescladas1" = Table.NestedJoin(#"col_colabo Expandido", {"frm_setsol"}, col_setor, {"set_id"}, "col_setor", JoinKind.LeftOuter),
    #"col_setor Expandido" = Table.ExpandTableColumn(#"Consultas Mescladas1", "col_setor", {"set_descri"}, {"frm_setsol_nome"}),
    #"Coluna Condicional Adicionada" = Table.AddColumn(#"col_setor Expandido", "colsol setor = setsol", each if [frm_colsol_setor] = [frm_setsol] then "OK" else "Não"),
    #"Consultas Mescladas2" = Table.NestedJoin(#"Coluna Condicional Adicionada", {"frm_colsol_setor"}, col_setor, {"set_id"}, "col_setor", JoinKind.LeftOuter),
    #"col_setor Expandido1" = Table.ExpandTableColumn(#"Consultas Mescladas2", "col_setor", {"set_descri"}, {"frm_colsol_set_nome"}),
    #"Consultas Mescladas3" = Table.NestedJoin(#"col_setor Expandido1", {"frm_colpre"}, col_colabo, {"col_id"}, "col_colabo", JoinKind.LeftOuter),
    #"col_colabo Expandido1" = Table.ExpandTableColumn(#"Consultas Mescladas3", "col_colabo", {"col_nome"}, {"frm_colpre_nome"}),
    #"Consultas Mescladas4" = Table.NestedJoin(#"col_colabo Expandido1", {"frm_colcap"}, col_colabo, {"col_id"}, "col_colabo", JoinKind.LeftOuter),
    #"col_colabo Expandido2" = Table.ExpandTableColumn(#"Consultas Mescladas4", "col_colabo", {"col_nome"}, {"frm_colcap_nome"}),
    #"Consultas Mescladas5" = Table.NestedJoin(#"col_colabo Expandido2", {"frm_tipoco"}, par_classi, {"cla_codigo"}, "par_classi", JoinKind.LeftOuter),
    #"par_classi Expandido" = Table.ExpandTableColumn(#"Consultas Mescladas5", "par_classi", {"cla_descri", "Tipo Macro"}, {"frm_tipoco_nome", "tipo_macro"}),
    #"Consultas Mescladas6" = Table.NestedJoin(#"par_classi Expandido", {"frm_regneg"}, par_regneg, {"reg_codigo"}, "par_regneg", JoinKind.LeftOuter),
    #"par_regneg Expandido" = Table.ExpandTableColumn(#"Consultas Mescladas6", "par_regneg", {"reg_descri"}, {"frm_regneg_nome"}),
    #"Consultas Mescladas7" = Table.NestedJoin(#"par_regneg Expandido", {"frm_avalia"}, par_avalia, {"ava_valor"}, "par_avalia", JoinKind.LeftOuter),
    #"par_avalia Expandido" = Table.ExpandTableColumn(#"Consultas Mescladas7", "par_avalia", {"ava_descri", "ava_consat"}, {"frm_avalia_nome", "frm_avalia_consat"}),
    #"Consultas Mescladas8" = Table.NestedJoin(#"par_avalia Expandido", {"frm_colcon"}, col_colabo, {"col_id"}, "col_colabo", JoinKind.LeftOuter),
    #"col_colabo Expandido3" = Table.ExpandTableColumn(#"Consultas Mescladas8", "col_colabo", {"col_nome"}, {"frm_colcon_nome"}),
    #"Tratamento de valores nulos" = Table.AddColumn(#"col_colabo Expandido3", "frm_setsol_nome_trat", each if [frm_setsol_nome] = null then "Vazio" else [frm_setsol_nome]),
    #"Tratamento de valores nulos1" = Table.AddColumn(#"Tratamento de valores nulos", "frm_colsol_set_nome_trat", each if [frm_colsol_set_nome] = null then "Vazio" else [frm_colsol_set_nome]),
    #"Tratamento de valores nulos2" = Table.AddColumn(#"Tratamento de valores nulos1", "frm_colcap_nome_trat", each if [frm_colcap_nome] = null then "Vazio" else [frm_colcap_nome]),
    #"Tratamento de valores nulos3" = Table.AddColumn(#"Tratamento de valores nulos2", "frm_tipoco_nome_trat", each if [frm_tipoco_nome] = null then "Vazio" else [frm_tipoco_nome]),
    #"Tratamento de valores nulos4" = Table.AddColumn(#"Tratamento de valores nulos3", "Tipo Macro", each if [tipo_macro] = null then "Vazio" else [tipo_macro]),
    #"Tratamento de valores nulos5" = Table.AddColumn(#"Tratamento de valores nulos4", "frm_regneg_nome_trat", each if [frm_regneg_nome] = null then "Vazio" else [frm_regneg_nome]),
    #"Tratamento de valores nulos6" = Table.AddColumn(#"Tratamento de valores nulos5", "frm_avalia_nome_trat", each if [frm_avalia_nome] = null then "Vazio" else [frm_avalia_nome]),
    #"Tratamento de valores nulos7" = Table.AddColumn(#"Tratamento de valores nulos6", "frm_avalia_consat_trat", each if [frm_avalia_consat] = null then "Vazio" else [frm_avalia_consat]),
    #"Tratamento de valores nulos8" = Table.AddColumn(#"Tratamento de valores nulos7", "frm_colcon_nome_trat", each if [frm_colcon_nome] = null then "Vazio" else [frm_colcon_nome]),
    #"Tratamento de valores nulos9" = Table.AddColumn(#"Tratamento de valores nulos8", "frm_limite_trat", each if [frm_limite] = "" then [frm_dtconc] else [frm_limite]),
    #"frm_tem_limite" = Table.AddColumn(#"Tratamento de valores nulos9", "frm_tem_limite", each if [frm_limite] = "" then "N" else "S"),
    #"Tipo Alterado" = Table.TransformColumnTypes(frm_tem_limite,{{"frm_id", type text}, {"frm_datinc", type datetime}, {"frm_datcap", type datetime}, {"frm_dtconc", type datetime}, {"frm_priori", type text}, {"frm_aplica", type text}, {"frm_situac", type text}, {"frm_status", type text}, {"frm_horas", Int64.Type}, {"frm_minut", Int64.Type}, {"frm_limite", type date}, {"frm_solpri", type text}, {"frm_qtderg", Int64.Type}, {"frm_colsol_nome", type text}, {"colsol setor = setsol", type text}, {"frm_colpre_nome", type text}, {"frm_tem_limite", type text}, {"frm_limite_trat", type datetime}, {"frm_colcon_nome_trat", type text}, {"frm_avalia_consat_trat", type text}, {"frm_avalia_nome_trat", type text}, {"frm_regneg_nome_trat", type text}, {"frm_tipoco_nome_trat", type text}, {"frm_colcap_nome_trat", type text}, {"frm_colsol_set_nome_trat", type text}, {"frm_setsol_nome_trat", type text}}),
    #"Data Extraída" = Table.TransformColumns(#"Tipo Alterado",{{"frm_limite_trat", DateTime.Date, type date}}),
    #"Colunas Removidas" = Table.RemoveColumns(#"Data Extraída",{"frm_colsol", "frm_colpre", "frm_ramal", "frm_motivo", "frm_descri", "frm_colcap", "frm_observ", "frm_dtconf", "frm_confpo", "frm_chave", "frm_avalia", "frm_obsava", "frm_regneg", "frm_denvig", "frm_reavig", "d_e_l_e_t_", "frm_lembre", "frm_parece", "frm_acoes", "frm_setsol_nome", "frm_colsol_set_nome", "frm_colcap_nome", "frm_tipoco_nome", "frm_regneg_nome", "frm_avalia_nome", "frm_avalia_consat", "frm_colcon_nome", "frm_colsol_setor", "frm_limite","tipo_macro"}),
    #"Colunas Renomeadas" = Table.RenameColumns(#"Colunas Removidas",{{"frm_id", "Id da Solicitação"}, {"frm_datinc", "Data de início"}, {"frm_datcap", "Data de captura"}, {"frm_dtconc", "Data de conclusão"}, {"frm_priori", "Prioridade"}, {"frm_situac", "Situação"}, {"frm_status", "Status"}, {"frm_horas", "Duração - Horas"}, {"frm_minut", "Duração - Minutos"}, {"frm_colsol_nome", "Colaborador Solicitante"}, {"frm_setsol_nome_trat", "Setor Solicitante"}, {"frm_colsol_set_nome_trat", "Setor do Colaborador Solicitante"}, {"frm_colcap_nome_trat", "Técnico que Capturou"}, {"frm_tipoco_nome_trat", "Tipo de Solicitação"}, {"frm_regneg_nome_trat", "Tipo de serviço"}, {"frm_avalia_nome_trat", "Avaliação"}, {"frm_avalia_consat_trat", "Possui Avaliação"}, {"frm_colcon_nome_trat", "Técnico que Concluiu a Solicitação"}, {"frm_limite_trat", "Data Limite"}, {"frm_tem_limite", "Possui Data Limite"}}),
    #"Colocar Cada Palavra Em Maiúscula" = Table.TransformColumns(#"Colunas Renomeadas",{{"Colaborador Solicitante", Text.Proper, type text}, {"frm_colpre_nome", Text.Proper, type text}, {"Técnico que Capturou", Text.Proper, type text}}),
    #"Colunas Removidas1" = Table.RemoveColumns(#"Colocar Cada Palavra Em Maiúscula",{"Data de captura", "Data de início", "Data Limite"}),
    #"Tipo Alterado1" = Table.TransformColumnTypes(#"Colunas Removidas1",{{"Data de conclusão", type date}}),
    #"Coluna constante" = Table.AddColumn(#"Tipo Alterado1", "Tipo", each "Conclusão"),
    #"Colunas Renomeadas1" = Table.RenameColumns(#"Coluna constante",{{"Data de conclusão", "Data"}})
in
    #"Colunas Renomeadas1"</pre></td><td >True</td></tr><tr ><td >LocalDateTable_70dd12f9-00dc-44fd-9640-5d85d1f3b936</td><td ></td><td >Import</td><td ><pre>Calendar(Date(Year(MIN('Somente data de conclusão'[Data])), 1, 1), Date(Year(MAX('Somente data de conclusão'[Data])), 12, 31))</pre></td><td >True</td></tr><tr ><td >LocalDateTable_b59f12be-8fe1-4d96-9fa8-2f55882cb512</td><td ></td><td >Import</td><td ><pre>Calendar(Date(Year(MIN('Tabela Calendário'[Date])), 1, 1), Date(Year(MAX('Tabela Calendário'[Date])), 12, 31))</pre></td><td >True</td></tr><tr ><td >LocalDateTable_1d71b99e-bddf-4aad-949f-4d5a69f0a82e</td><td ></td><td >Import</td><td ><pre>Calendar(Date(Year(MIN('par_solici'[Hora de início])), 1, 1), Date(Year(MAX('par_solici'[Hora de início])), 12, 31))</pre></td><td >True</td></tr><tr ><td >LocalDateTable_95981c5f-7f4b-4a9e-8713-5e8e9760e397</td><td ></td><td >Import</td><td ><pre>Calendar(Date(Year(MIN('par_solici'[Hora de conclusão])), 1, 1), Date(Year(MAX('par_solici'[Hora de conclusão])), 12, 31))</pre></td><td >True</td></tr></table><hr></hr><br></br><h3><div>List of Measures:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Measure Name</th>
		<th>Table Name</th>
		<th>Description</th>
		<th>Expression</th>
		<th>Dependency</th>
		<th>Reverse Dependency</th>
	</tr>
	<tr>
		<td>Chamados Abertos</td>
		<td>Medidas</td>
		<td></td>
		<td><pre>CALCULATE(COUNT('Data única'[Id da Solicitação]),'Data única'[Tipo]="Abertura")</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Chamados Abertos</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Table: Data única</span>
<ul class="nested">
<li>Partition: col_colabo (Table: col_colabo)</li>
<li>Partition: col_setor (Table: col_setor)</li>
<li>Partition: par_classi (Table: par_classi)</li>
<li>Partition: par_regneg (Table: par_regneg)</li>
<li>Partition: par_avalia (Table: par_avalia)</li>
<li><span class="caret">Partition: Somente data de conclusão (Table: Somente data de conclusão)</span>
<ul class="nested">
<li>Partition: col_colabo (Table: col_colabo)</li>
<li>Partition: col_setor (Table: col_setor)</li>
<li>Partition: par_classi (Table: par_classi)</li>
<li>Partition: par_regneg (Table: par_regneg)</li>
<li>Partition: par_avalia (Table: par_avalia)</li>
</ul></li>
</ul></li>
<li>Column: Id da Solicitação (Table: Data única)</li>
<li>Column: Tipo (Table: Data única)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Chamados Abertos</td>
	</tr>
	<tr>
		<td>Chamados Fechados</td>
		<td>Medidas</td>
		<td></td>
		<td><pre>CALCULATE(COUNT('Data única'[Id da Solicitação]),'Data única'[Tipo]="Conclusão")</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Chamados Fechados</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Table: Data única</span>
<ul class="nested">
<li>Partition: col_colabo (Table: col_colabo)</li>
<li>Partition: col_setor (Table: col_setor)</li>
<li>Partition: par_classi (Table: par_classi)</li>
<li>Partition: par_regneg (Table: par_regneg)</li>
<li>Partition: par_avalia (Table: par_avalia)</li>
<li><span class="caret">Partition: Somente data de conclusão (Table: Somente data de conclusão)</span>
<ul class="nested">
<li>Partition: col_colabo (Table: col_colabo)</li>
<li>Partition: col_setor (Table: col_setor)</li>
<li>Partition: par_classi (Table: par_classi)</li>
<li>Partition: par_regneg (Table: par_regneg)</li>
<li>Partition: par_avalia (Table: par_avalia)</li>
</ul></li>
</ul></li>
<li>Column: Id da Solicitação (Table: Data única)</li>
<li>Column: Tipo (Table: Data única)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Chamados Fechados</td>
	</tr>
	<tr>
		<td>Aberto e Fechado dentro do m&#234;s</td>
		<td>Medidas</td>
		<td></td>
		<td><pre>CALCULATE(COUNT('Data única'[Id da Solicitação]),par_solici[Concluído no mesmo mês]="S",'Data única'[Tipo]="Conclusão")</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Aberto e Fechado dentro do mês</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Table: par_solici</span>
<ul class="nested">
<li>Partition: col_colabo (Table: col_colabo)</li>
<li>Partition: col_setor (Table: col_setor)</li>
<li>Partition: par_classi (Table: par_classi)</li>
<li>Partition: par_regneg (Table: par_regneg)</li>
<li>Partition: par_avalia (Table: par_avalia)</li>
</ul></li>
<li><span class="caret">Calc_Column: Concluído no mesmo mês (Table: par_solici)</span>
<ul class="nested">
<li>Table: par_solici   ...</li>
<li>Column: Data de início (Table: par_solici)</li>
<li>Column: Data de conclusão (Table: par_solici)</li>
</ul></li>
<li><span class="caret">Table: Data única</span>
<ul class="nested">
<li>Partition: col_colabo (Table: col_colabo)</li>
<li>Partition: col_setor (Table: col_setor)</li>
<li>Partition: par_classi (Table: par_classi)</li>
<li>Partition: par_regneg (Table: par_regneg)</li>
<li>Partition: par_avalia (Table: par_avalia)</li>
<li><span class="caret">Partition: Somente data de conclusão (Table: Somente data de conclusão)</span>
<ul class="nested">
<li>Partition: col_colabo (Table: col_colabo)</li>
<li>Partition: col_setor (Table: col_setor)</li>
<li>Partition: par_classi (Table: par_classi)</li>
<li>Partition: par_regneg (Table: par_regneg)</li>
<li>Partition: par_avalia (Table: par_avalia)</li>
</ul></li>
</ul></li>
<li>Column: Id da Solicitação (Table: Data única)</li>
<li>Column: Tipo (Table: Data única)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Aberto e Fechado dentro do mês</td>
	</tr>
	<tr>
		<td>Aberto e Fechado dentro do m&#234;s - Infraestrutura</td>
		<td>Medidas</td>
		<td></td>
		<td><pre>CALCULATE(COUNT('Data única'[Id da Solicitação]),par_solici[Concluído no mesmo mês]="S",'Data única'[Tipo]="Conclusão", 'Data única'[Tipo Macro]="Infraestrutura")</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Aberto e Fechado dentro do mês - Infraestrutura</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Table: par_solici</span>
<ul class="nested">
<li>Partition: col_colabo (Table: col_colabo)</li>
<li>Partition: col_setor (Table: col_setor)</li>
<li>Partition: par_classi (Table: par_classi)</li>
<li>Partition: par_regneg (Table: par_regneg)</li>
<li>Partition: par_avalia (Table: par_avalia)</li>
</ul></li>
<li><span class="caret">Calc_Column: Concluído no mesmo mês (Table: par_solici)</span>
<ul class="nested">
<li>Table: par_solici   ...</li>
<li>Column: Data de início (Table: par_solici)</li>
<li>Column: Data de conclusão (Table: par_solici)</li>
</ul></li>
<li><span class="caret">Table: Data única</span>
<ul class="nested">
<li>Partition: col_colabo (Table: col_colabo)</li>
<li>Partition: col_setor (Table: col_setor)</li>
<li>Partition: par_classi (Table: par_classi)</li>
<li>Partition: par_regneg (Table: par_regneg)</li>
<li>Partition: par_avalia (Table: par_avalia)</li>
<li><span class="caret">Partition: Somente data de conclusão (Table: Somente data de conclusão)</span>
<ul class="nested">
<li>Partition: col_colabo (Table: col_colabo)</li>
<li>Partition: col_setor (Table: col_setor)</li>
<li>Partition: par_classi (Table: par_classi)</li>
<li>Partition: par_regneg (Table: par_regneg)</li>
<li>Partition: par_avalia (Table: par_avalia)</li>
</ul></li>
</ul></li>
<li>Column: Id da Solicitação (Table: Data única)</li>
<li>Column: Tipo Macro (Table: Data única)</li>
<li>Column: Tipo (Table: Data única)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Aberto e Fechado dentro do mês - Infraestrutura</td>
	</tr>
	<tr>
		<td>Chamados Fechados - Infraestrutura</td>
		<td>Medidas</td>
		<td></td>
		<td><pre>CALCULATE(COUNT('Data única'[Id da Solicitação]),'Data única'[Tipo]="Conclusão",'Data única'[Tipo Macro]="Infraestrutura")</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Chamados Fechados - Infraestrutura</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Table: Data única</span>
<ul class="nested">
<li>Partition: col_colabo (Table: col_colabo)</li>
<li>Partition: col_setor (Table: col_setor)</li>
<li>Partition: par_classi (Table: par_classi)</li>
<li>Partition: par_regneg (Table: par_regneg)</li>
<li>Partition: par_avalia (Table: par_avalia)</li>
<li><span class="caret">Partition: Somente data de conclusão (Table: Somente data de conclusão)</span>
<ul class="nested">
<li>Partition: col_colabo (Table: col_colabo)</li>
<li>Partition: col_setor (Table: col_setor)</li>
<li>Partition: par_classi (Table: par_classi)</li>
<li>Partition: par_regneg (Table: par_regneg)</li>
<li>Partition: par_avalia (Table: par_avalia)</li>
</ul></li>
</ul></li>
<li>Column: Id da Solicitação (Table: Data única)</li>
<li>Column: Tipo Macro (Table: Data única)</li>
<li>Column: Tipo (Table: Data única)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Chamados Fechados - Infraestrutura</td>
	</tr>
	<tr>
		<td>Quantidade de Servi&#231;o</td>
		<td>Medidas</td>
		<td></td>
		<td><pre>CALCULATE(SUM('Data única'[frm_qtderg]),'Data única'[Tipo]="Conclusão",'Somente data de conclusão'[Tipo Macro]="Infraestrutura")</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Quantidade de Serviço</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Table: Data única</span>
<ul class="nested">
<li>Partition: col_colabo (Table: col_colabo)</li>
<li>Partition: col_setor (Table: col_setor)</li>
<li>Partition: par_classi (Table: par_classi)</li>
<li>Partition: par_regneg (Table: par_regneg)</li>
<li>Partition: par_avalia (Table: par_avalia)</li>
<li><span class="caret">Partition: Somente data de conclusão (Table: Somente data de conclusão)</span>
<ul class="nested">
<li>Partition: col_colabo (Table: col_colabo)</li>
<li>Partition: col_setor (Table: col_setor)</li>
<li>Partition: par_classi (Table: par_classi)</li>
<li>Partition: par_regneg (Table: par_regneg)</li>
<li>Partition: par_avalia (Table: par_avalia)</li>
</ul></li>
</ul></li>
<li>Column: frm_qtderg (Table: Data única)</li>
<li><span class="caret">Table: Somente data de conclusão</span>
<ul class="nested">
<li>Partition: col_colabo (Table: col_colabo)</li>
<li>Partition: col_setor (Table: col_setor)</li>
<li>Partition: par_classi (Table: par_classi)</li>
<li>Partition: par_regneg (Table: par_regneg)</li>
<li>Partition: par_avalia (Table: par_avalia)</li>
</ul></li>
<li>Column: Tipo Macro (Table: Somente data de conclusão)</li>
<li>Column: Tipo (Table: Data única)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Quantidade de Serviço</td>
	</tr>
	<tr>
		<td>Chamados finalizados de Sistema</td>
		<td>Medidas</td>
		<td></td>
		<td><pre>CALCULATE(COUNT('Data única'[Id da Solicitação]),'Data única'[Tipo Macro]="Sistema",'Data única'[Tipo]="Conclusão")</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Chamados finalizados de Sistema</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Table: Data única</span>
<ul class="nested">
<li>Partition: col_colabo (Table: col_colabo)</li>
<li>Partition: col_setor (Table: col_setor)</li>
<li>Partition: par_classi (Table: par_classi)</li>
<li>Partition: par_regneg (Table: par_regneg)</li>
<li>Partition: par_avalia (Table: par_avalia)</li>
<li><span class="caret">Partition: Somente data de conclusão (Table: Somente data de conclusão)</span>
<ul class="nested">
<li>Partition: col_colabo (Table: col_colabo)</li>
<li>Partition: col_setor (Table: col_setor)</li>
<li>Partition: par_classi (Table: par_classi)</li>
<li>Partition: par_regneg (Table: par_regneg)</li>
<li>Partition: par_avalia (Table: par_avalia)</li>
</ul></li>
</ul></li>
<li>Column: Id da Solicitação (Table: Data única)</li>
<li>Column: Tipo Macro (Table: Data única)</li>
<li>Column: Tipo (Table: Data única)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Chamados finalizados de Sistema</td>
	</tr>
	<tr>
		<td>Chamados finalizados de Infraestrutura</td>
		<td>Medidas</td>
		<td></td>
		<td><pre>CALCULATE(COUNT('Data única'[Id da Solicitação]),'Data única'[Tipo Macro]="Infraestrutura",'Data única'[Tipo]="Conclusão")</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Chamados finalizados de Infraestrutura</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Table: Data única</span>
<ul class="nested">
<li>Partition: col_colabo (Table: col_colabo)</li>
<li>Partition: col_setor (Table: col_setor)</li>
<li>Partition: par_classi (Table: par_classi)</li>
<li>Partition: par_regneg (Table: par_regneg)</li>
<li>Partition: par_avalia (Table: par_avalia)</li>
<li><span class="caret">Partition: Somente data de conclusão (Table: Somente data de conclusão)</span>
<ul class="nested">
<li>Partition: col_colabo (Table: col_colabo)</li>
<li>Partition: col_setor (Table: col_setor)</li>
<li>Partition: par_classi (Table: par_classi)</li>
<li>Partition: par_regneg (Table: par_regneg)</li>
<li>Partition: par_avalia (Table: par_avalia)</li>
</ul></li>
</ul></li>
<li>Column: Id da Solicitação (Table: Data única)</li>
<li>Column: Tipo Macro (Table: Data única)</li>
<li>Column: Tipo (Table: Data única)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Chamados finalizados de Infraestrutura</td>
	</tr>
	<tr>
		<td>Rank Tipo de Servi&#231;o</td>
		<td>Medidas</td>
		<td></td>
		<td><pre>RANKX(ALLSELECTED(par_regneg),CALCULATE(SUM('Data única'[frm_qtderg]),'Data única'[Tipo]="Conclusão",'Data única'[Tipo Macro]="Infraestrutura"))</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Rank Tipo de Serviço</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: par_regneg</li>
<li><span class="caret">Table: Data única</span>
<ul class="nested">
<li>Partition: col_colabo (Table: col_colabo)</li>
<li>Partition: col_setor (Table: col_setor)</li>
<li>Partition: par_classi (Table: par_classi)</li>
<li>Partition: par_regneg (Table: par_regneg)</li>
<li>Partition: par_avalia (Table: par_avalia)</li>
<li><span class="caret">Partition: Somente data de conclusão (Table: Somente data de conclusão)</span>
<ul class="nested">
<li>Partition: col_colabo (Table: col_colabo)</li>
<li>Partition: col_setor (Table: col_setor)</li>
<li>Partition: par_classi (Table: par_classi)</li>
<li>Partition: par_regneg (Table: par_regneg)</li>
<li>Partition: par_avalia (Table: par_avalia)</li>
</ul></li>
</ul></li>
<li>Column: frm_qtderg (Table: Data única)</li>
<li>Column: Tipo Macro (Table: Data única)</li>
<li>Column: Tipo (Table: Data única)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Rank Tipo de Serviço</td>
	</tr>
	<tr>
		<td>Rank Setor Solicitante</td>
		<td>Medidas</td>
		<td></td>
		<td><pre>RANKX(ALLSELECTED(col_setor),CALCULATE(COUNT('Data única'[Id da Solicitação]),'Data única'[Tipo]="Conclusão"))</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Rank Setor Solicitante</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: col_setor</li>
<li><span class="caret">Table: Data única</span>
<ul class="nested">
<li>Partition: col_colabo (Table: col_colabo)</li>
<li>Partition: col_setor (Table: col_setor)</li>
<li>Partition: par_classi (Table: par_classi)</li>
<li>Partition: par_regneg (Table: par_regneg)</li>
<li>Partition: par_avalia (Table: par_avalia)</li>
<li><span class="caret">Partition: Somente data de conclusão (Table: Somente data de conclusão)</span>
<ul class="nested">
<li>Partition: col_colabo (Table: col_colabo)</li>
<li>Partition: col_setor (Table: col_setor)</li>
<li>Partition: par_classi (Table: par_classi)</li>
<li>Partition: par_regneg (Table: par_regneg)</li>
<li>Partition: par_avalia (Table: par_avalia)</li>
</ul></li>
</ul></li>
<li>Column: Id da Solicitação (Table: Data única)</li>
<li>Column: Tipo (Table: Data única)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Rank Setor Solicitante</td>
	</tr>
	<tr>
		<td>Dura&#231;&#227;o (horas)</td>
		<td>Medidas</td>
		<td></td>
		<td><pre>CALCULATE(AVERAGE('Data única'[Duração - Horas])+AVERAGE('Data única'[Duração - Minutos])/60)</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Duração (horas)</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Table: Data única</span>
<ul class="nested">
<li>Partition: col_colabo (Table: col_colabo)</li>
<li>Partition: col_setor (Table: col_setor)</li>
<li>Partition: par_classi (Table: par_classi)</li>
<li>Partition: par_regneg (Table: par_regneg)</li>
<li>Partition: par_avalia (Table: par_avalia)</li>
<li><span class="caret">Partition: Somente data de conclusão (Table: Somente data de conclusão)</span>
<ul class="nested">
<li>Partition: col_colabo (Table: col_colabo)</li>
<li>Partition: col_setor (Table: col_setor)</li>
<li>Partition: par_classi (Table: par_classi)</li>
<li>Partition: par_regneg (Table: par_regneg)</li>
<li>Partition: par_avalia (Table: par_avalia)</li>
</ul></li>
</ul></li>
<li>Column: Duração - Horas (Table: Data única)</li>
<li>Column: Duração - Minutos (Table: Data única)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Duração (horas)</td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table col_colabo:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>col_id</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>col_matric</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>col_setor</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>col_status</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>col_nome</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table col_setor:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>set_id</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>set_mural</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>set_superv</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>set_status</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>set_pesqui</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>set_real</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>set_centro</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>set_descri</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table par_avalia:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>r_e_c_n_o_</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>ava_valor</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>ava_descri</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>ava_consat</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table par_classi:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>cla_id</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>cla_codigo</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>cla_descri</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Tipo Macro</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table par_regneg:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>reg_id</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>reg_codigo</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>reg_situac</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>&#205;ndice</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>reg_descri</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table par_solici:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Id da Solicita&#231;&#227;o</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Data de in&#237;cio</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Data de captura</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Data de conclus&#227;o</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Prioridade</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>frm_aplica</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Situa&#231;&#227;o</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Status</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Dura&#231;&#227;o - Horas</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Dura&#231;&#227;o - Minutos</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>frm_solpri</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>frm_qtderg</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Colaborador Solicitante</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>colsol setor = setsol</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>frm_colpre_nome</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Setor Solicitante</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Setor do Colaborador Solicitante</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>T&#233;cnico que Capturou</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Tipo de Solicita&#231;&#227;o</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Tipo de servi&#231;o</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Avalia&#231;&#227;o</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Possui Avalia&#231;&#227;o</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>T&#233;cnico que Concluiu a Solicita&#231;&#227;o</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Data Limite</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Possui Data Limite</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Tipo Macro</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Conclu&#237;do no mesmo m&#234;s</td>
		<td></td>
		<td>Calculated Column</td>
		<td>IF(MONTH(par_solici[Data de in&#237;cio])-MONTH(par_solici[Data de conclus&#227;o])=0,&quot;S&quot;,&quot;N&quot;)</td>
	</tr>
	<tr>
		<td>Conclu&#237;do no mesmo m&#234;s - Parametriza&#231;&#227;o</td>
		<td></td>
		<td>Calculated Column</td>
		<td>IF((par_solici[Conclu&#237;do no mesmo m&#234;s]=&quot;S&quot;) &amp;&amp; (par_solici[Tipo Macro] = &quot;Parametriza&#231;&#227;o&quot;),&quot;S&quot;,&quot;N&quot;)</td>
	</tr>
	<tr>
		<td>Parametriza&#231;&#227;o</td>
		<td></td>
		<td>Calculated Column</td>
		<td>IF(par_solici[Tipo Macro]=&quot;Parametriza&#231;&#227;o&quot;,&quot;S&quot;,&quot;N&quot;)</td>
	</tr>
	<tr>
		<td>Hora de in&#237;cio</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Hora de conclus&#227;o</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Dura&#231;&#227;o (dias)</td>
		<td></td>
		<td>Calculated Column</td>
		<td>DATEDIFF([Data de in&#237;cio],[Data de conclus&#227;o],MINUTE)/(60*24)</td>
	</tr>
	<tr>
		<td>Tempo para capturar (dias)</td>
		<td></td>
		<td>Calculated Column</td>
		<td>DATEDIFF([Data de in&#237;cio],[Data de captura],MINUTE)/(60*24)</td>
	</tr>
	<tr>
		<td>Tempo de capturado para a conclus&#227;o (dias)</td>
		<td></td>
		<td>Calculated Column</td>
		<td>DATEDIFF([Data de captura],[Data de conclus&#227;o],MINUTE)/(60*24)</td>
	</tr>
	<tr>
		<td>frm_setsol</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>frm_colcon</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>frm_tipoco</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table Tabela Calendário:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Date</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Dia num</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Dia nome</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Dia da semana</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Semana num</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>M&#234;s num</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>M&#234;s nome</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Trimestre</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Ano</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table Colaboradores do setor:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>T&#233;cnico que Capturou</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table Medidas:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Column</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table Data única:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Id da Solicita&#231;&#227;o</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Data</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Prioridade</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>frm_aplica</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Situa&#231;&#227;o</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Status</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Dura&#231;&#227;o - Horas</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Dura&#231;&#227;o - Minutos</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>frm_solpri</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>frm_qtderg</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Colaborador Solicitante</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>colsol setor = setsol</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>frm_colpre_nome</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Setor Solicitante</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Setor do Colaborador Solicitante</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>T&#233;cnico que Capturou</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Tipo de Solicita&#231;&#227;o</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Tipo Macro</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Tipo de servi&#231;o</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Avalia&#231;&#227;o</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Possui Avalia&#231;&#227;o</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>T&#233;cnico que Concluiu a Solicita&#231;&#227;o</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Possui Data Limite</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Tipo</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>frm_setsol</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>frm_colcon</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>frm_tipoco</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Roles:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Role Name</th>
		<th>Table Name</th>
		<th>Description</th>
		<th>Expression</th>
	</tr>
</table>
<hr></hr><br></br><h3><div>Relationships:</div></h3><br></br><table border='1px' cellpadding='1' cellspacing='1'><tr ><td >Name</td><td >CrossFilteringBehavior</td><td >FromCardinality</td><td >FromColumn</td><td >FromTable</td><td >IsActive</td><td >IsRemoved</td><td >JoinOnDateBehavior</td><td >RelyOnReferentialIntegrity</td><td >SecurityFilteringBehavior</td><td >State</td><td >ToCardinality</td><td >ToColumn</td><td >ToTable</td><td >Type</td></tr><tr ><td >68b45779-905b-42dc-a2c6-9c4a6884e000</td><td >OneDirection</td><td >Many</td><td >Data Limite</td><td >par_solici</td><td >True</td><td >False</td><td >DatePartOnly</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Date</td><td >LocalDateTable_16ec3c8f-e0b1-4d1b-87a0-d4b72994ab63</td><td >SingleColumn</td></tr><tr ><td >fe482b42-2cea-45de-af2a-7f12a2f5e2c3</td><td >OneDirection</td><td >Many</td><td >Data de captura</td><td >par_solici</td><td >True</td><td >False</td><td >DatePartOnly</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Date</td><td >LocalDateTable_99eb6c84-5f59-467d-a7ff-f4da220ccc58</td><td >SingleColumn</td></tr><tr ><td >04216585-5f3d-4c86-a0a3-5304f70b9a9a</td><td >OneDirection</td><td >Many</td><td >Data de início</td><td >par_solici</td><td >True</td><td >False</td><td >DatePartOnly</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Date</td><td >LocalDateTable_3789bd27-4064-48f3-90fb-1c93fe7c4faf</td><td >SingleColumn</td></tr><tr ><td >8f118024-36ed-4967-b7e7-e52064129320</td><td >OneDirection</td><td >Many</td><td >Data de conclusão</td><td >par_solici</td><td >True</td><td >False</td><td >DatePartOnly</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Date</td><td >LocalDateTable_938b9a37-9514-4eb9-b19d-d32f7db3da09</td><td >SingleColumn</td></tr><tr ><td >f0ac61a5-730a-4d0c-bb68-a3ca6df1731c</td><td >OneDirection</td><td >Many</td><td >Data</td><td >Somente data de conclusão</td><td >True</td><td >False</td><td >DatePartOnly</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Date</td><td >LocalDateTable_70dd12f9-00dc-44fd-9640-5d85d1f3b936</td><td >SingleColumn</td></tr><tr ><td >f4863bce-ec74-4fc6-bd71-1a71329b339b</td><td >OneDirection</td><td >Many</td><td >Id da Solicitação</td><td >Data única</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Id da Solicitação</td><td >par_solici</td><td >SingleColumn</td></tr><tr ><td >53969815-6cd4-455c-a49c-8829f4c9ef5b</td><td >OneDirection</td><td >Many</td><td >Date</td><td >Tabela Calendário</td><td >True</td><td >False</td><td >DatePartOnly</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Date</td><td >LocalDateTable_b59f12be-8fe1-4d96-9fa8-2f55882cb512</td><td >SingleColumn</td></tr><tr ><td >8f29c399-91fe-4b24-b2c7-6bfd5cbcac7f</td><td >OneDirection</td><td >Many</td><td >Data</td><td >Data única</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Date</td><td >Tabela Calendário</td><td >SingleColumn</td></tr><tr ><td >71a41a68-b600-44b2-875e-69fa9875fdb7</td><td >OneDirection</td><td >Many</td><td >Hora de início</td><td >par_solici</td><td >True</td><td >False</td><td >DatePartOnly</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Date</td><td >LocalDateTable_1d71b99e-bddf-4aad-949f-4d5a69f0a82e</td><td >SingleColumn</td></tr><tr ><td >0db178bd-3a3e-47f3-8903-03adb63a09fc</td><td >OneDirection</td><td >Many</td><td >Hora de conclusão</td><td >par_solici</td><td >True</td><td >False</td><td >DatePartOnly</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Date</td><td >LocalDateTable_95981c5f-7f4b-4a9e-8713-5e8e9760e397</td><td >SingleColumn</td></tr><tr ><td >4ad981fb-4e4b-45b8-91ab-f17acd4413d9</td><td >OneDirection</td><td >Many</td><td >Técnico que Capturou</td><td >Data única</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Técnico que Capturou</td><td >Colaboradores do setor</td><td >SingleColumn</td></tr><tr ><td >42eda636-1fe3-4829-a1c1-439f339daf19</td><td >OneDirection</td><td >Many</td><td >Tipo de serviço</td><td >Data única</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >reg_descri</td><td >par_regneg</td><td >SingleColumn</td></tr><tr ><td >10ea7686-5969-483a-9a84-a8254133a095</td><td >OneDirection</td><td >Many</td><td >Setor Solicitante</td><td >Data única</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >set_descri</td><td >col_setor</td><td >SingleColumn</td></tr><tr ><td >ffd90d84-9501-4f09-ac66-970b359a6422</td><td >OneDirection</td><td >Many</td><td >Avaliação</td><td >Data única</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >ava_descri</td><td >par_avalia</td><td >SingleColumn</td></tr><tr ><td >9da2cd40-d9c4-48d3-b154-ec7b5dc90cf8</td><td >OneDirection</td><td >Many</td><td >Tipo de Solicitação</td><td >Data única</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >cla_descri</td><td >par_classi</td><td >SingleColumn</td></tr><tr ><td >acc9302b-6e3c-4f1b-9120-b2765019f215</td><td >OneDirection</td><td >Many</td><td >Técnico que Concluiu a Solicitação</td><td >Data única</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >col_nome</td><td >col_colabo</td><td >SingleColumn</td></tr></table><hr></hr><br></br><h2><div>M (Power Query) Script:</div></h2><br></br><br></br><font face="verdana" size="2"<div>col_colabo<br></br><br></br><font color="blue">let</font><br></br>    Fonte = <font color="purple">Json.Document</font>(<font color="purple">File.Contents</font>(<font color="red">"C:\Users\natan\OneDrive\Documentos\GitHub\Projetos\Unimed Vale dos Sinos\par_solici\col_colabo.json"</font>)),<br></br>    #<font color="red">"Convertido para Tabela"</font> = <font color="purple">Table.FromList</font>(Fonte, <font color="purple">Splitter.SplitByNothing</font>(), <font color="blue">null</font>, <font color="blue">null</font>, <font color="purple">ExtraValues.Error</font>),<br></br>    #<font color="red">"Column1 Expandido"</font> = <font color="purple">Table.ExpandRecordColumn</font>(#<font color="red">"Convertido para Tabela"</font>, <font color="red">"Column1"</font>, {<font color="red">"col_id"</font>, <font color="red">"col_matric"</font>, <font color="red">"col_nome"</font>, <font color="red">"col_email"</font>, <font color="red">"col_ramal"</font>, <font color="red">"col_setor"</font>, <font color="red">"col_login"</font>, <font color="red">"col_dtnasc"</font>, <font color="red">"col_passwd"</font>, <font color="red">"col_status"</font>, <font color="red">"col_ccusto"</font>, <font color="red">"col_verba"</font>, <font color="red">"col_tpverb"</font>, <font color="red">"col_foto"</font>, <font color="red">"col_real"</font>, <font color="red">"col_unidad"</font>, <font color="red">"col_filial"</font>, <font color="red">"col_redire"</font>, <font color="red">"col_audita"</font>, <font color="red">"col_sistem"</font>, <font color="red">"col_recada"</font>, <font color="red">"col_newpsw"</font>, <font color="red">"col_rg"</font>, <font color="red">"col_cpf"</font>}, {<font color="red">"col_id"</font>, <font color="red">"col_matric"</font>, <font color="red">"col_nome"</font>, <font color="red">"col_email"</font>, <font color="red">"col_ramal"</font>, <font color="red">"col_setor"</font>, <font color="red">"col_login"</font>, <font color="red">"col_dtnasc"</font>, <font color="red">"col_passwd"</font>, <font color="red">"col_status"</font>, <font color="red">"col_ccusto"</font>, <font color="red">"col_verba"</font>, <font color="red">"col_tpverb"</font>, <font color="red">"col_foto"</font>, <font color="red">"col_real"</font>, <font color="red">"col_unidad"</font>, <font color="red">"col_filial"</font>, <font color="red">"col_redire"</font>, <font color="red">"col_audita"</font>, <font color="red">"col_sistem"</font>, <font color="red">"col_recada"</font>, <font color="red">"col_newpsw"</font>, <font color="red">"col_rg"</font>, <font color="red">"col_cpf"</font>}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Column1 Expandido"</font>,{<font color="red">"col_email"</font>, <font color="red">"col_ramal"</font>, <font color="red">"col_login"</font>, <font color="red">"col_dtnasc"</font>, <font color="red">"col_passwd"</font>, <font color="red">"col_ccusto"</font>, <font color="red">"col_verba"</font>, <font color="red">"col_tpverb"</font>, <font color="red">"col_foto"</font>, <font color="red">"col_real"</font>, <font color="red">"col_unidad"</font>, <font color="red">"col_filial"</font>, <font color="red">"col_redire"</font>, <font color="red">"col_audita"</font>, <font color="red">"col_sistem"</font>, <font color="red">"col_recada"</font>, <font color="red">"col_newpsw"</font>, <font color="red">"col_rg"</font>, <font color="red">"col_cpf"</font>}),<br></br>    #<font color="red">"Texto Aparado"</font> = <font color="purple">Table.TransformColumns</font>(#<font color="red">"Colunas Removidas"</font>,{{<font color="red">"col_nome"</font>, <font color="purple">Text.Trim</font>, <font color="blue">type</font> <font color="blue">text</font>}}),<br></br>    #<font color="red">"Coluna Mesclada Inserida"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Texto Aparado"</font>, <font color="red">"Mesclado"</font>, each <font color="purple">Text.Combine</font>({<font color="red">"Colaborador "</font>, <font color="purple">Text.From</font>([col_id], "pt-BR")}), <font color="blue">type</font> <font color="blue">text</font>),<br></br>    #<font color="red">"Colunas Removidas1"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Coluna Mesclada Inserida"</font>,{<font color="red">"col_nome"</font>}),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Colunas Removidas1"</font>,{{<font color="red">"Mesclado"</font>, <font color="red">"col_nome"</font>}})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Renomeadas"</font><br></br><br></br><br></br>----------------------<br></br>DateTableTemplate_518917fd-d445-4dc8-b86c-6b0e9bb93adc<br></br><br></br>Calendar(Date(2015,1,1), Date(2015,1,1))<br></br><br></br><br></br>----------------------<br></br>col_setor<br></br><br></br><font color="blue">let</font><br></br>    Fonte = <font color="purple">Json.Document</font>(<font color="purple">File.Contents</font>(<font color="red">"C:\Users\natan\OneDrive\Documentos\GitHub\Projetos\Unimed Vale dos Sinos\par_solici\col_setor.json"</font>)),<br></br>    #<font color="red">"Convertido para Tabela"</font> = <font color="purple">Table.FromList</font>(Fonte, <font color="purple">Splitter.SplitByNothing</font>(), <font color="blue">null</font>, <font color="blue">null</font>, <font color="purple">ExtraValues.Error</font>),<br></br>    #<font color="red">"Column1 Expandido"</font> = <font color="purple">Table.ExpandRecordColumn</font>(#<font color="red">"Convertido para Tabela"</font>, <font color="red">"Column1"</font>, {<font color="red">"set_id"</font>, <font color="red">"set_descri"</font>, <font color="red">"set_mural"</font>, <font color="red">"set_superv"</font>, <font color="red">"set_status"</font>, <font color="red">"set_pesqui"</font>, <font color="red">"set_real"</font>, <font color="red">"set_centro"</font>}, {<font color="red">"set_id"</font>, <font color="red">"set_descri"</font>, <font color="red">"set_mural"</font>, <font color="red">"set_superv"</font>, <font color="red">"set_status"</font>, <font color="red">"set_pesqui"</font>, <font color="red">"set_real"</font>, <font color="red">"set_centro"</font>}),<br></br>    #<font color="red">"Coluna Mesclada Inserida"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Column1 Expandido"</font>, <font color="red">"Mesclado"</font>, each <font color="purple">Text.Combine</font>({<font color="red">"Setor "</font>, <font color="purple">Text.From</font>([set_id], "pt-BR")}), <font color="blue">type</font> <font color="blue">text</font>),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Coluna Mesclada Inserida"</font>,{<font color="red">"set_descri"</font>}),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Colunas Removidas"</font>,{{<font color="red">"Mesclado"</font>, <font color="red">"set_descri"</font>}})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Renomeadas"</font><br></br><br></br><br></br>----------------------<br></br>par_avalia<br></br><br></br><font color="blue">let</font><br></br>    Fonte = <font color="purple">Json.Document</font>(<font color="purple">File.Contents</font>(<font color="red">"C:\Users\natan\OneDrive\Documentos\GitHub\Projetos\Unimed Vale dos Sinos\par_solici\par_avalia.json"</font>)),<br></br>    #<font color="red">"Convertido para Tabela"</font> = <font color="purple">Table.FromList</font>(Fonte, <font color="purple">Splitter.SplitByNothing</font>(), <font color="blue">null</font>, <font color="blue">null</font>, <font color="purple">ExtraValues.Error</font>),<br></br>    #<font color="red">"Column1 Expandido"</font> = <font color="purple">Table.ExpandRecordColumn</font>(#<font color="red">"Convertido para Tabela"</font>, <font color="red">"Column1"</font>, {<font color="red">"r_e_c_n_o_"</font>, <font color="red">"ava_valor"</font>, <font color="red">"ava_descri"</font>, <font color="red">"ava_consat"</font>, <font color="red">"d_e_l_e_t_"</font>}, {<font color="red">"r_e_c_n_o_"</font>, <font color="red">"ava_valor"</font>, <font color="red">"ava_descri"</font>, <font color="red">"ava_consat"</font>, <font color="red">"d_e_l_e_t_"</font>}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Column1 Expandido"</font>,{<font color="red">"d_e_l_e_t_"</font>}),<br></br>    #<font color="red">"Colocar Cada Palavra Em Maiúscula"</font> = <font color="purple">Table.TransformColumns</font>(#<font color="red">"Colunas Removidas"</font>,{{<font color="red">"ava_descri"</font>, <font color="purple">Text.Proper</font>, <font color="blue">type</font> <font color="blue">text</font>}})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colocar Cada Palavra Em Maiúscula"</font><br></br><br></br><br></br>----------------------<br></br>par_classi<br></br><br></br><font color="blue">let</font><br></br>    Fonte = <font color="purple">Json.Document</font>(<font color="purple">File.Contents</font>(<font color="red">"C:\Users\natan\OneDrive\Documentos\GitHub\Projetos\Unimed Vale dos Sinos\par_solici\par_classi.json"</font>)),<br></br>    #<font color="red">"Convertido para Tabela"</font> = <font color="purple">Table.FromList</font>(Fonte, <font color="purple">Splitter.SplitByNothing</font>(), <font color="blue">null</font>, <font color="blue">null</font>, <font color="purple">ExtraValues.Error</font>),<br></br>    #<font color="red">"Column1 Expandido"</font> = <font color="purple">Table.ExpandRecordColumn</font>(#<font color="red">"Convertido para Tabela"</font>, <font color="red">"Column1"</font>, {<font color="red">"cla_id"</font>, <font color="red">"cla_codigo"</font>, <font color="red">"cla_descri"</font>, <font color="red">"cla_situac"</font>, <font color="red">"d_e_l_e_t_"</font>}, {<font color="red">"cla_id"</font>, <font color="red">"cla_codigo"</font>, <font color="red">"cla_descri"</font>, <font color="red">"cla_situac"</font>, <font color="red">"d_e_l_e_t_"</font>}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Column1 Expandido"</font>,{<font color="red">"cla_situac"</font>, <font color="red">"d_e_l_e_t_"</font>}),<br></br>    #<font color="red">"Valor Substituído"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Colunas Removidas"</font>,<font color="red">"Parametro"</font>,<font color="red">"Parâmetro"</font>,<font color="purple">Replacer.ReplaceText</font>,{<font color="red">"cla_descri"</font>}),<br></br>    #<font color="red">"Valor Substituído1"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Valor Substituído"</font>,<font color="red">"Inclusao"</font>,<font color="red">"Inclusão"</font>,<font color="purple">Replacer.ReplaceText</font>,{<font color="red">"cla_descri"</font>}),<br></br>    #<font color="red">"Coluna Condicional Adicionada"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Valor Substituído1"</font>, <font color="red">"Tipo Macro"</font>, each <br></br>if [cla_codigo] = <font color="red">"AU"</font> then <font color="red">"Geral"</font><br></br>else if <font color="purple">Text.Contains</font>([cla_descri], <font color="red">"Parâmetro"</font>) then <font color="red">"Infraestrutura"</font> <font color="green">//IP,CP,AP,AU,AN</font>
else if <font color="purple">Text.Contains</font>([cla_descri], <font color="red">"Regulamentação"</font>) then <font color="red">"Sistemas"</font> <font color="green">//RG,AR</font>
else if <font color="purple">Text.Contains</font>([cla_descri], <font color="red">"Consultoria"</font>) then <font color="red">"Projetos"</font> <br></br>else if [cla_descri] = <font color="red">"Regularização de Contratos"</font> then <font color="red">"Sistema"</font> <font color="green">//RC</font>
else <font color="red">"Geral"</font>)<br></br><font color="blue">in</font><br></br>    #<font color="red">"Coluna Condicional Adicionada"</font><br></br><br></br><br></br>----------------------<br></br>par_regneg<br></br><br></br><font color="blue">let</font><br></br>    Fonte = <font color="purple">Json.Document</font>(<font color="purple">File.Contents</font>(<font color="red">"C:\Users\natan\OneDrive\Documentos\GitHub\Projetos\Unimed Vale dos Sinos\par_solici\par_regneg.json"</font>)),<br></br>    #<font color="red">"Convertido para Tabela"</font> = <font color="purple">Table.FromList</font>(Fonte, <font color="purple">Splitter.SplitByNothing</font>(), <font color="blue">null</font>, <font color="blue">null</font>, <font color="purple">ExtraValues.Error</font>),<br></br>    #<font color="red">"Column1 Expandido"</font> = <font color="purple">Table.ExpandRecordColumn</font>(#<font color="red">"Convertido para Tabela"</font>, <font color="red">"Column1"</font>, {<font color="red">"reg_id"</font>, <font color="red">"reg_codigo"</font>, <font color="red">"reg_descri"</font>, <font color="red">"reg_situac"</font>, <font color="red">"d_e_l_e_t_"</font>}, {<font color="red">"reg_id"</font>, <font color="red">"reg_codigo"</font>, <font color="red">"reg_descri"</font>, <font color="red">"reg_situac"</font>, <font color="red">"d_e_l_e_t_"</font>}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Column1 Expandido"</font>,{<font color="red">"d_e_l_e_t_"</font>}),<br></br>    #<font color="red">"Índice Adicionado"</font> = <font color="purple">Table.AddIndexColumn</font>(#<font color="red">"Colunas Removidas"</font>, <font color="red">"Índice"</font>, 0, 1, <font color="purple">Int64.Type</font>),<br></br>    #<font color="red">"Coluna Mesclada Inserida"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Índice Adicionado"</font>, <font color="red">"Mesclado"</font>, each <font color="purple">Text.Combine</font>({<font color="red">"Serviço "</font>, <font color="purple">Text.From</font>([Índice]+1, "pt-BR")}), <font color="blue">type</font> <font color="blue">text</font>),<br></br>    #<font color="red">"Colunas Removidas1"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Coluna Mesclada Inserida"</font>,{<font color="red">"reg_descri"</font>}),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Colunas Removidas1"</font>,{{<font color="red">"Mesclado"</font>, <font color="red">"reg_descri"</font>}})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Renomeadas"</font><br></br><br></br><br></br>----------------------<br></br>par_solici<br></br><br></br><font color="blue">let</font><br></br>    Fonte = <font color="purple">Json.Document</font>(<font color="purple">File.Contents</font>(<font color="red">"C:\Users\natan\OneDrive\Documentos\GitHub\Projetos\Unimed Vale dos Sinos\par_solici\par_solici.json"</font>)),<br></br>    #<font color="red">"Convertido para Tabela"</font> = <font color="purple">Table.FromList</font>(Fonte, <font color="purple">Splitter.SplitByNothing</font>(), <font color="blue">null</font>, <font color="blue">null</font>, <font color="purple">ExtraValues.Error</font>),<br></br>    #<font color="red">"Column1 Expandido"</font> = <font color="purple">Table.ExpandRecordColumn</font>(#<font color="red">"Convertido para Tabela"</font>, <font color="red">"Column1"</font>, {<font color="red">"frm_id"</font>, <font color="red">"frm_datinc"</font>, <font color="red">"frm_colsol"</font>, <font color="red">"frm_setsol"</font>, <font color="red">"frm_colpre"</font>, <font color="red">"frm_ramal"</font>, <font color="red">"frm_motivo"</font>, <font color="red">"frm_descri"</font>, <font color="red">"frm_colcap"</font>, <font color="red">"frm_datcap"</font>, <font color="red">"frm_dtconc"</font>, <font color="red">"frm_colcon"</font>, <font color="red">"frm_priori"</font>, <font color="red">"frm_aplica"</font>, <font color="red">"frm_observ"</font>, <font color="red">"frm_dtconf"</font>, <font color="red">"frm_confpo"</font>, <font color="red">"frm_situac"</font>, <font color="red">"frm_chave"</font>, <font color="red">"frm_status"</font>, <font color="red">"frm_horas"</font>, <font color="red">"frm_minut"</font>, <font color="red">"frm_avalia"</font>, <font color="red">"frm_obsava"</font>, <font color="red">"frm_tipoco"</font>, <font color="red">"frm_regneg"</font>, <font color="red">"frm_denvig"</font>, <font color="red">"frm_reavig"</font>, <font color="red">"d_e_l_e_t_"</font>, <font color="red">"frm_lembre"</font>, <font color="red">"frm_parece"</font>, <font color="red">"frm_acoes"</font>, <font color="red">"frm_limite"</font>, <font color="red">"frm_solpri"</font>, <font color="red">"frm_qtderg"</font>}, {<font color="red">"frm_id"</font>, <font color="red">"frm_datinc"</font>, <font color="red">"frm_colsol"</font>, <font color="red">"frm_setsol"</font>, <font color="red">"frm_colpre"</font>, <font color="red">"frm_ramal"</font>, <font color="red">"frm_motivo"</font>, <font color="red">"frm_descri"</font>, <font color="red">"frm_colcap"</font>, <font color="red">"frm_datcap"</font>, <font color="red">"frm_dtconc"</font>, <font color="red">"frm_colcon"</font>, <font color="red">"frm_priori"</font>, <font color="red">"frm_aplica"</font>, <font color="red">"frm_observ"</font>, <font color="red">"frm_dtconf"</font>, <font color="red">"frm_confpo"</font>, <font color="red">"frm_situac"</font>, <font color="red">"frm_chave"</font>, <font color="red">"frm_status"</font>, <font color="red">"frm_horas"</font>, <font color="red">"frm_minut"</font>, <font color="red">"frm_avalia"</font>, <font color="red">"frm_obsava"</font>, <font color="red">"frm_tipoco"</font>, <font color="red">"frm_regneg"</font>, <font color="red">"frm_denvig"</font>, <font color="red">"frm_reavig"</font>, <font color="red">"d_e_l_e_t_"</font>, <font color="red">"frm_lembre"</font>, <font color="red">"frm_parece"</font>, <font color="red">"frm_acoes"</font>, <font color="red">"frm_limite"</font>, <font color="red">"frm_solpri"</font>, <font color="red">"frm_qtderg"</font>}),<br></br>    #<font color="red">"Consultas Mescladas"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"Column1 Expandido"</font>, {<font color="red">"frm_colsol"</font>}, col_colabo, {<font color="red">"col_id"</font>}, <font color="red">"col_colabo"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"col_colabo Expandido"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas"</font>, <font color="red">"col_colabo"</font>, {<font color="red">"col_nome"</font>, <font color="red">"col_setor"</font>}, {<font color="red">"frm_colsol_nome"</font>, <font color="red">"frm_colsol_setor"</font>}),<br></br>    #<font color="red">"Consultas Mescladas1"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"col_colabo Expandido"</font>, {<font color="red">"frm_setsol"</font>}, col_setor, {<font color="red">"set_id"</font>}, <font color="red">"col_setor"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"col_setor Expandido"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas1"</font>, <font color="red">"col_setor"</font>, {<font color="red">"set_descri"</font>}, {<font color="red">"frm_setsol_nome"</font>}),<br></br>    #<font color="red">"Coluna Condicional Adicionada"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"col_setor Expandido"</font>, "colsol setor = setsol", each if [frm_colsol_setor] = [frm_setsol] then <font color="red">"OK"</font> else <font color="red">"Não"</font>),<br></br>    #<font color="red">"Consultas Mescladas2"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"Coluna Condicional Adicionada"</font>, {<font color="red">"frm_colsol_setor"</font>}, col_setor, {<font color="red">"set_id"</font>}, <font color="red">"col_setor"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"col_setor Expandido1"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas2"</font>, <font color="red">"col_setor"</font>, {<font color="red">"set_descri"</font>}, {<font color="red">"frm_colsol_set_nome"</font>}),<br></br>    #<font color="red">"Consultas Mescladas3"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"col_setor Expandido1"</font>, {<font color="red">"frm_colpre"</font>}, col_colabo, {<font color="red">"col_id"</font>}, <font color="red">"col_colabo"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"col_colabo Expandido1"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas3"</font>, <font color="red">"col_colabo"</font>, {<font color="red">"col_nome"</font>}, {<font color="red">"frm_colpre_nome"</font>}),<br></br>    #<font color="red">"Consultas Mescladas4"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"col_colabo Expandido1"</font>, {<font color="red">"frm_colcap"</font>}, col_colabo, {<font color="red">"col_id"</font>}, <font color="red">"col_colabo"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"col_colabo Expandido2"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas4"</font>, <font color="red">"col_colabo"</font>, {<font color="red">"col_nome"</font>}, {<font color="red">"frm_colcap_nome"</font>}),<br></br>    #<font color="red">"Consultas Mescladas5"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"col_colabo Expandido2"</font>, {<font color="red">"frm_tipoco"</font>}, par_classi, {<font color="red">"cla_codigo"</font>}, <font color="red">"par_classi"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"par_classi Expandido"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas5"</font>, <font color="red">"par_classi"</font>, {<font color="red">"cla_descri"</font>, <font color="red">"Tipo Macro"</font>}, {<font color="red">"frm_tipoco_nome"</font>, <font color="red">"tipo_macro"</font>}),<br></br>    #<font color="red">"Consultas Mescladas6"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"par_classi Expandido"</font>, {<font color="red">"frm_regneg"</font>}, par_regneg, {<font color="red">"reg_codigo"</font>}, <font color="red">"par_regneg"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"par_regneg Expandido"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas6"</font>, <font color="red">"par_regneg"</font>, {<font color="red">"reg_descri"</font>}, {<font color="red">"frm_regneg_nome"</font>}),<br></br>    #<font color="red">"Consultas Mescladas7"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"par_regneg Expandido"</font>, {<font color="red">"frm_avalia"</font>}, par_avalia, {<font color="red">"ava_valor"</font>}, <font color="red">"par_avalia"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"par_avalia Expandido"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas7"</font>, <font color="red">"par_avalia"</font>, {<font color="red">"ava_descri"</font>, <font color="red">"ava_consat"</font>}, {<font color="red">"frm_avalia_nome"</font>, <font color="red">"frm_avalia_consat"</font>}),<br></br>    #<font color="red">"Consultas Mescladas8"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"par_avalia Expandido"</font>, {<font color="red">"frm_colcon"</font>}, col_colabo, {<font color="red">"col_id"</font>}, <font color="red">"col_colabo"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"col_colabo Expandido3"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas8"</font>, <font color="red">"col_colabo"</font>, {<font color="red">"col_nome"</font>}, {<font color="red">"frm_colcon_nome"</font>}),<br></br>    #<font color="red">"Tratamento de valores nulos"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"col_colabo Expandido3"</font>, <font color="red">"frm_setsol_nome_trat"</font>, each if [frm_setsol_nome] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_setsol_nome]),<br></br>    #<font color="red">"Tratamento de valores nulos1"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos"</font>, <font color="red">"frm_colsol_set_nome_trat"</font>, each if [frm_colsol_set_nome] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_colsol_set_nome]),<br></br>    #<font color="red">"Tratamento de valores nulos2"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos1"</font>, <font color="red">"frm_colcap_nome_trat"</font>, each if [frm_colcap_nome] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_colcap_nome]),<br></br>    #<font color="red">"Tratamento de valores nulos3"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos2"</font>, <font color="red">"frm_tipoco_nome_trat"</font>, each if [frm_tipoco_nome] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_tipoco_nome]),<br></br>    #<font color="red">"Tratamento de valores nulos4"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos3"</font>, <font color="red">"Tipo Macro"</font>, each if [tipo_macro] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [tipo_macro]),<br></br>    #<font color="red">"Tratamento de valores nulos5"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos4"</font>, <font color="red">"frm_regneg_nome_trat"</font>, each if [frm_regneg_nome] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_regneg_nome]),<br></br>    #<font color="red">"Tratamento de valores nulos6"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos5"</font>, <font color="red">"frm_avalia_nome_trat"</font>, each if [frm_avalia_nome] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_avalia_nome]),<br></br>    #<font color="red">"Tratamento de valores nulos7"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos6"</font>, <font color="red">"frm_avalia_consat_trat"</font>, each if [frm_avalia_consat] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_avalia_consat]),<br></br>    #<font color="red">"Tratamento de valores nulos8"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos7"</font>, <font color="red">"frm_colcon_nome_trat"</font>, each if [frm_colcon_nome] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_colcon_nome]),<br></br>    #<font color="red">"Tratamento de valores nulos9"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos8"</font>, <font color="red">"frm_limite_trat"</font>, each if [frm_limite] = <font color="red">""</font> then [frm_dtconc] else [frm_limite]),<br></br>    #<font color="red">"frm_tem_limite"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos9"</font>, <font color="red">"frm_tem_limite"</font>, each if [frm_limite] = <font color="red">""</font> then <font color="red">"N"</font> else <font color="red">"S"</font>),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(frm_tem_limite,{{<font color="red">"frm_id"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_datinc"</font>, <font color="blue">type</font> datetime}, {<font color="red">"frm_datcap"</font>, <font color="blue">type</font> datetime}, {<font color="red">"frm_dtconc"</font>, <font color="blue">type</font> datetime}, {<font color="red">"frm_priori"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_aplica"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_situac"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_status"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_horas"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"frm_minut"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"frm_limite"</font>, <font color="blue">type</font> <font color="blue">date</font>}, {<font color="red">"frm_solpri"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_qtderg"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"frm_colsol_nome"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {"colsol setor = setsol", <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_colpre_nome"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_tem_limite"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_limite_trat"</font>, <font color="blue">type</font> datetime}, {<font color="red">"frm_colcon_nome_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_avalia_consat_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_avalia_nome_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_regneg_nome_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_tipoco_nome_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_colcap_nome_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_colsol_set_nome_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_setsol_nome_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}}),<br></br>    #<font color="red">"Data Extraída"</font> = <font color="purple">Table.TransformColumns</font>(#<font color="red">"Tipo Alterado"</font>,{{<font color="red">"frm_limite_trat"</font>, <font color="purple">DateTime.Date</font>, <font color="blue">type</font> <font color="blue">date</font>}}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Data Extraída"</font>,{<font color="red">"frm_colsol"</font>, <font color="red">"frm_colpre"</font>, <font color="red">"frm_ramal"</font>, <font color="red">"frm_motivo"</font>, <font color="red">"frm_descri"</font>, <font color="red">"frm_colcap"</font>, <font color="red">"frm_observ"</font>, <font color="red">"frm_dtconf"</font>, <font color="red">"frm_confpo"</font>, <font color="red">"frm_chave"</font>, <font color="red">"frm_avalia"</font>, <font color="red">"frm_obsava"</font>, <font color="red">"frm_regneg"</font>, <font color="red">"frm_denvig"</font>, <font color="red">"frm_reavig"</font>, <font color="red">"d_e_l_e_t_"</font>, <font color="red">"frm_lembre"</font>, <font color="red">"frm_parece"</font>, <font color="red">"frm_acoes"</font>, <font color="red">"frm_setsol_nome"</font>, <font color="red">"frm_colsol_set_nome"</font>, <font color="red">"frm_colcap_nome"</font>, <font color="red">"frm_tipoco_nome"</font>, <font color="red">"frm_regneg_nome"</font>, <font color="red">"frm_avalia_nome"</font>, <font color="red">"frm_avalia_consat"</font>, <font color="red">"frm_colcon_nome"</font>, <font color="red">"frm_colsol_setor"</font>, <font color="red">"frm_limite"</font>,<font color="red">"tipo_macro"</font>}),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Colunas Removidas"</font>,{{<font color="red">"frm_id"</font>, <font color="red">"Id da Solicitação"</font>}, {<font color="red">"frm_datinc"</font>, <font color="red">"Data de início"</font>}, {<font color="red">"frm_datcap"</font>, <font color="red">"Data de captura"</font>}, {<font color="red">"frm_dtconc"</font>, <font color="red">"Data de conclusão"</font>}, {<font color="red">"frm_priori"</font>, <font color="red">"Prioridade"</font>}, {<font color="red">"frm_situac"</font>, <font color="red">"Situação"</font>}, {<font color="red">"frm_status"</font>, <font color="red">"Status"</font>}, {<font color="red">"frm_horas"</font>, "Duração - Horas"}, {<font color="red">"frm_minut"</font>, "Duração - Minutos"}, {<font color="red">"frm_colsol_nome"</font>, <font color="red">"Colaborador Solicitante"</font>}, {<font color="red">"frm_setsol_nome_trat"</font>, <font color="red">"Setor Solicitante"</font>}, {<font color="red">"frm_colsol_set_nome_trat"</font>, <font color="red">"Setor do Colaborador Solicitante"</font>}, {<font color="red">"frm_colcap_nome_trat"</font>, <font color="red">"Técnico que Capturou"</font>}, {<font color="red">"frm_tipoco_nome_trat"</font>, <font color="red">"Tipo de Solicitação"</font>}, {<font color="red">"frm_regneg_nome_trat"</font>, <font color="red">"Tipo de serviço"</font>}, {<font color="red">"frm_avalia_nome_trat"</font>, <font color="red">"Avaliação"</font>}, {<font color="red">"frm_avalia_consat_trat"</font>, <font color="red">"Possui Avaliação"</font>}, {<font color="red">"frm_colcon_nome_trat"</font>, <font color="red">"Técnico que Concluiu a Solicitação"</font>}, {<font color="red">"frm_limite_trat"</font>, <font color="red">"Data Limite"</font>}, {<font color="red">"frm_tem_limite"</font>, <font color="red">"Possui Data Limite"</font>}}),<br></br>    #<font color="red">"Colocar Cada Palavra Em Maiúscula"</font> = <font color="purple">Table.TransformColumns</font>(#<font color="red">"Colunas Renomeadas"</font>,{{<font color="red">"Colaborador Solicitante"</font>, <font color="purple">Text.Proper</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_colpre_nome"</font>, <font color="purple">Text.Proper</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Técnico que Capturou"</font>, <font color="purple">Text.Proper</font>, <font color="blue">type</font> <font color="blue">text</font>}}),<br></br>    #<font color="red">"Coluna Duplicada"</font> = <font color="purple">Table.DuplicateColumn</font>(#<font color="red">"Colocar Cada Palavra Em Maiúscula"</font>, <font color="red">"Data de início"</font>, "Data de início - Copiar"),<br></br>    #<font color="red">"Coluna Duplicada1"</font> = <font color="purple">Table.DuplicateColumn</font>(#<font color="red">"Coluna Duplicada"</font>, <font color="red">"Data de conclusão"</font>, "Data de conclusão - Copiar"),<br></br>    #<font color="red">"Colunas Renomeadas1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Coluna Duplicada1"</font>,{{"Data de início - Copiar<font color="red">", "</font>Hora de início"}, {"Data de conclusão - Copiar<font color="red">", "</font>Hora de conclusão"}}),<br></br>    #<font color="red">"Valor Substituído"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Colunas Renomeadas1"</font>,<font color="red">"PA"</font>,<font color="red">"Pendente com o Técnico"</font>,<font color="purple">Replacer.ReplaceText</font>,{<font color="red">"Situação"</font>}),<br></br>    #<font color="red">"Valor Substituído1"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Valor Substituído"</font>,<font color="red">"PU"</font>,<font color="red">"Pendente com o usuário"</font>,<font color="purple">Replacer.ReplaceText</font>,{<font color="red">"Situação"</font>}),<br></br>    #<font color="red">"Valor Substituído2"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Valor Substituído1"</font>,<font color="red">"PM"</font>,<font color="red">"Orçamento Pendete"</font>,<font color="purple">Replacer.ReplaceText</font>,{<font color="red">"Situação"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Valor Substituído2"</font><br></br><br></br><br></br>----------------------<br></br>Tabela Calendário<br></br><br></br><br></br>ADDCOLUMNS(<br></br>    CALENDAR(MIN('Data única'[Data]),MAX('Data única'[Data])),<br></br>    <font color="red">"Dia num"</font>, DAY([Date]),<br></br>    <font color="red">"Dia nome"</font>, FORMAT([Date],<font color="red">"dddd"</font>),<br></br>    <font color="red">"Dia da semana"</font>, WEEKDAY([Date]),<br></br>    <font color="red">"Semana num"</font>, WEEKNUM([Date]),<br></br>    <font color="red">"Mês num"</font>, MONTH([Date]),<br></br>    <font color="red">"Mês nome"</font>, FORMAT([Date],<font color="red">"mmmm"</font>),<br></br>    <font color="red">"Trimestre"</font>, QUARTER([Date]),<br></br>    <font color="red">"Ano"</font>, YEAR([Date])<br></br>)<br></br><br></br><br></br>----------------------<br></br>Colaboradores do setor<br></br><br></br>DISTINCT(par_solici[Técnico que Capturou])<br></br><br></br><br></br><br></br>----------------------<br></br>Medidas<br></br><br></br>Row(<font color="red">"Column"</font>, BLANK())<br></br><br></br><br></br>----------------------<br></br>LocalDateTable_16ec3c8f-e0b1-4d1b-87a0-d4b72994ab63<br></br><br></br>Calendar(Date(Year(MIN('par_solici'[Data Limite])), 1, 1), Date(Year(MAX('par_solici'[Data Limite])), 12, 31))<br></br><br></br><br></br>----------------------<br></br>LocalDateTable_99eb6c84-5f59-467d-a7ff-f4da220ccc58<br></br><br></br>Calendar(Date(Year(MIN('par_solici'[Data de captura])), 1, 1), Date(Year(MAX('par_solici'[Data de captura])), 12, 31))<br></br><br></br><br></br>----------------------<br></br>Data única<br></br><br></br><font color="blue">let</font><br></br>    Fonte = <font color="purple">Json.Document</font>(<font color="purple">File.Contents</font>(<font color="red">"C:\Users\natan\OneDrive\Documentos\GitHub\Projetos\Unimed Vale dos Sinos\par_solici\par_solici.json"</font>)),<br></br>    #<font color="red">"Convertido para Tabela"</font> = <font color="purple">Table.FromList</font>(Fonte, <font color="purple">Splitter.SplitByNothing</font>(), <font color="blue">null</font>, <font color="blue">null</font>, <font color="purple">ExtraValues.Error</font>),<br></br>    #<font color="red">"Column1 Expandido"</font> = <font color="purple">Table.ExpandRecordColumn</font>(#<font color="red">"Convertido para Tabela"</font>, <font color="red">"Column1"</font>, {<font color="red">"frm_id"</font>, <font color="red">"frm_datinc"</font>, <font color="red">"frm_colsol"</font>, <font color="red">"frm_setsol"</font>, <font color="red">"frm_colpre"</font>, <font color="red">"frm_ramal"</font>, <font color="red">"frm_motivo"</font>, <font color="red">"frm_descri"</font>, <font color="red">"frm_colcap"</font>, <font color="red">"frm_datcap"</font>, <font color="red">"frm_dtconc"</font>, <font color="red">"frm_colcon"</font>, <font color="red">"frm_priori"</font>, <font color="red">"frm_aplica"</font>, <font color="red">"frm_observ"</font>, <font color="red">"frm_dtconf"</font>, <font color="red">"frm_confpo"</font>, <font color="red">"frm_situac"</font>, <font color="red">"frm_chave"</font>, <font color="red">"frm_status"</font>, <font color="red">"frm_horas"</font>, <font color="red">"frm_minut"</font>, <font color="red">"frm_avalia"</font>, <font color="red">"frm_obsava"</font>, <font color="red">"frm_tipoco"</font>, <font color="red">"frm_regneg"</font>, <font color="red">"frm_denvig"</font>, <font color="red">"frm_reavig"</font>, <font color="red">"d_e_l_e_t_"</font>, <font color="red">"frm_lembre"</font>, <font color="red">"frm_parece"</font>, <font color="red">"frm_acoes"</font>, <font color="red">"frm_limite"</font>, <font color="red">"frm_solpri"</font>, <font color="red">"frm_qtderg"</font>}, {<font color="red">"frm_id"</font>, <font color="red">"frm_datinc"</font>, <font color="red">"frm_colsol"</font>, <font color="red">"frm_setsol"</font>, <font color="red">"frm_colpre"</font>, <font color="red">"frm_ramal"</font>, <font color="red">"frm_motivo"</font>, <font color="red">"frm_descri"</font>, <font color="red">"frm_colcap"</font>, <font color="red">"frm_datcap"</font>, <font color="red">"frm_dtconc"</font>, <font color="red">"frm_colcon"</font>, <font color="red">"frm_priori"</font>, <font color="red">"frm_aplica"</font>, <font color="red">"frm_observ"</font>, <font color="red">"frm_dtconf"</font>, <font color="red">"frm_confpo"</font>, <font color="red">"frm_situac"</font>, <font color="red">"frm_chave"</font>, <font color="red">"frm_status"</font>, <font color="red">"frm_horas"</font>, <font color="red">"frm_minut"</font>, <font color="red">"frm_avalia"</font>, <font color="red">"frm_obsava"</font>, <font color="red">"frm_tipoco"</font>, <font color="red">"frm_regneg"</font>, <font color="red">"frm_denvig"</font>, <font color="red">"frm_reavig"</font>, <font color="red">"d_e_l_e_t_"</font>, <font color="red">"frm_lembre"</font>, <font color="red">"frm_parece"</font>, <font color="red">"frm_acoes"</font>, <font color="red">"frm_limite"</font>, <font color="red">"frm_solpri"</font>, <font color="red">"frm_qtderg"</font>}),<br></br>    #<font color="red">"Consultas Mescladas"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"Column1 Expandido"</font>, {<font color="red">"frm_colsol"</font>}, col_colabo, {<font color="red">"col_id"</font>}, <font color="red">"col_colabo"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"col_colabo Expandido"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas"</font>, <font color="red">"col_colabo"</font>, {<font color="red">"col_nome"</font>, <font color="red">"col_setor"</font>}, {<font color="red">"frm_colsol_nome"</font>, <font color="red">"frm_colsol_setor"</font>}),<br></br>    #<font color="red">"Consultas Mescladas1"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"col_colabo Expandido"</font>, {<font color="red">"frm_setsol"</font>}, col_setor, {<font color="red">"set_id"</font>}, <font color="red">"col_setor"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"col_setor Expandido"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas1"</font>, <font color="red">"col_setor"</font>, {<font color="red">"set_descri"</font>}, {<font color="red">"frm_setsol_nome"</font>}),<br></br>    #<font color="red">"Coluna Condicional Adicionada"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"col_setor Expandido"</font>, "colsol setor = setsol", each if [frm_colsol_setor] = [frm_setsol] then <font color="red">"OK"</font> else <font color="red">"Não"</font>),<br></br>    #<font color="red">"Consultas Mescladas2"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"Coluna Condicional Adicionada"</font>, {<font color="red">"frm_colsol_setor"</font>}, col_setor, {<font color="red">"set_id"</font>}, <font color="red">"col_setor"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"col_setor Expandido1"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas2"</font>, <font color="red">"col_setor"</font>, {<font color="red">"set_descri"</font>}, {<font color="red">"frm_colsol_set_nome"</font>}),<br></br>    #<font color="red">"Consultas Mescladas3"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"col_setor Expandido1"</font>, {<font color="red">"frm_colpre"</font>}, col_colabo, {<font color="red">"col_id"</font>}, <font color="red">"col_colabo"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"col_colabo Expandido1"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas3"</font>, <font color="red">"col_colabo"</font>, {<font color="red">"col_nome"</font>}, {<font color="red">"frm_colpre_nome"</font>}),<br></br>    #<font color="red">"Consultas Mescladas4"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"col_colabo Expandido1"</font>, {<font color="red">"frm_colcap"</font>}, col_colabo, {<font color="red">"col_id"</font>}, <font color="red">"col_colabo"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"col_colabo Expandido2"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas4"</font>, <font color="red">"col_colabo"</font>, {<font color="red">"col_nome"</font>}, {<font color="red">"frm_colcap_nome"</font>}),<br></br>    #<font color="red">"Consultas Mescladas5"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"col_colabo Expandido2"</font>, {<font color="red">"frm_tipoco"</font>}, par_classi, {<font color="red">"cla_codigo"</font>}, <font color="red">"par_classi"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"par_classi Expandido"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas5"</font>, <font color="red">"par_classi"</font>, {<font color="red">"cla_descri"</font>, <font color="red">"Tipo Macro"</font>}, {<font color="red">"frm_tipoco_nome"</font>, <font color="red">"tipo_macro"</font>}),<br></br>    #<font color="red">"Consultas Mescladas6"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"par_classi Expandido"</font>, {<font color="red">"frm_regneg"</font>}, par_regneg, {<font color="red">"reg_codigo"</font>}, <font color="red">"par_regneg"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"par_regneg Expandido"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas6"</font>, <font color="red">"par_regneg"</font>, {<font color="red">"reg_descri"</font>}, {<font color="red">"frm_regneg_nome"</font>}),<br></br>    #<font color="red">"Consultas Mescladas7"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"par_regneg Expandido"</font>, {<font color="red">"frm_avalia"</font>}, par_avalia, {<font color="red">"ava_valor"</font>}, <font color="red">"par_avalia"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"par_avalia Expandido"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas7"</font>, <font color="red">"par_avalia"</font>, {<font color="red">"ava_descri"</font>, <font color="red">"ava_consat"</font>}, {<font color="red">"frm_avalia_nome"</font>, <font color="red">"frm_avalia_consat"</font>}),<br></br>    #<font color="red">"Consultas Mescladas8"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"par_avalia Expandido"</font>, {<font color="red">"frm_colcon"</font>}, col_colabo, {<font color="red">"col_id"</font>}, <font color="red">"col_colabo"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"col_colabo Expandido3"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas8"</font>, <font color="red">"col_colabo"</font>, {<font color="red">"col_nome"</font>}, {<font color="red">"frm_colcon_nome"</font>}),<br></br>    #<font color="red">"Tratamento de valores nulos"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"col_colabo Expandido3"</font>, <font color="red">"frm_setsol_nome_trat"</font>, each if [frm_setsol_nome] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_setsol_nome]),<br></br>    #<font color="red">"Tratamento de valores nulos1"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos"</font>, <font color="red">"frm_colsol_set_nome_trat"</font>, each if [frm_colsol_set_nome] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_colsol_set_nome]),<br></br>    #<font color="red">"Tratamento de valores nulos2"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos1"</font>, <font color="red">"frm_colcap_nome_trat"</font>, each if [frm_colcap_nome] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_colcap_nome]),<br></br>    #<font color="red">"Tratamento de valores nulos3"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos2"</font>, <font color="red">"frm_tipoco_nome_trat"</font>, each if [frm_tipoco_nome] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_tipoco_nome]),<br></br>    #<font color="red">"Tratamento de valores nulos4"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos3"</font>, <font color="red">"Tipo Macro"</font>, each if [tipo_macro] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [tipo_macro]),<br></br>    #<font color="red">"Tratamento de valores nulos5"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos4"</font>, <font color="red">"frm_regneg_nome_trat"</font>, each if [frm_regneg_nome] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_regneg_nome]),<br></br>    #<font color="red">"Tratamento de valores nulos6"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos5"</font>, <font color="red">"frm_avalia_nome_trat"</font>, each if [frm_avalia_nome] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_avalia_nome]),<br></br>    #<font color="red">"Tratamento de valores nulos7"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos6"</font>, <font color="red">"frm_avalia_consat_trat"</font>, each if [frm_avalia_consat] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_avalia_consat]),<br></br>    #<font color="red">"Tratamento de valores nulos8"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos7"</font>, <font color="red">"frm_colcon_nome_trat"</font>, each if [frm_colcon_nome] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_colcon_nome]),<br></br>    #<font color="red">"Tratamento de valores nulos9"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos8"</font>, <font color="red">"frm_limite_trat"</font>, each if [frm_limite] = <font color="red">""</font> then [frm_dtconc] else [frm_limite]),<br></br>    #<font color="red">"frm_tem_limite"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos9"</font>, <font color="red">"frm_tem_limite"</font>, each if [frm_limite] = <font color="red">""</font> then <font color="red">"N"</font> else <font color="red">"S"</font>),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(frm_tem_limite,{{<font color="red">"frm_id"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_datinc"</font>, <font color="blue">type</font> datetime}, {<font color="red">"frm_datcap"</font>, <font color="blue">type</font> datetime}, {<font color="red">"frm_dtconc"</font>, <font color="blue">type</font> datetime}, {<font color="red">"frm_priori"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_aplica"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_situac"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_status"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_horas"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"frm_minut"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"frm_limite"</font>, <font color="blue">type</font> <font color="blue">date</font>}, {<font color="red">"frm_solpri"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_qtderg"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"frm_colsol_nome"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {"colsol setor = setsol", <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_colpre_nome"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_tem_limite"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_limite_trat"</font>, <font color="blue">type</font> datetime}, {<font color="red">"frm_colcon_nome_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_avalia_consat_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_avalia_nome_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_regneg_nome_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_tipoco_nome_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_colcap_nome_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_colsol_set_nome_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_setsol_nome_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}}),<br></br>    #<font color="red">"Data Extraída"</font> = <font color="purple">Table.TransformColumns</font>(#<font color="red">"Tipo Alterado"</font>,{{<font color="red">"frm_limite_trat"</font>, <font color="purple">DateTime.Date</font>, <font color="blue">type</font> <font color="blue">date</font>}}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Data Extraída"</font>,{<font color="red">"frm_colsol"</font>, <font color="red">"frm_colpre"</font>, <font color="red">"frm_ramal"</font>, <font color="red">"frm_motivo"</font>, <font color="red">"frm_descri"</font>, <font color="red">"frm_colcap"</font>, <font color="red">"frm_observ"</font>, <font color="red">"frm_dtconf"</font>, <font color="red">"frm_confpo"</font>, <font color="red">"frm_chave"</font>, <font color="red">"frm_avalia"</font>, <font color="red">"frm_obsava"</font>, <font color="red">"frm_regneg"</font>, <font color="red">"frm_denvig"</font>, <font color="red">"frm_reavig"</font>, <font color="red">"d_e_l_e_t_"</font>, <font color="red">"frm_lembre"</font>, <font color="red">"frm_parece"</font>, <font color="red">"frm_acoes"</font>, <font color="red">"frm_setsol_nome"</font>, <font color="red">"frm_colsol_set_nome"</font>, <font color="red">"frm_colcap_nome"</font>, <font color="red">"frm_tipoco_nome"</font>, <font color="red">"frm_regneg_nome"</font>, <font color="red">"frm_avalia_nome"</font>, <font color="red">"frm_avalia_consat"</font>, <font color="red">"frm_colcon_nome"</font>, <font color="red">"frm_colsol_setor"</font>, <font color="red">"frm_limite"</font>,<font color="red">"tipo_macro"</font>}),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Colunas Removidas"</font>,{{<font color="red">"frm_id"</font>, <font color="red">"Id da Solicitação"</font>}, {<font color="red">"frm_datinc"</font>, <font color="red">"Data de início"</font>}, {<font color="red">"frm_datcap"</font>, <font color="red">"Data de captura"</font>}, {<font color="red">"frm_dtconc"</font>, <font color="red">"Data de conclusão"</font>}, {<font color="red">"frm_priori"</font>, <font color="red">"Prioridade"</font>}, {<font color="red">"frm_situac"</font>, <font color="red">"Situação"</font>}, {<font color="red">"frm_status"</font>, <font color="red">"Status"</font>}, {<font color="red">"frm_horas"</font>, "Duração - Horas"}, {<font color="red">"frm_minut"</font>, "Duração - Minutos"}, {<font color="red">"frm_colsol_nome"</font>, <font color="red">"Colaborador Solicitante"</font>}, {<font color="red">"frm_setsol_nome_trat"</font>, <font color="red">"Setor Solicitante"</font>}, {<font color="red">"frm_colsol_set_nome_trat"</font>, <font color="red">"Setor do Colaborador Solicitante"</font>}, {<font color="red">"frm_colcap_nome_trat"</font>, <font color="red">"Técnico que Capturou"</font>}, {<font color="red">"frm_tipoco_nome_trat"</font>, <font color="red">"Tipo de Solicitação"</font>}, {<font color="red">"frm_regneg_nome_trat"</font>, <font color="red">"Tipo de serviço"</font>}, {<font color="red">"frm_avalia_nome_trat"</font>, <font color="red">"Avaliação"</font>}, {<font color="red">"frm_avalia_consat_trat"</font>, <font color="red">"Possui Avaliação"</font>}, {<font color="red">"frm_colcon_nome_trat"</font>, <font color="red">"Técnico que Concluiu a Solicitação"</font>}, {<font color="red">"frm_limite_trat"</font>, <font color="red">"Data Limite"</font>}, {<font color="red">"frm_tem_limite"</font>, <font color="red">"Possui Data Limite"</font>}}),<br></br>    #<font color="red">"Colocar Cada Palavra Em Maiúscula"</font> = <font color="purple">Table.TransformColumns</font>(#<font color="red">"Colunas Renomeadas"</font>,{{<font color="red">"Colaborador Solicitante"</font>, <font color="purple">Text.Proper</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_colpre_nome"</font>, <font color="purple">Text.Proper</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Técnico que Capturou"</font>, <font color="purple">Text.Proper</font>, <font color="blue">type</font> <font color="blue">text</font>}}),<br></br>    #<font color="red">"Colunas Removidas1"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Colocar Cada Palavra Em Maiúscula"</font>,{<font color="red">"Data de captura"</font>, <font color="red">"Data de conclusão"</font>, <font color="red">"Data Limite"</font>}),<br></br>    #<font color="red">"Tipo Alterado1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Colunas Removidas1"</font>,{{<font color="red">"Data de início"</font>, <font color="blue">type</font> <font color="blue">date</font>}}),<br></br>    #<font color="red">"Coluna constante"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tipo Alterado1"</font>, <font color="red">"Tipo"</font>, each <font color="red">"Abertura"</font>),<br></br>    #<font color="red">"Colunas Renomeadas1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Coluna constante"</font>,{{<font color="red">"Data de início"</font>, <font color="red">"Data"</font>}}),<br></br>    #<font color="red">"Consulta Acrescentada"</font> = <font color="purple">Table.Combine</font>({#<font color="red">"Colunas Renomeadas1"</font>, #<font color="red">"Somente data de conclusão"</font>}),<br></br>    #<font color="red">"Valor Substituído"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Consulta Acrescentada"</font>,<font color="red">"PA"</font>,<font color="red">"Pendente com o Técnico"</font>,<font color="purple">Replacer.ReplaceText</font>,{<font color="red">"Situação"</font>}),<br></br>    #<font color="red">"Valor Substituído1"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Valor Substituído"</font>,<font color="red">"PU"</font>,<font color="red">"Pendente com o usuário"</font>,<font color="purple">Replacer.ReplaceText</font>,{<font color="red">"Situação"</font>}),<br></br>    #<font color="red">"Valor Substituído2"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Valor Substituído1"</font>,<font color="red">"PM"</font>,<font color="red">"Orçamento Pendente"</font>,<font color="purple">Replacer.ReplaceText</font>,{<font color="red">"Situação"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Valor Substituído2"</font><br></br><br></br><br></br>----------------------<br></br>LocalDateTable_3789bd27-4064-48f3-90fb-1c93fe7c4faf<br></br><br></br>Calendar(Date(Year(MIN('par_solici'[Data de início])), 1, 1), Date(Year(MAX('par_solici'[Data de início])), 12, 31))<br></br><br></br><br></br>----------------------<br></br>LocalDateTable_938b9a37-9514-4eb9-b19d-d32f7db3da09<br></br><br></br>Calendar(Date(Year(MIN('par_solici'[Data de conclusão])), 1, 1), Date(Year(MAX('par_solici'[Data de conclusão])), 12, 31))<br></br><br></br><br></br>----------------------<br></br>Somente data de conclusão<br></br><br></br><font color="blue">let</font><br></br>    Fonte = <font color="purple">Json.Document</font>(<font color="purple">File.Contents</font>(<font color="red">"C:\Users\natan\OneDrive\Documentos\GitHub\Projetos\Unimed Vale dos Sinos\par_solici\par_solici.json"</font>)),<br></br>    #<font color="red">"Convertido para Tabela"</font> = <font color="purple">Table.FromList</font>(Fonte, <font color="purple">Splitter.SplitByNothing</font>(), <font color="blue">null</font>, <font color="blue">null</font>, <font color="purple">ExtraValues.Error</font>),<br></br>    #<font color="red">"Column1 Expandido"</font> = <font color="purple">Table.ExpandRecordColumn</font>(#<font color="red">"Convertido para Tabela"</font>, <font color="red">"Column1"</font>, {<font color="red">"frm_id"</font>, <font color="red">"frm_datinc"</font>, <font color="red">"frm_colsol"</font>, <font color="red">"frm_setsol"</font>, <font color="red">"frm_colpre"</font>, <font color="red">"frm_ramal"</font>, <font color="red">"frm_motivo"</font>, <font color="red">"frm_descri"</font>, <font color="red">"frm_colcap"</font>, <font color="red">"frm_datcap"</font>, <font color="red">"frm_dtconc"</font>, <font color="red">"frm_colcon"</font>, <font color="red">"frm_priori"</font>, <font color="red">"frm_aplica"</font>, <font color="red">"frm_observ"</font>, <font color="red">"frm_dtconf"</font>, <font color="red">"frm_confpo"</font>, <font color="red">"frm_situac"</font>, <font color="red">"frm_chave"</font>, <font color="red">"frm_status"</font>, <font color="red">"frm_horas"</font>, <font color="red">"frm_minut"</font>, <font color="red">"frm_avalia"</font>, <font color="red">"frm_obsava"</font>, <font color="red">"frm_tipoco"</font>, <font color="red">"frm_regneg"</font>, <font color="red">"frm_denvig"</font>, <font color="red">"frm_reavig"</font>, <font color="red">"d_e_l_e_t_"</font>, <font color="red">"frm_lembre"</font>, <font color="red">"frm_parece"</font>, <font color="red">"frm_acoes"</font>, <font color="red">"frm_limite"</font>, <font color="red">"frm_solpri"</font>, <font color="red">"frm_qtderg"</font>}, {<font color="red">"frm_id"</font>, <font color="red">"frm_datinc"</font>, <font color="red">"frm_colsol"</font>, <font color="red">"frm_setsol"</font>, <font color="red">"frm_colpre"</font>, <font color="red">"frm_ramal"</font>, <font color="red">"frm_motivo"</font>, <font color="red">"frm_descri"</font>, <font color="red">"frm_colcap"</font>, <font color="red">"frm_datcap"</font>, <font color="red">"frm_dtconc"</font>, <font color="red">"frm_colcon"</font>, <font color="red">"frm_priori"</font>, <font color="red">"frm_aplica"</font>, <font color="red">"frm_observ"</font>, <font color="red">"frm_dtconf"</font>, <font color="red">"frm_confpo"</font>, <font color="red">"frm_situac"</font>, <font color="red">"frm_chave"</font>, <font color="red">"frm_status"</font>, <font color="red">"frm_horas"</font>, <font color="red">"frm_minut"</font>, <font color="red">"frm_avalia"</font>, <font color="red">"frm_obsava"</font>, <font color="red">"frm_tipoco"</font>, <font color="red">"frm_regneg"</font>, <font color="red">"frm_denvig"</font>, <font color="red">"frm_reavig"</font>, <font color="red">"d_e_l_e_t_"</font>, <font color="red">"frm_lembre"</font>, <font color="red">"frm_parece"</font>, <font color="red">"frm_acoes"</font>, <font color="red">"frm_limite"</font>, <font color="red">"frm_solpri"</font>, <font color="red">"frm_qtderg"</font>}),<br></br>    #<font color="red">"Consultas Mescladas"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"Column1 Expandido"</font>, {<font color="red">"frm_colsol"</font>}, col_colabo, {<font color="red">"col_id"</font>}, <font color="red">"col_colabo"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"col_colabo Expandido"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas"</font>, <font color="red">"col_colabo"</font>, {<font color="red">"col_nome"</font>, <font color="red">"col_setor"</font>}, {<font color="red">"frm_colsol_nome"</font>, <font color="red">"frm_colsol_setor"</font>}),<br></br>    #<font color="red">"Consultas Mescladas1"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"col_colabo Expandido"</font>, {<font color="red">"frm_setsol"</font>}, col_setor, {<font color="red">"set_id"</font>}, <font color="red">"col_setor"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"col_setor Expandido"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas1"</font>, <font color="red">"col_setor"</font>, {<font color="red">"set_descri"</font>}, {<font color="red">"frm_setsol_nome"</font>}),<br></br>    #<font color="red">"Coluna Condicional Adicionada"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"col_setor Expandido"</font>, "colsol setor = setsol", each if [frm_colsol_setor] = [frm_setsol] then <font color="red">"OK"</font> else <font color="red">"Não"</font>),<br></br>    #<font color="red">"Consultas Mescladas2"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"Coluna Condicional Adicionada"</font>, {<font color="red">"frm_colsol_setor"</font>}, col_setor, {<font color="red">"set_id"</font>}, <font color="red">"col_setor"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"col_setor Expandido1"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas2"</font>, <font color="red">"col_setor"</font>, {<font color="red">"set_descri"</font>}, {<font color="red">"frm_colsol_set_nome"</font>}),<br></br>    #<font color="red">"Consultas Mescladas3"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"col_setor Expandido1"</font>, {<font color="red">"frm_colpre"</font>}, col_colabo, {<font color="red">"col_id"</font>}, <font color="red">"col_colabo"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"col_colabo Expandido1"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas3"</font>, <font color="red">"col_colabo"</font>, {<font color="red">"col_nome"</font>}, {<font color="red">"frm_colpre_nome"</font>}),<br></br>    #<font color="red">"Consultas Mescladas4"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"col_colabo Expandido1"</font>, {<font color="red">"frm_colcap"</font>}, col_colabo, {<font color="red">"col_id"</font>}, <font color="red">"col_colabo"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"col_colabo Expandido2"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas4"</font>, <font color="red">"col_colabo"</font>, {<font color="red">"col_nome"</font>}, {<font color="red">"frm_colcap_nome"</font>}),<br></br>    #<font color="red">"Consultas Mescladas5"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"col_colabo Expandido2"</font>, {<font color="red">"frm_tipoco"</font>}, par_classi, {<font color="red">"cla_codigo"</font>}, <font color="red">"par_classi"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"par_classi Expandido"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas5"</font>, <font color="red">"par_classi"</font>, {<font color="red">"cla_descri"</font>, <font color="red">"Tipo Macro"</font>}, {<font color="red">"frm_tipoco_nome"</font>, <font color="red">"tipo_macro"</font>}),<br></br>    #<font color="red">"Consultas Mescladas6"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"par_classi Expandido"</font>, {<font color="red">"frm_regneg"</font>}, par_regneg, {<font color="red">"reg_codigo"</font>}, <font color="red">"par_regneg"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"par_regneg Expandido"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas6"</font>, <font color="red">"par_regneg"</font>, {<font color="red">"reg_descri"</font>}, {<font color="red">"frm_regneg_nome"</font>}),<br></br>    #<font color="red">"Consultas Mescladas7"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"par_regneg Expandido"</font>, {<font color="red">"frm_avalia"</font>}, par_avalia, {<font color="red">"ava_valor"</font>}, <font color="red">"par_avalia"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"par_avalia Expandido"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas7"</font>, <font color="red">"par_avalia"</font>, {<font color="red">"ava_descri"</font>, <font color="red">"ava_consat"</font>}, {<font color="red">"frm_avalia_nome"</font>, <font color="red">"frm_avalia_consat"</font>}),<br></br>    #<font color="red">"Consultas Mescladas8"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"par_avalia Expandido"</font>, {<font color="red">"frm_colcon"</font>}, col_colabo, {<font color="red">"col_id"</font>}, <font color="red">"col_colabo"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"col_colabo Expandido3"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas8"</font>, <font color="red">"col_colabo"</font>, {<font color="red">"col_nome"</font>}, {<font color="red">"frm_colcon_nome"</font>}),<br></br>    #<font color="red">"Tratamento de valores nulos"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"col_colabo Expandido3"</font>, <font color="red">"frm_setsol_nome_trat"</font>, each if [frm_setsol_nome] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_setsol_nome]),<br></br>    #<font color="red">"Tratamento de valores nulos1"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos"</font>, <font color="red">"frm_colsol_set_nome_trat"</font>, each if [frm_colsol_set_nome] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_colsol_set_nome]),<br></br>    #<font color="red">"Tratamento de valores nulos2"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos1"</font>, <font color="red">"frm_colcap_nome_trat"</font>, each if [frm_colcap_nome] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_colcap_nome]),<br></br>    #<font color="red">"Tratamento de valores nulos3"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos2"</font>, <font color="red">"frm_tipoco_nome_trat"</font>, each if [frm_tipoco_nome] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_tipoco_nome]),<br></br>    #<font color="red">"Tratamento de valores nulos4"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos3"</font>, <font color="red">"Tipo Macro"</font>, each if [tipo_macro] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [tipo_macro]),<br></br>    #<font color="red">"Tratamento de valores nulos5"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos4"</font>, <font color="red">"frm_regneg_nome_trat"</font>, each if [frm_regneg_nome] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_regneg_nome]),<br></br>    #<font color="red">"Tratamento de valores nulos6"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos5"</font>, <font color="red">"frm_avalia_nome_trat"</font>, each if [frm_avalia_nome] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_avalia_nome]),<br></br>    #<font color="red">"Tratamento de valores nulos7"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos6"</font>, <font color="red">"frm_avalia_consat_trat"</font>, each if [frm_avalia_consat] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_avalia_consat]),<br></br>    #<font color="red">"Tratamento de valores nulos8"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos7"</font>, <font color="red">"frm_colcon_nome_trat"</font>, each if [frm_colcon_nome] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_colcon_nome]),<br></br>    #<font color="red">"Tratamento de valores nulos9"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos8"</font>, <font color="red">"frm_limite_trat"</font>, each if [frm_limite] = <font color="red">""</font> then [frm_dtconc] else [frm_limite]),<br></br>    #<font color="red">"frm_tem_limite"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos9"</font>, <font color="red">"frm_tem_limite"</font>, each if [frm_limite] = <font color="red">""</font> then <font color="red">"N"</font> else <font color="red">"S"</font>),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(frm_tem_limite,{{<font color="red">"frm_id"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_datinc"</font>, <font color="blue">type</font> datetime}, {<font color="red">"frm_datcap"</font>, <font color="blue">type</font> datetime}, {<font color="red">"frm_dtconc"</font>, <font color="blue">type</font> datetime}, {<font color="red">"frm_priori"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_aplica"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_situac"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_status"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_horas"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"frm_minut"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"frm_limite"</font>, <font color="blue">type</font> <font color="blue">date</font>}, {<font color="red">"frm_solpri"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_qtderg"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"frm_colsol_nome"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {"colsol setor = setsol", <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_colpre_nome"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_tem_limite"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_limite_trat"</font>, <font color="blue">type</font> datetime}, {<font color="red">"frm_colcon_nome_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_avalia_consat_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_avalia_nome_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_regneg_nome_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_tipoco_nome_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_colcap_nome_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_colsol_set_nome_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_setsol_nome_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}}),<br></br>    #<font color="red">"Data Extraída"</font> = <font color="purple">Table.TransformColumns</font>(#<font color="red">"Tipo Alterado"</font>,{{<font color="red">"frm_limite_trat"</font>, <font color="purple">DateTime.Date</font>, <font color="blue">type</font> <font color="blue">date</font>}}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Data Extraída"</font>,{<font color="red">"frm_colsol"</font>, <font color="red">"frm_colpre"</font>, <font color="red">"frm_ramal"</font>, <font color="red">"frm_motivo"</font>, <font color="red">"frm_descri"</font>, <font color="red">"frm_colcap"</font>, <font color="red">"frm_observ"</font>, <font color="red">"frm_dtconf"</font>, <font color="red">"frm_confpo"</font>, <font color="red">"frm_chave"</font>, <font color="red">"frm_avalia"</font>, <font color="red">"frm_obsava"</font>, <font color="red">"frm_regneg"</font>, <font color="red">"frm_denvig"</font>, <font color="red">"frm_reavig"</font>, <font color="red">"d_e_l_e_t_"</font>, <font color="red">"frm_lembre"</font>, <font color="red">"frm_parece"</font>, <font color="red">"frm_acoes"</font>, <font color="red">"frm_setsol_nome"</font>, <font color="red">"frm_colsol_set_nome"</font>, <font color="red">"frm_colcap_nome"</font>, <font color="red">"frm_tipoco_nome"</font>, <font color="red">"frm_regneg_nome"</font>, <font color="red">"frm_avalia_nome"</font>, <font color="red">"frm_avalia_consat"</font>, <font color="red">"frm_colcon_nome"</font>, <font color="red">"frm_colsol_setor"</font>, <font color="red">"frm_limite"</font>,<font color="red">"tipo_macro"</font>}),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Colunas Removidas"</font>,{{<font color="red">"frm_id"</font>, <font color="red">"Id da Solicitação"</font>}, {<font color="red">"frm_datinc"</font>, <font color="red">"Data de início"</font>}, {<font color="red">"frm_datcap"</font>, <font color="red">"Data de captura"</font>}, {<font color="red">"frm_dtconc"</font>, <font color="red">"Data de conclusão"</font>}, {<font color="red">"frm_priori"</font>, <font color="red">"Prioridade"</font>}, {<font color="red">"frm_situac"</font>, <font color="red">"Situação"</font>}, {<font color="red">"frm_status"</font>, <font color="red">"Status"</font>}, {<font color="red">"frm_horas"</font>, "Duração - Horas"}, {<font color="red">"frm_minut"</font>, "Duração - Minutos"}, {<font color="red">"frm_colsol_nome"</font>, <font color="red">"Colaborador Solicitante"</font>}, {<font color="red">"frm_setsol_nome_trat"</font>, <font color="red">"Setor Solicitante"</font>}, {<font color="red">"frm_colsol_set_nome_trat"</font>, <font color="red">"Setor do Colaborador Solicitante"</font>}, {<font color="red">"frm_colcap_nome_trat"</font>, <font color="red">"Técnico que Capturou"</font>}, {<font color="red">"frm_tipoco_nome_trat"</font>, <font color="red">"Tipo de Solicitação"</font>}, {<font color="red">"frm_regneg_nome_trat"</font>, <font color="red">"Tipo de serviço"</font>}, {<font color="red">"frm_avalia_nome_trat"</font>, <font color="red">"Avaliação"</font>}, {<font color="red">"frm_avalia_consat_trat"</font>, <font color="red">"Possui Avaliação"</font>}, {<font color="red">"frm_colcon_nome_trat"</font>, <font color="red">"Técnico que Concluiu a Solicitação"</font>}, {<font color="red">"frm_limite_trat"</font>, <font color="red">"Data Limite"</font>}, {<font color="red">"frm_tem_limite"</font>, <font color="red">"Possui Data Limite"</font>}}),<br></br>    #<font color="red">"Colocar Cada Palavra Em Maiúscula"</font> = <font color="purple">Table.TransformColumns</font>(#<font color="red">"Colunas Renomeadas"</font>,{{<font color="red">"Colaborador Solicitante"</font>, <font color="purple">Text.Proper</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_colpre_nome"</font>, <font color="purple">Text.Proper</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Técnico que Capturou"</font>, <font color="purple">Text.Proper</font>, <font color="blue">type</font> <font color="blue">text</font>}}),<br></br>    #<font color="red">"Colunas Removidas1"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Colocar Cada Palavra Em Maiúscula"</font>,{<font color="red">"Data de captura"</font>, <font color="red">"Data de início"</font>, <font color="red">"Data Limite"</font>}),<br></br>    #<font color="red">"Tipo Alterado1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Colunas Removidas1"</font>,{{<font color="red">"Data de conclusão"</font>, <font color="blue">type</font> <font color="blue">date</font>}}),<br></br>    #<font color="red">"Coluna constante"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tipo Alterado1"</font>, <font color="red">"Tipo"</font>, each <font color="red">"Conclusão"</font>),<br></br>    #<font color="red">"Colunas Renomeadas1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Coluna constante"</font>,{{<font color="red">"Data de conclusão"</font>, <font color="red">"Data"</font>}})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Renomeadas1"</font><br></br><br></br><br></br>----------------------<br></br>LocalDateTable_70dd12f9-00dc-44fd-9640-5d85d1f3b936<br></br><br></br>Calendar(Date(Year(MIN('Somente data de conclusão'[Data])), 1, 1), Date(Year(MAX('Somente data de conclusão'[Data])), 12, 31))<br></br><br></br><br></br>----------------------<br></br>LocalDateTable_b59f12be-8fe1-4d96-9fa8-2f55882cb512<br></br><br></br>Calendar(Date(Year(MIN('Tabela Calendário'[Date])), 1, 1), Date(Year(MAX('Tabela Calendário'[Date])), 12, 31))<br></br><br></br><br></br>----------------------<br></br>LocalDateTable_1d71b99e-bddf-4aad-949f-4d5a69f0a82e<br></br><br></br>Calendar(Date(Year(MIN('par_solici'[Hora de início])), 1, 1), Date(Year(MAX('par_solici'[Hora de início])), 12, 31))<br></br><br></br><br></br>----------------------<br></br>LocalDateTable_95981c5f-7f4b-4a9e-8713-5e8e9760e397<br></br><br></br>Calendar(Date(Year(MIN('par_solici'[Hora de conclusão])), 1, 1), Date(Year(MAX('par_solici'[Hora de conclusão])), 12, 31))<br></br><br></br><br></br>----------------------<br></br></font></div><br></br><hr></hr><br></br><h3><div>Partitions:</div></h3><br></br><table border='1px' cellpadding='1' cellspacing='1'><tr ><td >Name</td><td >QueryDefinition</td></tr><tr ><td >col_colabo</td><td ><font color="blue">let</font><br></br>    Fonte = <font color="purple">Json.Document</font>(<font color="purple">File.Contents</font>(<font color="red">"C:\Users\natan\OneDrive\Documentos\GitHub\Projetos\Unimed Vale dos Sinos\par_solici\col_colabo.json"</font>)),<br></br>    #<font color="red">"Convertido para Tabela"</font> = <font color="purple">Table.FromList</font>(Fonte, <font color="purple">Splitter.SplitByNothing</font>(), <font color="blue">null</font>, <font color="blue">null</font>, <font color="purple">ExtraValues.Error</font>),<br></br>    #<font color="red">"Column1 Expandido"</font> = <font color="purple">Table.ExpandRecordColumn</font>(#<font color="red">"Convertido para Tabela"</font>, <font color="red">"Column1"</font>, {<font color="red">"col_id"</font>, <font color="red">"col_matric"</font>, <font color="red">"col_nome"</font>, <font color="red">"col_email"</font>, <font color="red">"col_ramal"</font>, <font color="red">"col_setor"</font>, <font color="red">"col_login"</font>, <font color="red">"col_dtnasc"</font>, <font color="red">"col_passwd"</font>, <font color="red">"col_status"</font>, <font color="red">"col_ccusto"</font>, <font color="red">"col_verba"</font>, <font color="red">"col_tpverb"</font>, <font color="red">"col_foto"</font>, <font color="red">"col_real"</font>, <font color="red">"col_unidad"</font>, <font color="red">"col_filial"</font>, <font color="red">"col_redire"</font>, <font color="red">"col_audita"</font>, <font color="red">"col_sistem"</font>, <font color="red">"col_recada"</font>, <font color="red">"col_newpsw"</font>, <font color="red">"col_rg"</font>, <font color="red">"col_cpf"</font>}, {<font color="red">"col_id"</font>, <font color="red">"col_matric"</font>, <font color="red">"col_nome"</font>, <font color="red">"col_email"</font>, <font color="red">"col_ramal"</font>, <font color="red">"col_setor"</font>, <font color="red">"col_login"</font>, <font color="red">"col_dtnasc"</font>, <font color="red">"col_passwd"</font>, <font color="red">"col_status"</font>, <font color="red">"col_ccusto"</font>, <font color="red">"col_verba"</font>, <font color="red">"col_tpverb"</font>, <font color="red">"col_foto"</font>, <font color="red">"col_real"</font>, <font color="red">"col_unidad"</font>, <font color="red">"col_filial"</font>, <font color="red">"col_redire"</font>, <font color="red">"col_audita"</font>, <font color="red">"col_sistem"</font>, <font color="red">"col_recada"</font>, <font color="red">"col_newpsw"</font>, <font color="red">"col_rg"</font>, <font color="red">"col_cpf"</font>}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Column1 Expandido"</font>,{<font color="red">"col_email"</font>, <font color="red">"col_ramal"</font>, <font color="red">"col_login"</font>, <font color="red">"col_dtnasc"</font>, <font color="red">"col_passwd"</font>, <font color="red">"col_ccusto"</font>, <font color="red">"col_verba"</font>, <font color="red">"col_tpverb"</font>, <font color="red">"col_foto"</font>, <font color="red">"col_real"</font>, <font color="red">"col_unidad"</font>, <font color="red">"col_filial"</font>, <font color="red">"col_redire"</font>, <font color="red">"col_audita"</font>, <font color="red">"col_sistem"</font>, <font color="red">"col_recada"</font>, <font color="red">"col_newpsw"</font>, <font color="red">"col_rg"</font>, <font color="red">"col_cpf"</font>}),<br></br>    #<font color="red">"Texto Aparado"</font> = <font color="purple">Table.TransformColumns</font>(#<font color="red">"Colunas Removidas"</font>,{{<font color="red">"col_nome"</font>, <font color="purple">Text.Trim</font>, <font color="blue">type</font> <font color="blue">text</font>}}),<br></br>    #<font color="red">"Coluna Mesclada Inserida"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Texto Aparado"</font>, <font color="red">"Mesclado"</font>, each <font color="purple">Text.Combine</font>({<font color="red">"Colaborador "</font>, <font color="purple">Text.From</font>([col_id], "pt-BR")}), <font color="blue">type</font> <font color="blue">text</font>),<br></br>    #<font color="red">"Colunas Removidas1"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Coluna Mesclada Inserida"</font>,{<font color="red">"col_nome"</font>}),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Colunas Removidas1"</font>,{{<font color="red">"Mesclado"</font>, <font color="red">"col_nome"</font>}})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Renomeadas"</font></td></tr><tr ><td >DateTableTemplate_518917fd-d445-4dc8-b86c-6b0e9bb93adc</td><td >Calendar(Date(2015,1,1), Date(2015,1,1))</td></tr><tr ><td >col_setor</td><td ><font color="blue">let</font><br></br>    Fonte = <font color="purple">Json.Document</font>(<font color="purple">File.Contents</font>(<font color="red">"C:\Users\natan\OneDrive\Documentos\GitHub\Projetos\Unimed Vale dos Sinos\par_solici\col_setor.json"</font>)),<br></br>    #<font color="red">"Convertido para Tabela"</font> = <font color="purple">Table.FromList</font>(Fonte, <font color="purple">Splitter.SplitByNothing</font>(), <font color="blue">null</font>, <font color="blue">null</font>, <font color="purple">ExtraValues.Error</font>),<br></br>    #<font color="red">"Column1 Expandido"</font> = <font color="purple">Table.ExpandRecordColumn</font>(#<font color="red">"Convertido para Tabela"</font>, <font color="red">"Column1"</font>, {<font color="red">"set_id"</font>, <font color="red">"set_descri"</font>, <font color="red">"set_mural"</font>, <font color="red">"set_superv"</font>, <font color="red">"set_status"</font>, <font color="red">"set_pesqui"</font>, <font color="red">"set_real"</font>, <font color="red">"set_centro"</font>}, {<font color="red">"set_id"</font>, <font color="red">"set_descri"</font>, <font color="red">"set_mural"</font>, <font color="red">"set_superv"</font>, <font color="red">"set_status"</font>, <font color="red">"set_pesqui"</font>, <font color="red">"set_real"</font>, <font color="red">"set_centro"</font>}),<br></br>    #<font color="red">"Coluna Mesclada Inserida"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Column1 Expandido"</font>, <font color="red">"Mesclado"</font>, each <font color="purple">Text.Combine</font>({<font color="red">"Setor "</font>, <font color="purple">Text.From</font>([set_id], "pt-BR")}), <font color="blue">type</font> <font color="blue">text</font>),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Coluna Mesclada Inserida"</font>,{<font color="red">"set_descri"</font>}),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Colunas Removidas"</font>,{{<font color="red">"Mesclado"</font>, <font color="red">"set_descri"</font>}})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Renomeadas"</font></td></tr><tr ><td >par_avalia</td><td ><font color="blue">let</font><br></br>    Fonte = <font color="purple">Json.Document</font>(<font color="purple">File.Contents</font>(<font color="red">"C:\Users\natan\OneDrive\Documentos\GitHub\Projetos\Unimed Vale dos Sinos\par_solici\par_avalia.json"</font>)),<br></br>    #<font color="red">"Convertido para Tabela"</font> = <font color="purple">Table.FromList</font>(Fonte, <font color="purple">Splitter.SplitByNothing</font>(), <font color="blue">null</font>, <font color="blue">null</font>, <font color="purple">ExtraValues.Error</font>),<br></br>    #<font color="red">"Column1 Expandido"</font> = <font color="purple">Table.ExpandRecordColumn</font>(#<font color="red">"Convertido para Tabela"</font>, <font color="red">"Column1"</font>, {<font color="red">"r_e_c_n_o_"</font>, <font color="red">"ava_valor"</font>, <font color="red">"ava_descri"</font>, <font color="red">"ava_consat"</font>, <font color="red">"d_e_l_e_t_"</font>}, {<font color="red">"r_e_c_n_o_"</font>, <font color="red">"ava_valor"</font>, <font color="red">"ava_descri"</font>, <font color="red">"ava_consat"</font>, <font color="red">"d_e_l_e_t_"</font>}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Column1 Expandido"</font>,{<font color="red">"d_e_l_e_t_"</font>}),<br></br>    #<font color="red">"Colocar Cada Palavra Em Maiúscula"</font> = <font color="purple">Table.TransformColumns</font>(#<font color="red">"Colunas Removidas"</font>,{{<font color="red">"ava_descri"</font>, <font color="purple">Text.Proper</font>, <font color="blue">type</font> <font color="blue">text</font>}})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colocar Cada Palavra Em Maiúscula"</font></td></tr><tr ><td >par_classi</td><td ><font color="blue">let</font><br></br>    Fonte = <font color="purple">Json.Document</font>(<font color="purple">File.Contents</font>(<font color="red">"C:\Users\natan\OneDrive\Documentos\GitHub\Projetos\Unimed Vale dos Sinos\par_solici\par_classi.json"</font>)),<br></br>    #<font color="red">"Convertido para Tabela"</font> = <font color="purple">Table.FromList</font>(Fonte, <font color="purple">Splitter.SplitByNothing</font>(), <font color="blue">null</font>, <font color="blue">null</font>, <font color="purple">ExtraValues.Error</font>),<br></br>    #<font color="red">"Column1 Expandido"</font> = <font color="purple">Table.ExpandRecordColumn</font>(#<font color="red">"Convertido para Tabela"</font>, <font color="red">"Column1"</font>, {<font color="red">"cla_id"</font>, <font color="red">"cla_codigo"</font>, <font color="red">"cla_descri"</font>, <font color="red">"cla_situac"</font>, <font color="red">"d_e_l_e_t_"</font>}, {<font color="red">"cla_id"</font>, <font color="red">"cla_codigo"</font>, <font color="red">"cla_descri"</font>, <font color="red">"cla_situac"</font>, <font color="red">"d_e_l_e_t_"</font>}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Column1 Expandido"</font>,{<font color="red">"cla_situac"</font>, <font color="red">"d_e_l_e_t_"</font>}),<br></br>    #<font color="red">"Valor Substituído"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Colunas Removidas"</font>,<font color="red">"Parametro"</font>,<font color="red">"Parâmetro"</font>,<font color="purple">Replacer.ReplaceText</font>,{<font color="red">"cla_descri"</font>}),<br></br>    #<font color="red">"Valor Substituído1"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Valor Substituído"</font>,<font color="red">"Inclusao"</font>,<font color="red">"Inclusão"</font>,<font color="purple">Replacer.ReplaceText</font>,{<font color="red">"cla_descri"</font>}),<br></br>    #<font color="red">"Coluna Condicional Adicionada"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Valor Substituído1"</font>, <font color="red">"Tipo Macro"</font>, each <br></br>if [cla_codigo] = <font color="red">"AU"</font> then <font color="red">"Geral"</font><br></br>else if <font color="purple">Text.Contains</font>([cla_descri], <font color="red">"Parâmetro"</font>) then <font color="red">"Infraestrutura"</font> <font color="green">//IP,CP,AP,AU,AN</font><br></br>else if <font color="purple">Text.Contains</font>([cla_descri], <font color="red">"Regulamentação"</font>) then <font color="red">"Sistemas"</font> <font color="green">//RG,AR</font><br></br>else if <font color="purple">Text.Contains</font>([cla_descri], <font color="red">"Consultoria"</font>) then <font color="red">"Projetos"</font> <br></br>else if [cla_descri] = <font color="red">"Regularização de Contratos"</font> then <font color="red">"Sistema"</font> <font color="green">//RC</font><br></br>else <font color="red">"Geral"</font>)<br></br><font color="blue">in</font><br></br>    #<font color="red">"Coluna Condicional Adicionada"</font></td></tr><tr ><td >par_regneg</td><td ><font color="blue">let</font><br></br>    Fonte = <font color="purple">Json.Document</font>(<font color="purple">File.Contents</font>(<font color="red">"C:\Users\natan\OneDrive\Documentos\GitHub\Projetos\Unimed Vale dos Sinos\par_solici\par_regneg.json"</font>)),<br></br>    #<font color="red">"Convertido para Tabela"</font> = <font color="purple">Table.FromList</font>(Fonte, <font color="purple">Splitter.SplitByNothing</font>(), <font color="blue">null</font>, <font color="blue">null</font>, <font color="purple">ExtraValues.Error</font>),<br></br>    #<font color="red">"Column1 Expandido"</font> = <font color="purple">Table.ExpandRecordColumn</font>(#<font color="red">"Convertido para Tabela"</font>, <font color="red">"Column1"</font>, {<font color="red">"reg_id"</font>, <font color="red">"reg_codigo"</font>, <font color="red">"reg_descri"</font>, <font color="red">"reg_situac"</font>, <font color="red">"d_e_l_e_t_"</font>}, {<font color="red">"reg_id"</font>, <font color="red">"reg_codigo"</font>, <font color="red">"reg_descri"</font>, <font color="red">"reg_situac"</font>, <font color="red">"d_e_l_e_t_"</font>}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Column1 Expandido"</font>,{<font color="red">"d_e_l_e_t_"</font>}),<br></br>    #<font color="red">"Índice Adicionado"</font> = <font color="purple">Table.AddIndexColumn</font>(#<font color="red">"Colunas Removidas"</font>, <font color="red">"Índice"</font>, 0, 1, <font color="purple">Int64.Type</font>),<br></br>    #<font color="red">"Coluna Mesclada Inserida"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Índice Adicionado"</font>, <font color="red">"Mesclado"</font>, each <font color="purple">Text.Combine</font>({<font color="red">"Serviço "</font>, <font color="purple">Text.From</font>([Índice]+1, "pt-BR")}), <font color="blue">type</font> <font color="blue">text</font>),<br></br>    #<font color="red">"Colunas Removidas1"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Coluna Mesclada Inserida"</font>,{<font color="red">"reg_descri"</font>}),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Colunas Removidas1"</font>,{{<font color="red">"Mesclado"</font>, <font color="red">"reg_descri"</font>}})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Renomeadas"</font></td></tr><tr ><td >par_solici</td><td ><font color="blue">let</font><br></br>    Fonte = <font color="purple">Json.Document</font>(<font color="purple">File.Contents</font>(<font color="red">"C:\Users\natan\OneDrive\Documentos\GitHub\Projetos\Unimed Vale dos Sinos\par_solici\par_solici.json"</font>)),<br></br>    #<font color="red">"Convertido para Tabela"</font> = <font color="purple">Table.FromList</font>(Fonte, <font color="purple">Splitter.SplitByNothing</font>(), <font color="blue">null</font>, <font color="blue">null</font>, <font color="purple">ExtraValues.Error</font>),<br></br>    #<font color="red">"Column1 Expandido"</font> = <font color="purple">Table.ExpandRecordColumn</font>(#<font color="red">"Convertido para Tabela"</font>, <font color="red">"Column1"</font>, {<font color="red">"frm_id"</font>, <font color="red">"frm_datinc"</font>, <font color="red">"frm_colsol"</font>, <font color="red">"frm_setsol"</font>, <font color="red">"frm_colpre"</font>, <font color="red">"frm_ramal"</font>, <font color="red">"frm_motivo"</font>, <font color="red">"frm_descri"</font>, <font color="red">"frm_colcap"</font>, <font color="red">"frm_datcap"</font>, <font color="red">"frm_dtconc"</font>, <font color="red">"frm_colcon"</font>, <font color="red">"frm_priori"</font>, <font color="red">"frm_aplica"</font>, <font color="red">"frm_observ"</font>, <font color="red">"frm_dtconf"</font>, <font color="red">"frm_confpo"</font>, <font color="red">"frm_situac"</font>, <font color="red">"frm_chave"</font>, <font color="red">"frm_status"</font>, <font color="red">"frm_horas"</font>, <font color="red">"frm_minut"</font>, <font color="red">"frm_avalia"</font>, <font color="red">"frm_obsava"</font>, <font color="red">"frm_tipoco"</font>, <font color="red">"frm_regneg"</font>, <font color="red">"frm_denvig"</font>, <font color="red">"frm_reavig"</font>, <font color="red">"d_e_l_e_t_"</font>, <font color="red">"frm_lembre"</font>, <font color="red">"frm_parece"</font>, <font color="red">"frm_acoes"</font>, <font color="red">"frm_limite"</font>, <font color="red">"frm_solpri"</font>, <font color="red">"frm_qtderg"</font>}, {<font color="red">"frm_id"</font>, <font color="red">"frm_datinc"</font>, <font color="red">"frm_colsol"</font>, <font color="red">"frm_setsol"</font>, <font color="red">"frm_colpre"</font>, <font color="red">"frm_ramal"</font>, <font color="red">"frm_motivo"</font>, <font color="red">"frm_descri"</font>, <font color="red">"frm_colcap"</font>, <font color="red">"frm_datcap"</font>, <font color="red">"frm_dtconc"</font>, <font color="red">"frm_colcon"</font>, <font color="red">"frm_priori"</font>, <font color="red">"frm_aplica"</font>, <font color="red">"frm_observ"</font>, <font color="red">"frm_dtconf"</font>, <font color="red">"frm_confpo"</font>, <font color="red">"frm_situac"</font>, <font color="red">"frm_chave"</font>, <font color="red">"frm_status"</font>, <font color="red">"frm_horas"</font>, <font color="red">"frm_minut"</font>, <font color="red">"frm_avalia"</font>, <font color="red">"frm_obsava"</font>, <font color="red">"frm_tipoco"</font>, <font color="red">"frm_regneg"</font>, <font color="red">"frm_denvig"</font>, <font color="red">"frm_reavig"</font>, <font color="red">"d_e_l_e_t_"</font>, <font color="red">"frm_lembre"</font>, <font color="red">"frm_parece"</font>, <font color="red">"frm_acoes"</font>, <font color="red">"frm_limite"</font>, <font color="red">"frm_solpri"</font>, <font color="red">"frm_qtderg"</font>}),<br></br>    #<font color="red">"Consultas Mescladas"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"Column1 Expandido"</font>, {<font color="red">"frm_colsol"</font>}, col_colabo, {<font color="red">"col_id"</font>}, <font color="red">"col_colabo"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"col_colabo Expandido"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas"</font>, <font color="red">"col_colabo"</font>, {<font color="red">"col_nome"</font>, <font color="red">"col_setor"</font>}, {<font color="red">"frm_colsol_nome"</font>, <font color="red">"frm_colsol_setor"</font>}),<br></br>    #<font color="red">"Consultas Mescladas1"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"col_colabo Expandido"</font>, {<font color="red">"frm_setsol"</font>}, col_setor, {<font color="red">"set_id"</font>}, <font color="red">"col_setor"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"col_setor Expandido"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas1"</font>, <font color="red">"col_setor"</font>, {<font color="red">"set_descri"</font>}, {<font color="red">"frm_setsol_nome"</font>}),<br></br>    #<font color="red">"Coluna Condicional Adicionada"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"col_setor Expandido"</font>, "colsol setor = setsol", each if [frm_colsol_setor] = [frm_setsol] then <font color="red">"OK"</font> else <font color="red">"Não"</font>),<br></br>    #<font color="red">"Consultas Mescladas2"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"Coluna Condicional Adicionada"</font>, {<font color="red">"frm_colsol_setor"</font>}, col_setor, {<font color="red">"set_id"</font>}, <font color="red">"col_setor"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"col_setor Expandido1"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas2"</font>, <font color="red">"col_setor"</font>, {<font color="red">"set_descri"</font>}, {<font color="red">"frm_colsol_set_nome"</font>}),<br></br>    #<font color="red">"Consultas Mescladas3"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"col_setor Expandido1"</font>, {<font color="red">"frm_colpre"</font>}, col_colabo, {<font color="red">"col_id"</font>}, <font color="red">"col_colabo"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"col_colabo Expandido1"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas3"</font>, <font color="red">"col_colabo"</font>, {<font color="red">"col_nome"</font>}, {<font color="red">"frm_colpre_nome"</font>}),<br></br>    #<font color="red">"Consultas Mescladas4"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"col_colabo Expandido1"</font>, {<font color="red">"frm_colcap"</font>}, col_colabo, {<font color="red">"col_id"</font>}, <font color="red">"col_colabo"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"col_colabo Expandido2"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas4"</font>, <font color="red">"col_colabo"</font>, {<font color="red">"col_nome"</font>}, {<font color="red">"frm_colcap_nome"</font>}),<br></br>    #<font color="red">"Consultas Mescladas5"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"col_colabo Expandido2"</font>, {<font color="red">"frm_tipoco"</font>}, par_classi, {<font color="red">"cla_codigo"</font>}, <font color="red">"par_classi"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"par_classi Expandido"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas5"</font>, <font color="red">"par_classi"</font>, {<font color="red">"cla_descri"</font>, <font color="red">"Tipo Macro"</font>}, {<font color="red">"frm_tipoco_nome"</font>, <font color="red">"tipo_macro"</font>}),<br></br>    #<font color="red">"Consultas Mescladas6"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"par_classi Expandido"</font>, {<font color="red">"frm_regneg"</font>}, par_regneg, {<font color="red">"reg_codigo"</font>}, <font color="red">"par_regneg"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"par_regneg Expandido"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas6"</font>, <font color="red">"par_regneg"</font>, {<font color="red">"reg_descri"</font>}, {<font color="red">"frm_regneg_nome"</font>}),<br></br>    #<font color="red">"Consultas Mescladas7"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"par_regneg Expandido"</font>, {<font color="red">"frm_avalia"</font>}, par_avalia, {<font color="red">"ava_valor"</font>}, <font color="red">"par_avalia"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"par_avalia Expandido"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas7"</font>, <font color="red">"par_avalia"</font>, {<font color="red">"ava_descri"</font>, <font color="red">"ava_consat"</font>}, {<font color="red">"frm_avalia_nome"</font>, <font color="red">"frm_avalia_consat"</font>}),<br></br>    #<font color="red">"Consultas Mescladas8"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"par_avalia Expandido"</font>, {<font color="red">"frm_colcon"</font>}, col_colabo, {<font color="red">"col_id"</font>}, <font color="red">"col_colabo"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"col_colabo Expandido3"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas8"</font>, <font color="red">"col_colabo"</font>, {<font color="red">"col_nome"</font>}, {<font color="red">"frm_colcon_nome"</font>}),<br></br>    #<font color="red">"Tratamento de valores nulos"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"col_colabo Expandido3"</font>, <font color="red">"frm_setsol_nome_trat"</font>, each if [frm_setsol_nome] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_setsol_nome]),<br></br>    #<font color="red">"Tratamento de valores nulos1"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos"</font>, <font color="red">"frm_colsol_set_nome_trat"</font>, each if [frm_colsol_set_nome] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_colsol_set_nome]),<br></br>    #<font color="red">"Tratamento de valores nulos2"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos1"</font>, <font color="red">"frm_colcap_nome_trat"</font>, each if [frm_colcap_nome] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_colcap_nome]),<br></br>    #<font color="red">"Tratamento de valores nulos3"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos2"</font>, <font color="red">"frm_tipoco_nome_trat"</font>, each if [frm_tipoco_nome] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_tipoco_nome]),<br></br>    #<font color="red">"Tratamento de valores nulos4"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos3"</font>, <font color="red">"Tipo Macro"</font>, each if [tipo_macro] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [tipo_macro]),<br></br>    #<font color="red">"Tratamento de valores nulos5"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos4"</font>, <font color="red">"frm_regneg_nome_trat"</font>, each if [frm_regneg_nome] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_regneg_nome]),<br></br>    #<font color="red">"Tratamento de valores nulos6"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos5"</font>, <font color="red">"frm_avalia_nome_trat"</font>, each if [frm_avalia_nome] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_avalia_nome]),<br></br>    #<font color="red">"Tratamento de valores nulos7"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos6"</font>, <font color="red">"frm_avalia_consat_trat"</font>, each if [frm_avalia_consat] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_avalia_consat]),<br></br>    #<font color="red">"Tratamento de valores nulos8"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos7"</font>, <font color="red">"frm_colcon_nome_trat"</font>, each if [frm_colcon_nome] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_colcon_nome]),<br></br>    #<font color="red">"Tratamento de valores nulos9"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos8"</font>, <font color="red">"frm_limite_trat"</font>, each if [frm_limite] = <font color="red">""</font> then [frm_dtconc] else [frm_limite]),<br></br>    #<font color="red">"frm_tem_limite"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos9"</font>, <font color="red">"frm_tem_limite"</font>, each if [frm_limite] = <font color="red">""</font> then <font color="red">"N"</font> else <font color="red">"S"</font>),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(frm_tem_limite,{{<font color="red">"frm_id"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_datinc"</font>, <font color="blue">type</font> datetime}, {<font color="red">"frm_datcap"</font>, <font color="blue">type</font> datetime}, {<font color="red">"frm_dtconc"</font>, <font color="blue">type</font> datetime}, {<font color="red">"frm_priori"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_aplica"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_situac"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_status"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_horas"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"frm_minut"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"frm_limite"</font>, <font color="blue">type</font> <font color="blue">date</font>}, {<font color="red">"frm_solpri"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_qtderg"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"frm_colsol_nome"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {"colsol setor = setsol", <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_colpre_nome"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_tem_limite"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_limite_trat"</font>, <font color="blue">type</font> datetime}, {<font color="red">"frm_colcon_nome_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_avalia_consat_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_avalia_nome_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_regneg_nome_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_tipoco_nome_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_colcap_nome_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_colsol_set_nome_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_setsol_nome_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}}),<br></br>    #<font color="red">"Data Extraída"</font> = <font color="purple">Table.TransformColumns</font>(#<font color="red">"Tipo Alterado"</font>,{{<font color="red">"frm_limite_trat"</font>, <font color="purple">DateTime.Date</font>, <font color="blue">type</font> <font color="blue">date</font>}}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Data Extraída"</font>,{<font color="red">"frm_colsol"</font>, <font color="red">"frm_colpre"</font>, <font color="red">"frm_ramal"</font>, <font color="red">"frm_motivo"</font>, <font color="red">"frm_descri"</font>, <font color="red">"frm_colcap"</font>, <font color="red">"frm_observ"</font>, <font color="red">"frm_dtconf"</font>, <font color="red">"frm_confpo"</font>, <font color="red">"frm_chave"</font>, <font color="red">"frm_avalia"</font>, <font color="red">"frm_obsava"</font>, <font color="red">"frm_regneg"</font>, <font color="red">"frm_denvig"</font>, <font color="red">"frm_reavig"</font>, <font color="red">"d_e_l_e_t_"</font>, <font color="red">"frm_lembre"</font>, <font color="red">"frm_parece"</font>, <font color="red">"frm_acoes"</font>, <font color="red">"frm_setsol_nome"</font>, <font color="red">"frm_colsol_set_nome"</font>, <font color="red">"frm_colcap_nome"</font>, <font color="red">"frm_tipoco_nome"</font>, <font color="red">"frm_regneg_nome"</font>, <font color="red">"frm_avalia_nome"</font>, <font color="red">"frm_avalia_consat"</font>, <font color="red">"frm_colcon_nome"</font>, <font color="red">"frm_colsol_setor"</font>, <font color="red">"frm_limite"</font>,<font color="red">"tipo_macro"</font>}),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Colunas Removidas"</font>,{{<font color="red">"frm_id"</font>, <font color="red">"Id da Solicitação"</font>}, {<font color="red">"frm_datinc"</font>, <font color="red">"Data de início"</font>}, {<font color="red">"frm_datcap"</font>, <font color="red">"Data de captura"</font>}, {<font color="red">"frm_dtconc"</font>, <font color="red">"Data de conclusão"</font>}, {<font color="red">"frm_priori"</font>, <font color="red">"Prioridade"</font>}, {<font color="red">"frm_situac"</font>, <font color="red">"Situação"</font>}, {<font color="red">"frm_status"</font>, <font color="red">"Status"</font>}, {<font color="red">"frm_horas"</font>, "Duração - Horas"}, {<font color="red">"frm_minut"</font>, "Duração - Minutos"}, {<font color="red">"frm_colsol_nome"</font>, <font color="red">"Colaborador Solicitante"</font>}, {<font color="red">"frm_setsol_nome_trat"</font>, <font color="red">"Setor Solicitante"</font>}, {<font color="red">"frm_colsol_set_nome_trat"</font>, <font color="red">"Setor do Colaborador Solicitante"</font>}, {<font color="red">"frm_colcap_nome_trat"</font>, <font color="red">"Técnico que Capturou"</font>}, {<font color="red">"frm_tipoco_nome_trat"</font>, <font color="red">"Tipo de Solicitação"</font>}, {<font color="red">"frm_regneg_nome_trat"</font>, <font color="red">"Tipo de serviço"</font>}, {<font color="red">"frm_avalia_nome_trat"</font>, <font color="red">"Avaliação"</font>}, {<font color="red">"frm_avalia_consat_trat"</font>, <font color="red">"Possui Avaliação"</font>}, {<font color="red">"frm_colcon_nome_trat"</font>, <font color="red">"Técnico que Concluiu a Solicitação"</font>}, {<font color="red">"frm_limite_trat"</font>, <font color="red">"Data Limite"</font>}, {<font color="red">"frm_tem_limite"</font>, <font color="red">"Possui Data Limite"</font>}}),<br></br>    #<font color="red">"Colocar Cada Palavra Em Maiúscula"</font> = <font color="purple">Table.TransformColumns</font>(#<font color="red">"Colunas Renomeadas"</font>,{{<font color="red">"Colaborador Solicitante"</font>, <font color="purple">Text.Proper</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_colpre_nome"</font>, <font color="purple">Text.Proper</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Técnico que Capturou"</font>, <font color="purple">Text.Proper</font>, <font color="blue">type</font> <font color="blue">text</font>}}),<br></br>    #<font color="red">"Coluna Duplicada"</font> = <font color="purple">Table.DuplicateColumn</font>(#<font color="red">"Colocar Cada Palavra Em Maiúscula"</font>, <font color="red">"Data de início"</font>, "Data de início - Copiar"),<br></br>    #<font color="red">"Coluna Duplicada1"</font> = <font color="purple">Table.DuplicateColumn</font>(#<font color="red">"Coluna Duplicada"</font>, <font color="red">"Data de conclusão"</font>, "Data de conclusão - Copiar"),<br></br>    #<font color="red">"Colunas Renomeadas1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Coluna Duplicada1"</font>,{{"Data de início - Copiar<font color="red">", "</font>Hora de início"}, {"Data de conclusão - Copiar<font color="red">", "</font>Hora de conclusão"}}),<br></br>    #<font color="red">"Valor Substituído"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Colunas Renomeadas1"</font>,<font color="red">"PA"</font>,<font color="red">"Pendente com o Técnico"</font>,<font color="purple">Replacer.ReplaceText</font>,{<font color="red">"Situação"</font>}),<br></br>    #<font color="red">"Valor Substituído1"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Valor Substituído"</font>,<font color="red">"PU"</font>,<font color="red">"Pendente com o usuário"</font>,<font color="purple">Replacer.ReplaceText</font>,{<font color="red">"Situação"</font>}),<br></br>    #<font color="red">"Valor Substituído2"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Valor Substituído1"</font>,<font color="red">"PM"</font>,<font color="red">"Orçamento Pendete"</font>,<font color="purple">Replacer.ReplaceText</font>,{<font color="red">"Situação"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Valor Substituído2"</font></td></tr><tr ><td >Tabela Calendário</td><td ><br></br>ADDCOLUMNS(<br></br>    CALENDAR(MIN('Data única'[Data]),MAX('Data única'[Data])),<br></br>    <font color="red">"Dia num"</font>, DAY([Date]),<br></br>    <font color="red">"Dia nome"</font>, FORMAT([Date],<font color="red">"dddd"</font>),<br></br>    <font color="red">"Dia da semana"</font>, WEEKDAY([Date]),<br></br>    <font color="red">"Semana num"</font>, WEEKNUM([Date]),<br></br>    <font color="red">"Mês num"</font>, MONTH([Date]),<br></br>    <font color="red">"Mês nome"</font>, FORMAT([Date],<font color="red">"mmmm"</font>),<br></br>    <font color="red">"Trimestre"</font>, QUARTER([Date]),<br></br>    <font color="red">"Ano"</font>, YEAR([Date])<br></br>)</td></tr><tr ><td >Colaboradores do setor</td><td >DISTINCT(par_solici[Técnico que Capturou])<br></br></td></tr><tr ><td >Medidas</td><td >Row(<font color="red">"Column"</font>, BLANK())</td></tr><tr ><td >LocalDateTable_16ec3c8f-e0b1-4d1b-87a0-d4b72994ab63</td><td >Calendar(Date(Year(MIN('par_solici'[Data Limite])), 1, 1), Date(Year(MAX('par_solici'[Data Limite])), 12, 31))</td></tr><tr ><td >LocalDateTable_99eb6c84-5f59-467d-a7ff-f4da220ccc58</td><td >Calendar(Date(Year(MIN('par_solici'[Data de captura])), 1, 1), Date(Year(MAX('par_solici'[Data de captura])), 12, 31))</td></tr><tr ><td >Data única</td><td ><font color="blue">let</font><br></br>    Fonte = <font color="purple">Json.Document</font>(<font color="purple">File.Contents</font>(<font color="red">"C:\Users\natan\OneDrive\Documentos\GitHub\Projetos\Unimed Vale dos Sinos\par_solici\par_solici.json"</font>)),<br></br>    #<font color="red">"Convertido para Tabela"</font> = <font color="purple">Table.FromList</font>(Fonte, <font color="purple">Splitter.SplitByNothing</font>(), <font color="blue">null</font>, <font color="blue">null</font>, <font color="purple">ExtraValues.Error</font>),<br></br>    #<font color="red">"Column1 Expandido"</font> = <font color="purple">Table.ExpandRecordColumn</font>(#<font color="red">"Convertido para Tabela"</font>, <font color="red">"Column1"</font>, {<font color="red">"frm_id"</font>, <font color="red">"frm_datinc"</font>, <font color="red">"frm_colsol"</font>, <font color="red">"frm_setsol"</font>, <font color="red">"frm_colpre"</font>, <font color="red">"frm_ramal"</font>, <font color="red">"frm_motivo"</font>, <font color="red">"frm_descri"</font>, <font color="red">"frm_colcap"</font>, <font color="red">"frm_datcap"</font>, <font color="red">"frm_dtconc"</font>, <font color="red">"frm_colcon"</font>, <font color="red">"frm_priori"</font>, <font color="red">"frm_aplica"</font>, <font color="red">"frm_observ"</font>, <font color="red">"frm_dtconf"</font>, <font color="red">"frm_confpo"</font>, <font color="red">"frm_situac"</font>, <font color="red">"frm_chave"</font>, <font color="red">"frm_status"</font>, <font color="red">"frm_horas"</font>, <font color="red">"frm_minut"</font>, <font color="red">"frm_avalia"</font>, <font color="red">"frm_obsava"</font>, <font color="red">"frm_tipoco"</font>, <font color="red">"frm_regneg"</font>, <font color="red">"frm_denvig"</font>, <font color="red">"frm_reavig"</font>, <font color="red">"d_e_l_e_t_"</font>, <font color="red">"frm_lembre"</font>, <font color="red">"frm_parece"</font>, <font color="red">"frm_acoes"</font>, <font color="red">"frm_limite"</font>, <font color="red">"frm_solpri"</font>, <font color="red">"frm_qtderg"</font>}, {<font color="red">"frm_id"</font>, <font color="red">"frm_datinc"</font>, <font color="red">"frm_colsol"</font>, <font color="red">"frm_setsol"</font>, <font color="red">"frm_colpre"</font>, <font color="red">"frm_ramal"</font>, <font color="red">"frm_motivo"</font>, <font color="red">"frm_descri"</font>, <font color="red">"frm_colcap"</font>, <font color="red">"frm_datcap"</font>, <font color="red">"frm_dtconc"</font>, <font color="red">"frm_colcon"</font>, <font color="red">"frm_priori"</font>, <font color="red">"frm_aplica"</font>, <font color="red">"frm_observ"</font>, <font color="red">"frm_dtconf"</font>, <font color="red">"frm_confpo"</font>, <font color="red">"frm_situac"</font>, <font color="red">"frm_chave"</font>, <font color="red">"frm_status"</font>, <font color="red">"frm_horas"</font>, <font color="red">"frm_minut"</font>, <font color="red">"frm_avalia"</font>, <font color="red">"frm_obsava"</font>, <font color="red">"frm_tipoco"</font>, <font color="red">"frm_regneg"</font>, <font color="red">"frm_denvig"</font>, <font color="red">"frm_reavig"</font>, <font color="red">"d_e_l_e_t_"</font>, <font color="red">"frm_lembre"</font>, <font color="red">"frm_parece"</font>, <font color="red">"frm_acoes"</font>, <font color="red">"frm_limite"</font>, <font color="red">"frm_solpri"</font>, <font color="red">"frm_qtderg"</font>}),<br></br>    #<font color="red">"Consultas Mescladas"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"Column1 Expandido"</font>, {<font color="red">"frm_colsol"</font>}, col_colabo, {<font color="red">"col_id"</font>}, <font color="red">"col_colabo"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"col_colabo Expandido"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas"</font>, <font color="red">"col_colabo"</font>, {<font color="red">"col_nome"</font>, <font color="red">"col_setor"</font>}, {<font color="red">"frm_colsol_nome"</font>, <font color="red">"frm_colsol_setor"</font>}),<br></br>    #<font color="red">"Consultas Mescladas1"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"col_colabo Expandido"</font>, {<font color="red">"frm_setsol"</font>}, col_setor, {<font color="red">"set_id"</font>}, <font color="red">"col_setor"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"col_setor Expandido"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas1"</font>, <font color="red">"col_setor"</font>, {<font color="red">"set_descri"</font>}, {<font color="red">"frm_setsol_nome"</font>}),<br></br>    #<font color="red">"Coluna Condicional Adicionada"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"col_setor Expandido"</font>, "colsol setor = setsol", each if [frm_colsol_setor] = [frm_setsol] then <font color="red">"OK"</font> else <font color="red">"Não"</font>),<br></br>    #<font color="red">"Consultas Mescladas2"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"Coluna Condicional Adicionada"</font>, {<font color="red">"frm_colsol_setor"</font>}, col_setor, {<font color="red">"set_id"</font>}, <font color="red">"col_setor"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"col_setor Expandido1"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas2"</font>, <font color="red">"col_setor"</font>, {<font color="red">"set_descri"</font>}, {<font color="red">"frm_colsol_set_nome"</font>}),<br></br>    #<font color="red">"Consultas Mescladas3"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"col_setor Expandido1"</font>, {<font color="red">"frm_colpre"</font>}, col_colabo, {<font color="red">"col_id"</font>}, <font color="red">"col_colabo"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"col_colabo Expandido1"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas3"</font>, <font color="red">"col_colabo"</font>, {<font color="red">"col_nome"</font>}, {<font color="red">"frm_colpre_nome"</font>}),<br></br>    #<font color="red">"Consultas Mescladas4"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"col_colabo Expandido1"</font>, {<font color="red">"frm_colcap"</font>}, col_colabo, {<font color="red">"col_id"</font>}, <font color="red">"col_colabo"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"col_colabo Expandido2"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas4"</font>, <font color="red">"col_colabo"</font>, {<font color="red">"col_nome"</font>}, {<font color="red">"frm_colcap_nome"</font>}),<br></br>    #<font color="red">"Consultas Mescladas5"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"col_colabo Expandido2"</font>, {<font color="red">"frm_tipoco"</font>}, par_classi, {<font color="red">"cla_codigo"</font>}, <font color="red">"par_classi"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"par_classi Expandido"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas5"</font>, <font color="red">"par_classi"</font>, {<font color="red">"cla_descri"</font>, <font color="red">"Tipo Macro"</font>}, {<font color="red">"frm_tipoco_nome"</font>, <font color="red">"tipo_macro"</font>}),<br></br>    #<font color="red">"Consultas Mescladas6"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"par_classi Expandido"</font>, {<font color="red">"frm_regneg"</font>}, par_regneg, {<font color="red">"reg_codigo"</font>}, <font color="red">"par_regneg"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"par_regneg Expandido"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas6"</font>, <font color="red">"par_regneg"</font>, {<font color="red">"reg_descri"</font>}, {<font color="red">"frm_regneg_nome"</font>}),<br></br>    #<font color="red">"Consultas Mescladas7"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"par_regneg Expandido"</font>, {<font color="red">"frm_avalia"</font>}, par_avalia, {<font color="red">"ava_valor"</font>}, <font color="red">"par_avalia"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"par_avalia Expandido"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas7"</font>, <font color="red">"par_avalia"</font>, {<font color="red">"ava_descri"</font>, <font color="red">"ava_consat"</font>}, {<font color="red">"frm_avalia_nome"</font>, <font color="red">"frm_avalia_consat"</font>}),<br></br>    #<font color="red">"Consultas Mescladas8"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"par_avalia Expandido"</font>, {<font color="red">"frm_colcon"</font>}, col_colabo, {<font color="red">"col_id"</font>}, <font color="red">"col_colabo"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"col_colabo Expandido3"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas8"</font>, <font color="red">"col_colabo"</font>, {<font color="red">"col_nome"</font>}, {<font color="red">"frm_colcon_nome"</font>}),<br></br>    #<font color="red">"Tratamento de valores nulos"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"col_colabo Expandido3"</font>, <font color="red">"frm_setsol_nome_trat"</font>, each if [frm_setsol_nome] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_setsol_nome]),<br></br>    #<font color="red">"Tratamento de valores nulos1"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos"</font>, <font color="red">"frm_colsol_set_nome_trat"</font>, each if [frm_colsol_set_nome] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_colsol_set_nome]),<br></br>    #<font color="red">"Tratamento de valores nulos2"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos1"</font>, <font color="red">"frm_colcap_nome_trat"</font>, each if [frm_colcap_nome] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_colcap_nome]),<br></br>    #<font color="red">"Tratamento de valores nulos3"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos2"</font>, <font color="red">"frm_tipoco_nome_trat"</font>, each if [frm_tipoco_nome] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_tipoco_nome]),<br></br>    #<font color="red">"Tratamento de valores nulos4"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos3"</font>, <font color="red">"Tipo Macro"</font>, each if [tipo_macro] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [tipo_macro]),<br></br>    #<font color="red">"Tratamento de valores nulos5"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos4"</font>, <font color="red">"frm_regneg_nome_trat"</font>, each if [frm_regneg_nome] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_regneg_nome]),<br></br>    #<font color="red">"Tratamento de valores nulos6"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos5"</font>, <font color="red">"frm_avalia_nome_trat"</font>, each if [frm_avalia_nome] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_avalia_nome]),<br></br>    #<font color="red">"Tratamento de valores nulos7"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos6"</font>, <font color="red">"frm_avalia_consat_trat"</font>, each if [frm_avalia_consat] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_avalia_consat]),<br></br>    #<font color="red">"Tratamento de valores nulos8"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos7"</font>, <font color="red">"frm_colcon_nome_trat"</font>, each if [frm_colcon_nome] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_colcon_nome]),<br></br>    #<font color="red">"Tratamento de valores nulos9"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos8"</font>, <font color="red">"frm_limite_trat"</font>, each if [frm_limite] = <font color="red">""</font> then [frm_dtconc] else [frm_limite]),<br></br>    #<font color="red">"frm_tem_limite"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos9"</font>, <font color="red">"frm_tem_limite"</font>, each if [frm_limite] = <font color="red">""</font> then <font color="red">"N"</font> else <font color="red">"S"</font>),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(frm_tem_limite,{{<font color="red">"frm_id"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_datinc"</font>, <font color="blue">type</font> datetime}, {<font color="red">"frm_datcap"</font>, <font color="blue">type</font> datetime}, {<font color="red">"frm_dtconc"</font>, <font color="blue">type</font> datetime}, {<font color="red">"frm_priori"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_aplica"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_situac"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_status"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_horas"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"frm_minut"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"frm_limite"</font>, <font color="blue">type</font> <font color="blue">date</font>}, {<font color="red">"frm_solpri"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_qtderg"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"frm_colsol_nome"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {"colsol setor = setsol", <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_colpre_nome"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_tem_limite"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_limite_trat"</font>, <font color="blue">type</font> datetime}, {<font color="red">"frm_colcon_nome_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_avalia_consat_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_avalia_nome_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_regneg_nome_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_tipoco_nome_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_colcap_nome_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_colsol_set_nome_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_setsol_nome_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}}),<br></br>    #<font color="red">"Data Extraída"</font> = <font color="purple">Table.TransformColumns</font>(#<font color="red">"Tipo Alterado"</font>,{{<font color="red">"frm_limite_trat"</font>, <font color="purple">DateTime.Date</font>, <font color="blue">type</font> <font color="blue">date</font>}}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Data Extraída"</font>,{<font color="red">"frm_colsol"</font>, <font color="red">"frm_colpre"</font>, <font color="red">"frm_ramal"</font>, <font color="red">"frm_motivo"</font>, <font color="red">"frm_descri"</font>, <font color="red">"frm_colcap"</font>, <font color="red">"frm_observ"</font>, <font color="red">"frm_dtconf"</font>, <font color="red">"frm_confpo"</font>, <font color="red">"frm_chave"</font>, <font color="red">"frm_avalia"</font>, <font color="red">"frm_obsava"</font>, <font color="red">"frm_regneg"</font>, <font color="red">"frm_denvig"</font>, <font color="red">"frm_reavig"</font>, <font color="red">"d_e_l_e_t_"</font>, <font color="red">"frm_lembre"</font>, <font color="red">"frm_parece"</font>, <font color="red">"frm_acoes"</font>, <font color="red">"frm_setsol_nome"</font>, <font color="red">"frm_colsol_set_nome"</font>, <font color="red">"frm_colcap_nome"</font>, <font color="red">"frm_tipoco_nome"</font>, <font color="red">"frm_regneg_nome"</font>, <font color="red">"frm_avalia_nome"</font>, <font color="red">"frm_avalia_consat"</font>, <font color="red">"frm_colcon_nome"</font>, <font color="red">"frm_colsol_setor"</font>, <font color="red">"frm_limite"</font>,<font color="red">"tipo_macro"</font>}),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Colunas Removidas"</font>,{{<font color="red">"frm_id"</font>, <font color="red">"Id da Solicitação"</font>}, {<font color="red">"frm_datinc"</font>, <font color="red">"Data de início"</font>}, {<font color="red">"frm_datcap"</font>, <font color="red">"Data de captura"</font>}, {<font color="red">"frm_dtconc"</font>, <font color="red">"Data de conclusão"</font>}, {<font color="red">"frm_priori"</font>, <font color="red">"Prioridade"</font>}, {<font color="red">"frm_situac"</font>, <font color="red">"Situação"</font>}, {<font color="red">"frm_status"</font>, <font color="red">"Status"</font>}, {<font color="red">"frm_horas"</font>, "Duração - Horas"}, {<font color="red">"frm_minut"</font>, "Duração - Minutos"}, {<font color="red">"frm_colsol_nome"</font>, <font color="red">"Colaborador Solicitante"</font>}, {<font color="red">"frm_setsol_nome_trat"</font>, <font color="red">"Setor Solicitante"</font>}, {<font color="red">"frm_colsol_set_nome_trat"</font>, <font color="red">"Setor do Colaborador Solicitante"</font>}, {<font color="red">"frm_colcap_nome_trat"</font>, <font color="red">"Técnico que Capturou"</font>}, {<font color="red">"frm_tipoco_nome_trat"</font>, <font color="red">"Tipo de Solicitação"</font>}, {<font color="red">"frm_regneg_nome_trat"</font>, <font color="red">"Tipo de serviço"</font>}, {<font color="red">"frm_avalia_nome_trat"</font>, <font color="red">"Avaliação"</font>}, {<font color="red">"frm_avalia_consat_trat"</font>, <font color="red">"Possui Avaliação"</font>}, {<font color="red">"frm_colcon_nome_trat"</font>, <font color="red">"Técnico que Concluiu a Solicitação"</font>}, {<font color="red">"frm_limite_trat"</font>, <font color="red">"Data Limite"</font>}, {<font color="red">"frm_tem_limite"</font>, <font color="red">"Possui Data Limite"</font>}}),<br></br>    #<font color="red">"Colocar Cada Palavra Em Maiúscula"</font> = <font color="purple">Table.TransformColumns</font>(#<font color="red">"Colunas Renomeadas"</font>,{{<font color="red">"Colaborador Solicitante"</font>, <font color="purple">Text.Proper</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_colpre_nome"</font>, <font color="purple">Text.Proper</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Técnico que Capturou"</font>, <font color="purple">Text.Proper</font>, <font color="blue">type</font> <font color="blue">text</font>}}),<br></br>    #<font color="red">"Colunas Removidas1"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Colocar Cada Palavra Em Maiúscula"</font>,{<font color="red">"Data de captura"</font>, <font color="red">"Data de conclusão"</font>, <font color="red">"Data Limite"</font>}),<br></br>    #<font color="red">"Tipo Alterado1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Colunas Removidas1"</font>,{{<font color="red">"Data de início"</font>, <font color="blue">type</font> <font color="blue">date</font>}}),<br></br>    #<font color="red">"Coluna constante"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tipo Alterado1"</font>, <font color="red">"Tipo"</font>, each <font color="red">"Abertura"</font>),<br></br>    #<font color="red">"Colunas Renomeadas1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Coluna constante"</font>,{{<font color="red">"Data de início"</font>, <font color="red">"Data"</font>}}),<br></br>    #<font color="red">"Consulta Acrescentada"</font> = <font color="purple">Table.Combine</font>({#<font color="red">"Colunas Renomeadas1"</font>, #<font color="red">"Somente data de conclusão"</font>}),<br></br>    #<font color="red">"Valor Substituído"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Consulta Acrescentada"</font>,<font color="red">"PA"</font>,<font color="red">"Pendente com o Técnico"</font>,<font color="purple">Replacer.ReplaceText</font>,{<font color="red">"Situação"</font>}),<br></br>    #<font color="red">"Valor Substituído1"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Valor Substituído"</font>,<font color="red">"PU"</font>,<font color="red">"Pendente com o usuário"</font>,<font color="purple">Replacer.ReplaceText</font>,{<font color="red">"Situação"</font>}),<br></br>    #<font color="red">"Valor Substituído2"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Valor Substituído1"</font>,<font color="red">"PM"</font>,<font color="red">"Orçamento Pendente"</font>,<font color="purple">Replacer.ReplaceText</font>,{<font color="red">"Situação"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Valor Substituído2"</font></td></tr><tr ><td >LocalDateTable_3789bd27-4064-48f3-90fb-1c93fe7c4faf</td><td >Calendar(Date(Year(MIN('par_solici'[Data de início])), 1, 1), Date(Year(MAX('par_solici'[Data de início])), 12, 31))</td></tr><tr ><td >LocalDateTable_938b9a37-9514-4eb9-b19d-d32f7db3da09</td><td >Calendar(Date(Year(MIN('par_solici'[Data de conclusão])), 1, 1), Date(Year(MAX('par_solici'[Data de conclusão])), 12, 31))</td></tr><tr ><td >Somente data de conclusão</td><td ><font color="blue">let</font><br></br>    Fonte = <font color="purple">Json.Document</font>(<font color="purple">File.Contents</font>(<font color="red">"C:\Users\natan\OneDrive\Documentos\GitHub\Projetos\Unimed Vale dos Sinos\par_solici\par_solici.json"</font>)),<br></br>    #<font color="red">"Convertido para Tabela"</font> = <font color="purple">Table.FromList</font>(Fonte, <font color="purple">Splitter.SplitByNothing</font>(), <font color="blue">null</font>, <font color="blue">null</font>, <font color="purple">ExtraValues.Error</font>),<br></br>    #<font color="red">"Column1 Expandido"</font> = <font color="purple">Table.ExpandRecordColumn</font>(#<font color="red">"Convertido para Tabela"</font>, <font color="red">"Column1"</font>, {<font color="red">"frm_id"</font>, <font color="red">"frm_datinc"</font>, <font color="red">"frm_colsol"</font>, <font color="red">"frm_setsol"</font>, <font color="red">"frm_colpre"</font>, <font color="red">"frm_ramal"</font>, <font color="red">"frm_motivo"</font>, <font color="red">"frm_descri"</font>, <font color="red">"frm_colcap"</font>, <font color="red">"frm_datcap"</font>, <font color="red">"frm_dtconc"</font>, <font color="red">"frm_colcon"</font>, <font color="red">"frm_priori"</font>, <font color="red">"frm_aplica"</font>, <font color="red">"frm_observ"</font>, <font color="red">"frm_dtconf"</font>, <font color="red">"frm_confpo"</font>, <font color="red">"frm_situac"</font>, <font color="red">"frm_chave"</font>, <font color="red">"frm_status"</font>, <font color="red">"frm_horas"</font>, <font color="red">"frm_minut"</font>, <font color="red">"frm_avalia"</font>, <font color="red">"frm_obsava"</font>, <font color="red">"frm_tipoco"</font>, <font color="red">"frm_regneg"</font>, <font color="red">"frm_denvig"</font>, <font color="red">"frm_reavig"</font>, <font color="red">"d_e_l_e_t_"</font>, <font color="red">"frm_lembre"</font>, <font color="red">"frm_parece"</font>, <font color="red">"frm_acoes"</font>, <font color="red">"frm_limite"</font>, <font color="red">"frm_solpri"</font>, <font color="red">"frm_qtderg"</font>}, {<font color="red">"frm_id"</font>, <font color="red">"frm_datinc"</font>, <font color="red">"frm_colsol"</font>, <font color="red">"frm_setsol"</font>, <font color="red">"frm_colpre"</font>, <font color="red">"frm_ramal"</font>, <font color="red">"frm_motivo"</font>, <font color="red">"frm_descri"</font>, <font color="red">"frm_colcap"</font>, <font color="red">"frm_datcap"</font>, <font color="red">"frm_dtconc"</font>, <font color="red">"frm_colcon"</font>, <font color="red">"frm_priori"</font>, <font color="red">"frm_aplica"</font>, <font color="red">"frm_observ"</font>, <font color="red">"frm_dtconf"</font>, <font color="red">"frm_confpo"</font>, <font color="red">"frm_situac"</font>, <font color="red">"frm_chave"</font>, <font color="red">"frm_status"</font>, <font color="red">"frm_horas"</font>, <font color="red">"frm_minut"</font>, <font color="red">"frm_avalia"</font>, <font color="red">"frm_obsava"</font>, <font color="red">"frm_tipoco"</font>, <font color="red">"frm_regneg"</font>, <font color="red">"frm_denvig"</font>, <font color="red">"frm_reavig"</font>, <font color="red">"d_e_l_e_t_"</font>, <font color="red">"frm_lembre"</font>, <font color="red">"frm_parece"</font>, <font color="red">"frm_acoes"</font>, <font color="red">"frm_limite"</font>, <font color="red">"frm_solpri"</font>, <font color="red">"frm_qtderg"</font>}),<br></br>    #<font color="red">"Consultas Mescladas"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"Column1 Expandido"</font>, {<font color="red">"frm_colsol"</font>}, col_colabo, {<font color="red">"col_id"</font>}, <font color="red">"col_colabo"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"col_colabo Expandido"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas"</font>, <font color="red">"col_colabo"</font>, {<font color="red">"col_nome"</font>, <font color="red">"col_setor"</font>}, {<font color="red">"frm_colsol_nome"</font>, <font color="red">"frm_colsol_setor"</font>}),<br></br>    #<font color="red">"Consultas Mescladas1"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"col_colabo Expandido"</font>, {<font color="red">"frm_setsol"</font>}, col_setor, {<font color="red">"set_id"</font>}, <font color="red">"col_setor"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"col_setor Expandido"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas1"</font>, <font color="red">"col_setor"</font>, {<font color="red">"set_descri"</font>}, {<font color="red">"frm_setsol_nome"</font>}),<br></br>    #<font color="red">"Coluna Condicional Adicionada"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"col_setor Expandido"</font>, "colsol setor = setsol", each if [frm_colsol_setor] = [frm_setsol] then <font color="red">"OK"</font> else <font color="red">"Não"</font>),<br></br>    #<font color="red">"Consultas Mescladas2"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"Coluna Condicional Adicionada"</font>, {<font color="red">"frm_colsol_setor"</font>}, col_setor, {<font color="red">"set_id"</font>}, <font color="red">"col_setor"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"col_setor Expandido1"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas2"</font>, <font color="red">"col_setor"</font>, {<font color="red">"set_descri"</font>}, {<font color="red">"frm_colsol_set_nome"</font>}),<br></br>    #<font color="red">"Consultas Mescladas3"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"col_setor Expandido1"</font>, {<font color="red">"frm_colpre"</font>}, col_colabo, {<font color="red">"col_id"</font>}, <font color="red">"col_colabo"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"col_colabo Expandido1"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas3"</font>, <font color="red">"col_colabo"</font>, {<font color="red">"col_nome"</font>}, {<font color="red">"frm_colpre_nome"</font>}),<br></br>    #<font color="red">"Consultas Mescladas4"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"col_colabo Expandido1"</font>, {<font color="red">"frm_colcap"</font>}, col_colabo, {<font color="red">"col_id"</font>}, <font color="red">"col_colabo"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"col_colabo Expandido2"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas4"</font>, <font color="red">"col_colabo"</font>, {<font color="red">"col_nome"</font>}, {<font color="red">"frm_colcap_nome"</font>}),<br></br>    #<font color="red">"Consultas Mescladas5"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"col_colabo Expandido2"</font>, {<font color="red">"frm_tipoco"</font>}, par_classi, {<font color="red">"cla_codigo"</font>}, <font color="red">"par_classi"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"par_classi Expandido"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas5"</font>, <font color="red">"par_classi"</font>, {<font color="red">"cla_descri"</font>, <font color="red">"Tipo Macro"</font>}, {<font color="red">"frm_tipoco_nome"</font>, <font color="red">"tipo_macro"</font>}),<br></br>    #<font color="red">"Consultas Mescladas6"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"par_classi Expandido"</font>, {<font color="red">"frm_regneg"</font>}, par_regneg, {<font color="red">"reg_codigo"</font>}, <font color="red">"par_regneg"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"par_regneg Expandido"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas6"</font>, <font color="red">"par_regneg"</font>, {<font color="red">"reg_descri"</font>}, {<font color="red">"frm_regneg_nome"</font>}),<br></br>    #<font color="red">"Consultas Mescladas7"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"par_regneg Expandido"</font>, {<font color="red">"frm_avalia"</font>}, par_avalia, {<font color="red">"ava_valor"</font>}, <font color="red">"par_avalia"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"par_avalia Expandido"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas7"</font>, <font color="red">"par_avalia"</font>, {<font color="red">"ava_descri"</font>, <font color="red">"ava_consat"</font>}, {<font color="red">"frm_avalia_nome"</font>, <font color="red">"frm_avalia_consat"</font>}),<br></br>    #<font color="red">"Consultas Mescladas8"</font> = <font color="purple">Table.NestedJoin</font>(#<font color="red">"par_avalia Expandido"</font>, {<font color="red">"frm_colcon"</font>}, col_colabo, {<font color="red">"col_id"</font>}, <font color="red">"col_colabo"</font>, <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #<font color="red">"col_colabo Expandido3"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Consultas Mescladas8"</font>, <font color="red">"col_colabo"</font>, {<font color="red">"col_nome"</font>}, {<font color="red">"frm_colcon_nome"</font>}),<br></br>    #<font color="red">"Tratamento de valores nulos"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"col_colabo Expandido3"</font>, <font color="red">"frm_setsol_nome_trat"</font>, each if [frm_setsol_nome] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_setsol_nome]),<br></br>    #<font color="red">"Tratamento de valores nulos1"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos"</font>, <font color="red">"frm_colsol_set_nome_trat"</font>, each if [frm_colsol_set_nome] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_colsol_set_nome]),<br></br>    #<font color="red">"Tratamento de valores nulos2"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos1"</font>, <font color="red">"frm_colcap_nome_trat"</font>, each if [frm_colcap_nome] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_colcap_nome]),<br></br>    #<font color="red">"Tratamento de valores nulos3"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos2"</font>, <font color="red">"frm_tipoco_nome_trat"</font>, each if [frm_tipoco_nome] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_tipoco_nome]),<br></br>    #<font color="red">"Tratamento de valores nulos4"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos3"</font>, <font color="red">"Tipo Macro"</font>, each if [tipo_macro] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [tipo_macro]),<br></br>    #<font color="red">"Tratamento de valores nulos5"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos4"</font>, <font color="red">"frm_regneg_nome_trat"</font>, each if [frm_regneg_nome] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_regneg_nome]),<br></br>    #<font color="red">"Tratamento de valores nulos6"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos5"</font>, <font color="red">"frm_avalia_nome_trat"</font>, each if [frm_avalia_nome] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_avalia_nome]),<br></br>    #<font color="red">"Tratamento de valores nulos7"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos6"</font>, <font color="red">"frm_avalia_consat_trat"</font>, each if [frm_avalia_consat] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_avalia_consat]),<br></br>    #<font color="red">"Tratamento de valores nulos8"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos7"</font>, <font color="red">"frm_colcon_nome_trat"</font>, each if [frm_colcon_nome] = <font color="blue">null</font> then <font color="red">"Vazio"</font> else [frm_colcon_nome]),<br></br>    #<font color="red">"Tratamento de valores nulos9"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos8"</font>, <font color="red">"frm_limite_trat"</font>, each if [frm_limite] = <font color="red">""</font> then [frm_dtconc] else [frm_limite]),<br></br>    #<font color="red">"frm_tem_limite"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tratamento de valores nulos9"</font>, <font color="red">"frm_tem_limite"</font>, each if [frm_limite] = <font color="red">""</font> then <font color="red">"N"</font> else <font color="red">"S"</font>),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(frm_tem_limite,{{<font color="red">"frm_id"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_datinc"</font>, <font color="blue">type</font> datetime}, {<font color="red">"frm_datcap"</font>, <font color="blue">type</font> datetime}, {<font color="red">"frm_dtconc"</font>, <font color="blue">type</font> datetime}, {<font color="red">"frm_priori"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_aplica"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_situac"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_status"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_horas"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"frm_minut"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"frm_limite"</font>, <font color="blue">type</font> <font color="blue">date</font>}, {<font color="red">"frm_solpri"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_qtderg"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"frm_colsol_nome"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {"colsol setor = setsol", <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_colpre_nome"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_tem_limite"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_limite_trat"</font>, <font color="blue">type</font> datetime}, {<font color="red">"frm_colcon_nome_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_avalia_consat_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_avalia_nome_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_regneg_nome_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_tipoco_nome_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_colcap_nome_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_colsol_set_nome_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_setsol_nome_trat"</font>, <font color="blue">type</font> <font color="blue">text</font>}}),<br></br>    #<font color="red">"Data Extraída"</font> = <font color="purple">Table.TransformColumns</font>(#<font color="red">"Tipo Alterado"</font>,{{<font color="red">"frm_limite_trat"</font>, <font color="purple">DateTime.Date</font>, <font color="blue">type</font> <font color="blue">date</font>}}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Data Extraída"</font>,{<font color="red">"frm_colsol"</font>, <font color="red">"frm_colpre"</font>, <font color="red">"frm_ramal"</font>, <font color="red">"frm_motivo"</font>, <font color="red">"frm_descri"</font>, <font color="red">"frm_colcap"</font>, <font color="red">"frm_observ"</font>, <font color="red">"frm_dtconf"</font>, <font color="red">"frm_confpo"</font>, <font color="red">"frm_chave"</font>, <font color="red">"frm_avalia"</font>, <font color="red">"frm_obsava"</font>, <font color="red">"frm_regneg"</font>, <font color="red">"frm_denvig"</font>, <font color="red">"frm_reavig"</font>, <font color="red">"d_e_l_e_t_"</font>, <font color="red">"frm_lembre"</font>, <font color="red">"frm_parece"</font>, <font color="red">"frm_acoes"</font>, <font color="red">"frm_setsol_nome"</font>, <font color="red">"frm_colsol_set_nome"</font>, <font color="red">"frm_colcap_nome"</font>, <font color="red">"frm_tipoco_nome"</font>, <font color="red">"frm_regneg_nome"</font>, <font color="red">"frm_avalia_nome"</font>, <font color="red">"frm_avalia_consat"</font>, <font color="red">"frm_colcon_nome"</font>, <font color="red">"frm_colsol_setor"</font>, <font color="red">"frm_limite"</font>,<font color="red">"tipo_macro"</font>}),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Colunas Removidas"</font>,{{<font color="red">"frm_id"</font>, <font color="red">"Id da Solicitação"</font>}, {<font color="red">"frm_datinc"</font>, <font color="red">"Data de início"</font>}, {<font color="red">"frm_datcap"</font>, <font color="red">"Data de captura"</font>}, {<font color="red">"frm_dtconc"</font>, <font color="red">"Data de conclusão"</font>}, {<font color="red">"frm_priori"</font>, <font color="red">"Prioridade"</font>}, {<font color="red">"frm_situac"</font>, <font color="red">"Situação"</font>}, {<font color="red">"frm_status"</font>, <font color="red">"Status"</font>}, {<font color="red">"frm_horas"</font>, "Duração - Horas"}, {<font color="red">"frm_minut"</font>, "Duração - Minutos"}, {<font color="red">"frm_colsol_nome"</font>, <font color="red">"Colaborador Solicitante"</font>}, {<font color="red">"frm_setsol_nome_trat"</font>, <font color="red">"Setor Solicitante"</font>}, {<font color="red">"frm_colsol_set_nome_trat"</font>, <font color="red">"Setor do Colaborador Solicitante"</font>}, {<font color="red">"frm_colcap_nome_trat"</font>, <font color="red">"Técnico que Capturou"</font>}, {<font color="red">"frm_tipoco_nome_trat"</font>, <font color="red">"Tipo de Solicitação"</font>}, {<font color="red">"frm_regneg_nome_trat"</font>, <font color="red">"Tipo de serviço"</font>}, {<font color="red">"frm_avalia_nome_trat"</font>, <font color="red">"Avaliação"</font>}, {<font color="red">"frm_avalia_consat_trat"</font>, <font color="red">"Possui Avaliação"</font>}, {<font color="red">"frm_colcon_nome_trat"</font>, <font color="red">"Técnico que Concluiu a Solicitação"</font>}, {<font color="red">"frm_limite_trat"</font>, <font color="red">"Data Limite"</font>}, {<font color="red">"frm_tem_limite"</font>, <font color="red">"Possui Data Limite"</font>}}),<br></br>    #<font color="red">"Colocar Cada Palavra Em Maiúscula"</font> = <font color="purple">Table.TransformColumns</font>(#<font color="red">"Colunas Renomeadas"</font>,{{<font color="red">"Colaborador Solicitante"</font>, <font color="purple">Text.Proper</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"frm_colpre_nome"</font>, <font color="purple">Text.Proper</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Técnico que Capturou"</font>, <font color="purple">Text.Proper</font>, <font color="blue">type</font> <font color="blue">text</font>}}),<br></br>    #<font color="red">"Colunas Removidas1"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Colocar Cada Palavra Em Maiúscula"</font>,{<font color="red">"Data de captura"</font>, <font color="red">"Data de início"</font>, <font color="red">"Data Limite"</font>}),<br></br>    #<font color="red">"Tipo Alterado1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Colunas Removidas1"</font>,{{<font color="red">"Data de conclusão"</font>, <font color="blue">type</font> <font color="blue">date</font>}}),<br></br>    #<font color="red">"Coluna constante"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tipo Alterado1"</font>, <font color="red">"Tipo"</font>, each <font color="red">"Conclusão"</font>),<br></br>    #<font color="red">"Colunas Renomeadas1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Coluna constante"</font>,{{<font color="red">"Data de conclusão"</font>, <font color="red">"Data"</font>}})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Renomeadas1"</font></td></tr><tr ><td >LocalDateTable_70dd12f9-00dc-44fd-9640-5d85d1f3b936</td><td >Calendar(Date(Year(MIN('Somente data de conclusão'[Data])), 1, 1), Date(Year(MAX('Somente data de conclusão'[Data])), 12, 31))</td></tr><tr ><td >LocalDateTable_b59f12be-8fe1-4d96-9fa8-2f55882cb512</td><td >Calendar(Date(Year(MIN('Tabela Calendário'[Date])), 1, 1), Date(Year(MAX('Tabela Calendário'[Date])), 12, 31))</td></tr><tr ><td >LocalDateTable_1d71b99e-bddf-4aad-949f-4d5a69f0a82e</td><td >Calendar(Date(Year(MIN('par_solici'[Hora de início])), 1, 1), Date(Year(MAX('par_solici'[Hora de início])), 12, 31))</td></tr><tr ><td >LocalDateTable_95981c5f-7f4b-4a9e-8713-5e8e9760e397</td><td >Calendar(Date(Year(MIN('par_solici'[Hora de conclusão])), 1, 1), Date(Year(MAX('par_solici'[Hora de conclusão])), 12, 31))</td></tr></table><script>
	var toggler = document.getElementsByClassName("caret");
	for (var i = 0; i < toggler.length; i++){
		toggler[i].addEventListener("click", function() {
			this.parentElement.querySelector(".nested").classList.toggle("active");
		});
	}
		
	var togglerAll = document.getElementsByClassName("dropDownCaret");
	for (var j=0; j<togglerAll.length; j++){
		togglerAll[j].addEventListener("click", function(event){
			if (event.currentTarget != event.target) return;
			if(this.parentElement.querySelector(".nested").classList.contains("active")){
				this.querySelectorAll(".nested").forEach(function(currentValue, currentIndex, listObj) {
					if(currentValue.classList.contains("active")){
						currentValue.classList.remove("active");
					}
				});
			}
			else{
				this.querySelectorAll(".nested").forEach(function(currentValue, currentIndex, listObj) {
					if(!currentValue.classList.contains("active")){
						currentValue.classList.add("active");
					}
				});
			}
		});
	}
</script></body></html>